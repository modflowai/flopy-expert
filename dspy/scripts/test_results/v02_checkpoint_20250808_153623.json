{
  "workflows_completed": [
    "groundwater2023_watershed_example.py",
    "plot_array_example.py",
    "plot_cross_section_example.py",
    "export_tutorial.py",
    "mf6_data_tutorial03.py",
    "mf6_support_example.py",
    "seawat_tutorial01.py",
    "save_binary_data_file_example.py",
    "vtk_pathlines_example.py",
    "mf6_data_tutorial08.py",
    "mf6_data_tutorial01.py",
    "mfusg_zaidel_example.py",
    "mf6_simple_model_example.py",
    "swi2package_example3.py",
    "export_vtk_tutorial.py",
    "mf6_data_tutorial04.py",
    "mf6_data_tutorial05.py",
    "mt3d-usgs_example.py",
    "pest_tutorial01.py",
    "modelgrid_examples.py",
    "shapefile_export_example.py",
    "drain_return_example.py",
    "raster_intersection_example.py",
    "mf6_data_tutorial06.py",
    "mt3dms_examples.py",
    "mf_watertable_recharge_example.py",
    "zonebudget_example.py",
    "mf6_output_tutorial01.py",
    "mf_load_tutorial.py",
    "mf_boundaries_tutorial.py",
    "mf_tutorial01.py",
    "mfusg_freyberg_example.py",
    "mf6_sfr_tutorial01.py",
    "mf_tutorial02.py",
    "mf6_tutorial01.py",
    "plot_map_view_example.py",
    "swi2package_example4.py",
    "mf6_parallel_model_splitting_example.py",
    "mf6_mnw2_tutorial01.py",
    "mf6_lgr_tutorial01.py",
    "groundwater_paper_example_1.py",
    "array_output_tutorial.py",
    "feat_working_stack_examples.py",
    "mf_error_tutorial01.py",
    "swi2package_example1.py",
    "dis_voronoi_example.py",
    "mfusg_conduit_examples.py",
    "load_swr_binary_data_example.py",
    "lake_example.py",
    "mf6_data_tutorial07.py",
    "modpath7_create_simulation_example.py",
    "modpath6_example.py",
    "modflow_postprocessing_example.py",
    "mt3dms_ssm_package_tutorial.py",
    "get_transmissivities_example.py",
    "dis_triangle_example.py",
    "external_file_handling_tutorial.py",
    "mf6_complex_model_example.py",
    "nwt_option_blocks_tutorial.py",
    "groundwater_paper_uspb_example.py",
    "mf6_data_tutorial09.py",
    "sfrpackage_example.py",
    "uzf_example.py",
    "seawat_henry_example.py",
    "grid_intersection_example.py",
    "shapefile_feature_examples.py",
    "swi2package_example2.py",
    "mt3dms_sft_lkt_uzt_tutorial.py",
    "gridgen_example.py",
    "mf6_data_tutorial02.py",
    "mf6_data_tutorial10.py",
    "swi2package_example5.py"
  ],
  "results": [
    {
      "workflow": "array_output_tutorial.py",
      "question_idx": 1,
      "question": "How does MODFLOW-2005 interpret different Fortran format specifiers like '(10F12.2)' versus '(FREE)'",
      "rank": 1,
      "similarity_with_correct": 0.6479519758510708,
      "similarity_with_top": 0.6479519758510708,
      "top_match": "array_output_tutorial.py",
      "correct": true
    },
    {
      "workflow": "array_output_tutorial.py",
      "question_idx": 2,
      "question": "When loading a MODFLOW-2005 model with `Modflow.load`, how does FloPy determine the original `ArrayF",
      "rank": 1,
      "similarity_with_correct": 0.6272826748387383,
      "similarity_with_top": 0.6272826748387383,
      "top_match": "array_output_tutorial.py",
      "correct": true
    },
    {
      "workflow": "array_output_tutorial.py",
      "question_idx": 3,
      "question": "How can I use FloPy to force the bottom elevation array (`botm`) in my DIS file to be written with a",
      "rank": 1,
      "similarity_with_correct": 0.5567171540915383,
      "similarity_with_top": 0.5567171540915383,
      "top_match": "array_output_tutorial.py",
      "correct": true
    },
    {
      "workflow": "array_output_tutorial.py",
      "question_idx": 4,
      "question": "My LPF file's hydraulic conductivity (`hk`) array is being written in free format, but I need it in ",
      "rank": 1,
      "similarity_with_correct": 0.6051678028486087,
      "similarity_with_top": 0.6051678028486087,
      "top_match": "array_output_tutorial.py",
      "correct": true
    },
    {
      "workflow": "array_output_tutorial.py",
      "question_idx": 5,
      "question": "What happens to the `.py`, `.fortran`, and `.numpy` attributes of an `ArrayFormat` object when I set",
      "rank": 1,
      "similarity_with_correct": 0.4962883402374241,
      "similarity_with_top": 0.4962883402374241,
      "top_match": "array_output_tutorial.py",
      "correct": true
    },
    {
      "workflow": "array_output_tutorial.py",
      "question_idx": 6,
      "question": "I'm getting a MODFLOW list file error related to 'FORMAT SPECIFICATION' when reading my DIS file. Ho",
      "rank": 1,
      "similarity_with_correct": 0.6700056398448144,
      "similarity_with_top": 0.6700056398448144,
      "top_match": "array_output_tutorial.py",
      "correct": true
    },
    {
      "workflow": "array_output_tutorial.py",
      "question_idx": 7,
      "question": "After modifying the `.width` and `.decimal` properties of an `ArrayFormat` object, why might FloPy i",
      "rank": 1,
      "similarity_with_correct": 0.5764622245401834,
      "similarity_with_top": 0.5764622245401834,
      "top_match": "array_output_tutorial.py",
      "correct": true
    },
    {
      "workflow": "array_output_tutorial.py",
      "question_idx": 8,
      "question": "For ensuring data precision, when is it better to use `free format` versus a fixed Fortran format li",
      "rank": 1,
      "similarity_with_correct": 0.47977443170205136,
      "similarity_with_top": 0.47977443170205136,
      "top_match": "array_output_tutorial.py",
      "correct": true
    },
    {
      "workflow": "array_output_tutorial.py",
      "question_idx": 9,
      "question": "What is the difference between modifying the `ml.lpf.hk[0].format.fortran` string directly versus ch",
      "rank": 1,
      "similarity_with_correct": 0.548196968376687,
      "similarity_with_top": 0.548196968376687,
      "top_match": "array_output_tutorial.py",
      "correct": true
    },
    {
      "workflow": "array_output_tutorial.py",
      "question_idx": 10,
      "question": "How do you programmatically access the `.format` attribute of a `Util2d` array, change its Fortran d",
      "rank": 1,
      "similarity_with_correct": 0.5962746931670723,
      "similarity_with_top": 0.5962746931670723,
      "top_match": "array_output_tutorial.py",
      "correct": true
    },
    {
      "workflow": "dis_triangle_example.py",
      "question_idx": 1,
      "question": "In a MODFLOW 6 DISV model, how are the Voronoi cell geometries and adjacencies in the `cell2d` array",
      "rank": 1,
      "similarity_with_correct": 0.6634054211410718,
      "similarity_with_top": 0.6634054211410718,
      "top_match": "dis_triangle_example.py",
      "correct": true
    },
    {
      "workflow": "dis_triangle_example.py",
      "question_idx": 2,
      "question": "What is the role of the `vertices` list versus the `cell2d` list in the `ModflowGwfdisv` package, an",
      "rank": 1,
      "similarity_with_correct": 0.6036668037049241,
      "similarity_with_top": 0.6036668037049241,
      "top_match": "dis_triangle_example.py",
      "correct": true
    },
    {
      "workflow": "dis_triangle_example.py",
      "question_idx": 3,
      "question": "How would you modify the script to set up a finer mesh around a central point (50, 50) using the `tr",
      "rank": 1,
      "similarity_with_correct": 0.39999059685023247,
      "similarity_with_top": 0.39999059685023247,
      "top_match": "dis_triangle_example.py",
      "correct": true
    },
    {
      "workflow": "dis_triangle_example.py",
      "question_idx": 4,
      "question": "Explain the purpose of the `tri.add_hole((25, 25))` line. What arguments does this method take and h",
      "rank": 1,
      "similarity_with_correct": 0.45390971799988067,
      "similarity_with_top": 0.45390971799988067,
      "top_match": "dis_triangle_example.py",
      "correct": true
    },
    {
      "workflow": "dis_triangle_example.py",
      "question_idx": 5,
      "question": "How does the `tri.get_edge_cells(2)` method identify the specific cells that correspond to the secon",
      "rank": 1,
      "similarity_with_correct": 0.4319897353797864,
      "similarity_with_top": 0.4319897353797864,
      "top_match": "dis_triangle_example.py",
      "correct": true
    },
    {
      "workflow": "dis_triangle_example.py",
      "question_idx": 6,
      "question": "What does the error 'Triangle executable not found' indicate, and how do you resolve it when using t",
      "rank": 1,
      "similarity_with_correct": 0.4233165466134431,
      "similarity_with_top": 0.4233165466134431,
      "top_match": "dis_triangle_example.py",
      "correct": true
    },
    {
      "workflow": "dis_triangle_example.py",
      "question_idx": 7,
      "question": "If a `disv` model runs but the flow budget shows no flow from a CHD boundary, what `Triangle` class ",
      "rank": 1,
      "similarity_with_correct": 0.6592863727955484,
      "similarity_with_top": 0.6592863727955484,
      "top_match": "dis_triangle_example.py",
      "correct": true
    },
    {
      "workflow": "dis_triangle_example.py",
      "question_idx": 8,
      "question": "When is it more advantageous to use `flopy.utils.triangle` to generate a mesh versus importing a pre",
      "rank": 2,
      "similarity_with_correct": 0.5275907876030116,
      "similarity_with_top": 0.5421647382471954,
      "top_match": "groundwater2023_watershed_example.py",
      "correct": false
    },
    {
      "workflow": "dis_triangle_example.py",
      "question_idx": 9,
      "question": "Compare the process of applying a `CHD` package in this `disv` workflow using `get_edge_cells` versu",
      "rank": 1,
      "similarity_with_correct": 0.5737244245058688,
      "similarity_with_top": 0.5737244245058688,
      "top_match": "dis_triangle_example.py",
      "correct": true
    },
    {
      "workflow": "dis_triangle_example.py",
      "question_idx": 10,
      "question": "How does the `flopy.utils.triangle.Triangle` class automate the creation of the required `.node` and",
      "rank": 1,
      "similarity_with_correct": 0.5080579733026788,
      "similarity_with_top": 0.5080579733026788,
      "top_match": "dis_triangle_example.py",
      "correct": true
    },
    {
      "workflow": "dis_voronoi_example.py",
      "question_idx": 1,
      "question": "In MODFLOW 6, what is the role of the Flow Model Interface (`FMI`) package when simulating transport",
      "rank": 2,
      "similarity_with_correct": 0.587269747582318,
      "similarity_with_top": 0.6115306156233198,
      "top_match": "mf6_data_tutorial09.py",
      "correct": false
    },
    {
      "workflow": "dis_voronoi_example.py",
      "question_idx": 2,
      "question": "How does the `DISV` package in MODFLOW 6 represent the geometry of a Voronoi grid, and what informat",
      "rank": 2,
      "similarity_with_correct": 0.6297827076177036,
      "similarity_with_top": 0.6358864804860174,
      "top_match": "dis_triangle_example.py",
      "correct": false
    },
    {
      "workflow": "dis_voronoi_example.py",
      "question_idx": 3,
      "question": "How do you use `flopy.utils.voronoi.VoronoiGrid` in conjunction with `flopy.utils.triangle.Triangle`",
      "rank": 1,
      "similarity_with_correct": 0.6501528766743399,
      "similarity_with_top": 0.6501528766743399,
      "top_match": "dis_voronoi_example.py",
      "correct": true
    },
    {
      "workflow": "dis_voronoi_example.py",
      "question_idx": 4,
      "question": "Explain the process of using `flopy.utils.GridIntersect` with a `shapely.LineString` to find all cel",
      "rank": 4,
      "similarity_with_correct": 0.4808678041215782,
      "similarity_with_top": 0.6095874686157001,
      "top_match": "grid_intersection_example.py",
      "correct": false
    },
    {
      "workflow": "dis_voronoi_example.py",
      "question_idx": 5,
      "question": "How would you set up a continuous point source of concentration in a MODFLOW 6 GWT model using the C",
      "rank": 4,
      "similarity_with_correct": 0.4871979479793658,
      "similarity_with_top": 0.49809997243157383,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "dis_voronoi_example.py",
      "question_idx": 6,
      "question": "My `Triangle.build()` call is failing. What are common causes related to polygon definitions or hole",
      "rank": 2,
      "similarity_with_correct": 0.3523082237122289,
      "similarity_with_top": 0.4036027605142293,
      "top_match": "dis_triangle_example.py",
      "correct": false
    },
    {
      "workflow": "dis_voronoi_example.py",
      "question_idx": 7,
      "question": "When running my GWT model, I get an error that the flow model files (`.hds`, `.bud`) cannot be found",
      "rank": 1,
      "similarity_with_correct": 0.49535695046890615,
      "similarity_with_top": 0.49535695046890615,
      "top_match": "dis_voronoi_example.py",
      "correct": true
    },
    {
      "workflow": "dis_voronoi_example.py",
      "question_idx": 8,
      "question": "For creating a locally refined grid with the Triangle utility, what is the difference in function an",
      "rank": 4,
      "similarity_with_correct": 0.4066793090558862,
      "similarity_with_top": 0.4790407298456811,
      "top_match": "dis_triangle_example.py",
      "correct": false
    },
    {
      "workflow": "dis_voronoi_example.py",
      "question_idx": 9,
      "question": "When would it be more advantageous to use a Voronoi grid generated with `Triangle` and `VoronoiGrid`",
      "rank": 1,
      "similarity_with_correct": 0.611031461792229,
      "similarity_with_top": 0.611031461792229,
      "top_match": "dis_voronoi_example.py",
      "correct": true
    },
    {
      "workflow": "dis_voronoi_example.py",
      "question_idx": 10,
      "question": "How does this workflow use `Triangle.add_hole()` and then `Triangle.add_region()` to create a model ",
      "rank": 2,
      "similarity_with_correct": 0.5315836437490483,
      "similarity_with_top": 0.5667782144170056,
      "top_match": "dis_triangle_example.py",
      "correct": false
    },
    {
      "workflow": "drain_return_example.py",
      "question_idx": 1,
      "question": "How does the Newton-Raphson formulation in MODFLOW-NWT handle the non-linearity introduced by a Drai",
      "rank": 1,
      "similarity_with_correct": 0.6337395377038868,
      "similarity_with_top": 0.6337395377038868,
      "top_match": "drain_return_example.py",
      "correct": true
    },
    {
      "workflow": "drain_return_example.py",
      "question_idx": 2,
      "question": "What is the physical difference in how MODFLOW-NWT's DRT package handles captured water versus using",
      "rank": 1,
      "similarity_with_correct": 0.64775521735752,
      "similarity_with_top": 0.64775521735752,
      "top_match": "drain_return_example.py",
      "correct": true
    },
    {
      "workflow": "drain_return_example.py",
      "question_idx": 3,
      "question": "In the FloPy `ModflowDrt` package, how do you structure the `stress_period_data` to specify that eac",
      "rank": 1,
      "similarity_with_correct": 0.639230834687314,
      "similarity_with_top": 0.639230834687314,
      "top_match": "drain_return_example.py",
      "correct": true
    },
    {
      "workflow": "drain_return_example.py",
      "question_idx": 4,
      "question": "What is the purpose of the `return_fraction` column in the DRT package's `stress_period_data`, and h",
      "rank": 1,
      "similarity_with_correct": 0.5766177927950256,
      "similarity_with_top": 0.5766177927950256,
      "top_match": "drain_return_example.py",
      "correct": true
    },
    {
      "workflow": "drain_return_example.py",
      "question_idx": 5,
      "question": "How would you set up the `ModflowDrt` package to simulate a septic system where return flow is distr",
      "rank": 1,
      "similarity_with_correct": 0.5950563948133643,
      "similarity_with_top": 0.5950563948133643,
      "top_match": "drain_return_example.py",
      "correct": true
    },
    {
      "workflow": "drain_return_example.py",
      "question_idx": 6,
      "question": "If the DRT model fails to converge due to excessively high heads at the return location, what parame",
      "rank": 1,
      "similarity_with_correct": 0.605093705200196,
      "similarity_with_top": 0.605093705200196,
      "top_match": "drain_return_example.py",
      "correct": true
    },
    {
      "workflow": "drain_return_example.py",
      "question_idx": 7,
      "question": "When running a FloPy script, what does a 'DRT package requires NWT or LPF with IPHDRY set' error mes",
      "rank": 1,
      "similarity_with_correct": 0.5235395575567008,
      "similarity_with_top": 0.5235395575567008,
      "top_match": "drain_return_example.py",
      "correct": true
    },
    {
      "workflow": "drain_return_example.py",
      "question_idx": 8,
      "question": "When is it more appropriate to use the DRT package for agricultural return flow versus coupling a MO",
      "rank": 1,
      "similarity_with_correct": 0.6558597440833956,
      "similarity_with_top": 0.6558597440833956,
      "top_match": "drain_return_example.py",
      "correct": true
    },
    {
      "workflow": "drain_return_example.py",
      "question_idx": 9,
      "question": "Besides the return flow data columns, how does the input structure for `flopy.modflow.ModflowDrt` di",
      "rank": 1,
      "similarity_with_correct": 0.6648475529374638,
      "similarity_with_top": 0.6648475529374638,
      "top_match": "drain_return_example.py",
      "correct": true
    },
    {
      "workflow": "drain_return_example.py",
      "question_idx": 10,
      "question": "How does using the `m.remove_package()` method, as shown in this workflow, provide an advantage for ",
      "rank": 2,
      "similarity_with_correct": 0.5220680772991244,
      "similarity_with_top": 0.5362938170183038,
      "top_match": "mf6_data_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "export_tutorial.py",
      "question_idx": 1,
      "question": "What is the role of the UPW package in a MODFLOW-NWT simulation, and how would you export its specif",
      "rank": 2,
      "similarity_with_correct": 0.6172535434316724,
      "similarity_with_top": 0.6267555949558292,
      "top_match": "feat_working_stack_examples.py",
      "correct": false
    },
    {
      "workflow": "export_tutorial.py",
      "question_idx": 2,
      "question": "What is the difference between loading a model with `flopy.modflow.Modflow` versus `flopy.mf6.MFSimu",
      "rank": 4,
      "similarity_with_correct": 0.6007345915297184,
      "similarity_with_top": 0.6195533595334245,
      "top_match": "mf_load_tutorial.py",
      "correct": false
    },
    {
      "workflow": "export_tutorial.py",
      "question_idx": 3,
      "question": "How can I modify the `ml.drn.stress_period_data.export(..., sparse=True)` command to include attribu",
      "rank": 1,
      "similarity_with_correct": 0.49448165728072246,
      "similarity_with_top": 0.49448165728072246,
      "top_match": "export_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_tutorial.py",
      "question_idx": 4,
      "question": "When exporting transient recharge (`ml.rch.rech`) to a NetCDF, how does FloPy handle the time dimens",
      "rank": 1,
      "similarity_with_correct": 0.554537581049907,
      "similarity_with_top": 0.554537581049907,
      "top_match": "export_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_tutorial.py",
      "question_idx": 5,
      "question": "The workflow exports `ml.upw.hk`. How would the process differ for exporting a single value that app",
      "rank": 1,
      "similarity_with_correct": 0.4889440526889401,
      "similarity_with_top": 0.4889440526889401,
      "top_match": "export_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_tutorial.py",
      "question_idx": 6,
      "question": "I ran an export to shapefile but the `.prj` file is missing or incorrect. What specific FloPy comman",
      "rank": 3,
      "similarity_with_correct": 0.48980660020073585,
      "similarity_with_top": 0.5595170622661806,
      "top_match": "shapefile_export_example.py",
      "correct": false
    },
    {
      "workflow": "export_tutorial.py",
      "question_idx": 7,
      "question": "I am receiving an `AttributeError: 'Util2d' object has no attribute 'export'` when trying to export ",
      "rank": 2,
      "similarity_with_correct": 0.370576604988567,
      "similarity_with_top": 0.3763964371823086,
      "top_match": "shapefile_export_example.py",
      "correct": false
    },
    {
      "workflow": "export_tutorial.py",
      "question_idx": 8,
      "question": "When is it better to use `ml.export('model.nc')` to export the entire model versus using `flopy.expo",
      "rank": 1,
      "similarity_with_correct": 0.6372387859014426,
      "similarity_with_top": 0.6372387859014426,
      "top_match": "export_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_tutorial.py",
      "question_idx": 9,
      "question": "For visualizing well locations, when should I use `ml.wel.stress_period_data.export(..., sparse=True",
      "rank": 2,
      "similarity_with_correct": 0.46308444666663984,
      "similarity_with_top": 0.47809175139541094,
      "top_match": "shapefile_export_example.py",
      "correct": false
    },
    {
      "workflow": "export_tutorial.py",
      "question_idx": 10,
      "question": "How do you use the returned file object from an initial FloPy export, like `fnc = ml.dis.botm.export",
      "rank": 1,
      "similarity_with_correct": 0.5621992401707229,
      "similarity_with_top": 0.5621992401707229,
      "top_match": "export_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_vtk_tutorial.py",
      "question_idx": 1,
      "question": "What is the purpose of setting `pvd=True` when instantiating a `flopy.export.vtk.Vtk` object, and ho",
      "rank": 1,
      "similarity_with_correct": 0.6410861601339026,
      "similarity_with_top": 0.6410861601339026,
      "top_match": "export_vtk_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_vtk_tutorial.py",
      "question_idx": 2,
      "question": "How does the VTK export process handle data from a MODFLOW 6 DISV (vertex) grid compared to a tradit",
      "rank": 1,
      "similarity_with_correct": 0.6025552735614323,
      "similarity_with_top": 0.6025552735614323,
      "top_match": "export_vtk_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_vtk_tutorial.py",
      "question_idx": 3,
      "question": "How do you use `vtkobj.add_transient_list()` to visualize the time-varying flux from a `WEL` package",
      "rank": 1,
      "similarity_with_correct": 0.4836763896508589,
      "similarity_with_top": 0.4836763896508589,
      "top_match": "export_vtk_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_vtk_tutorial.py",
      "question_idx": 4,
      "question": "What specific `flopy.utils` function is used to convert 'FLOW RIGHT FACE' and 'FLOW FRONT FACE' data",
      "rank": 1,
      "similarity_with_correct": 0.5417024666756614,
      "similarity_with_top": 0.5417024666756614,
      "top_match": "export_vtk_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_vtk_tutorial.py",
      "question_idx": 5,
      "question": "Explain the process of creating a new `ModflowHfb` package for an existing model and then adding it ",
      "rank": 1,
      "similarity_with_correct": 0.6362922601442521,
      "similarity_with_top": 0.6362922601442521,
      "top_match": "export_vtk_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_vtk_tutorial.py",
      "question_idx": 6,
      "question": "If my `add_vector()` call fails with an array size mismatch error, what is the likely cause related ",
      "rank": 10,
      "similarity_with_correct": 0.244092519612851,
      "similarity_with_top": 0.3402822056615479,
      "top_match": "modelgrid_examples.py",
      "correct": false
    },
    {
      "workflow": "export_vtk_tutorial.py",
      "question_idx": 7,
      "question": "Why might my exported VTK files appear completely flat in ParaView, and what `Vtk` object parameter ",
      "rank": 1,
      "similarity_with_correct": 0.478491066919976,
      "similarity_with_top": 0.478491066919976,
      "top_match": "export_vtk_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_vtk_tutorial.py",
      "question_idx": 8,
      "question": "When is it more appropriate to use the simple `model.upw.hk.export(fmt='vtk')` method versus using a",
      "rank": 1,
      "similarity_with_correct": 0.521979512260671,
      "similarity_with_top": 0.521979512260671,
      "top_match": "export_vtk_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_vtk_tutorial.py",
      "question_idx": 9,
      "question": "What is the difference in output between `vtkobj.add_heads()` and `vtkobj.add_cell_budget()` when ex",
      "rank": 1,
      "similarity_with_correct": 0.45590042662722263,
      "similarity_with_top": 0.45590042662722263,
      "top_match": "export_vtk_tutorial.py",
      "correct": true
    },
    {
      "workflow": "export_vtk_tutorial.py",
      "question_idx": 10,
      "question": "What is the unique method in the `Vtk` class designed specifically to process and export particle tr",
      "rank": 1,
      "similarity_with_correct": 0.5441547343780192,
      "similarity_with_top": 0.5441547343780192,
      "top_match": "export_vtk_tutorial.py",
      "correct": true
    },
    {
      "workflow": "external_file_handling_tutorial.py",
      "question_idx": 1,
      "question": "In MODFLOW-2005, what is the difference in the final input files when linking an external array usin",
      "rank": 1,
      "similarity_with_correct": 0.5627920124255418,
      "similarity_with_top": 0.5627920124255418,
      "top_match": "external_file_handling_tutorial.py",
      "correct": true
    },
    {
      "workflow": "external_file_handling_tutorial.py",
      "question_idx": 2,
      "question": "How does setting `model.array_free_format = False` change how FloPy writes external files specified ",
      "rank": 1,
      "similarity_with_correct": 0.5850916493750791,
      "similarity_with_top": 0.5850916493750791,
      "top_match": "external_file_handling_tutorial.py",
      "correct": true
    },
    {
      "workflow": "external_file_handling_tutorial.py",
      "question_idx": 3,
      "question": "How do you configure the `ModflowRch` package in FloPy to use a NumPy array for stress period 1 and ",
      "rank": 2,
      "similarity_with_correct": 0.5918330784090189,
      "similarity_with_top": 0.6051261767089813,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": false
    },
    {
      "workflow": "external_file_handling_tutorial.py",
      "question_idx": 4,
      "question": "How can you use the `.how` attribute to force the `vka` array in the LPF package to be written to an",
      "rank": 1,
      "similarity_with_correct": 0.4777484509669183,
      "similarity_with_top": 0.4777484509669183,
      "top_match": "external_file_handling_tutorial.py",
      "correct": true
    },
    {
      "workflow": "external_file_handling_tutorial.py",
      "question_idx": 5,
      "question": "How do you instruct FloPy to write the `botm` array from the DIS package in a binary format while ke",
      "rank": 5,
      "similarity_with_correct": 0.44757533000905914,
      "similarity_with_top": 0.558475070764151,
      "top_match": "save_binary_data_file_example.py",
      "correct": false
    },
    {
      "workflow": "external_file_handling_tutorial.py",
      "question_idx": 6,
      "question": "What FloPy error occurs if you set `ml.lpf.hk[0].how = 'openclose'` after having set `ml.array_free_",
      "rank": 2,
      "similarity_with_correct": 0.4830350893814541,
      "similarity_with_top": 0.5171519915846234,
      "top_match": "array_output_tutorial.py",
      "correct": false
    },
    {
      "workflow": "external_file_handling_tutorial.py",
      "question_idx": 7,
      "question": "My model runs, but the file paths in my LPF file are absolute paths to my C: drive, making it non-po",
      "rank": 1,
      "similarity_with_correct": 0.4845327269453772,
      "similarity_with_top": 0.4845327269453772,
      "top_match": "external_file_handling_tutorial.py",
      "correct": true
    },
    {
      "workflow": "external_file_handling_tutorial.py",
      "question_idx": 8,
      "question": "When should I use the `external_path` model argument versus manually creating and passing file paths",
      "rank": 1,
      "similarity_with_correct": 0.4464254918064108,
      "similarity_with_top": 0.4464254918064108,
      "top_match": "external_file_handling_tutorial.py",
      "correct": true
    },
    {
      "workflow": "external_file_handling_tutorial.py",
      "question_idx": 9,
      "question": "For parameter estimation with PEST, is it better to manage external arrays using `external_path` or ",
      "rank": 1,
      "similarity_with_correct": 0.49950849888384097,
      "similarity_with_top": 0.49950849888384097,
      "top_match": "external_file_handling_tutorial.py",
      "correct": true
    },
    {
      "workflow": "external_file_handling_tutorial.py",
      "question_idx": 10,
      "question": "What is the unique purpose of the `Util2d.how` attribute that cannot be achieved by using the `exter",
      "rank": 1,
      "similarity_with_correct": 0.396103902192359,
      "similarity_with_top": 0.396103902192359,
      "top_match": "external_file_handling_tutorial.py",
      "correct": true
    },
    {
      "workflow": "feat_working_stack_examples.py",
      "question_idx": 1,
      "question": "What is the role of the UPW package in a MODFLOW-NWT simulation, and how does it help with model con",
      "rank": 2,
      "similarity_with_correct": 0.6263735952094118,
      "similarity_with_top": 0.6318027623428246,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "feat_working_stack_examples.py",
      "question_idx": 2,
      "question": "How is the Newton-Raphson formulation in MODFLOW-NWT different from the solvers used in MODFLOW-2005",
      "rank": 2,
      "similarity_with_correct": 0.5268363956517235,
      "similarity_with_top": 0.5628604733629863,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "feat_working_stack_examples.py",
      "question_idx": 3,
      "question": "How would you use `flopy.utils.MfListBudget` to get a pandas DataFrame of the volumetric budget and ",
      "rank": 2,
      "similarity_with_correct": 0.5224892483223531,
      "similarity_with_top": 0.5541855904414563,
      "top_match": "zonebudget_example.py",
      "correct": false
    },
    {
      "workflow": "feat_working_stack_examples.py",
      "question_idx": 4,
      "question": "When plotting a DRN package, how do you specify whether to visualize the drain elevation or the drai",
      "rank": 7,
      "similarity_with_correct": 0.4208601818409913,
      "similarity_with_top": 0.5382544181949108,
      "top_match": "drain_return_example.py",
      "correct": false
    },
    {
      "workflow": "feat_working_stack_examples.py",
      "question_idx": 5,
      "question": "How do you configure a FloPy `Modflow` object to write all its array-based packages (like RCH or UPW",
      "rank": 8,
      "similarity_with_correct": 0.5282015134684015,
      "similarity_with_top": 0.6084624907725251,
      "top_match": "external_file_handling_tutorial.py",
      "correct": false
    },
    {
      "workflow": "feat_working_stack_examples.py",
      "question_idx": 6,
      "question": "My MODFLOW-NWT model fails to converge. What are the first parameters in the NWT package I should ad",
      "rank": 2,
      "similarity_with_correct": 0.547963575474123,
      "similarity_with_top": 0.5745080301168852,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "feat_working_stack_examples.py",
      "question_idx": 7,
      "question": "After changing `ml.model_ws`, FloPy throws a `FileNotFoundError` when I try to run the model. What s",
      "rank": 3,
      "similarity_with_correct": 0.45147216881018615,
      "similarity_with_top": 0.45502620172696573,
      "top_match": "groundwater_paper_uspb_example.py",
      "correct": false
    },
    {
      "workflow": "feat_working_stack_examples.py",
      "question_idx": 8,
      "question": "For representing unconfined aquifer properties, when would you choose the UPW package with MODFLOW-N",
      "rank": 2,
      "similarity_with_correct": 0.5626114806251544,
      "similarity_with_top": 0.5790232639495637,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "feat_working_stack_examples.py",
      "question_idx": 9,
      "question": "What is the difference between exporting model results with `h.to_shapefile()` versus exporting mode",
      "rank": 8,
      "similarity_with_correct": 0.3620026405921002,
      "similarity_with_top": 0.4778782660152607,
      "top_match": "export_tutorial.py",
      "correct": false
    },
    {
      "workflow": "feat_working_stack_examples.py",
      "question_idx": 10,
      "question": "How can you modify the animation loop in this workflow to save each frame as a PNG file instead of d",
      "rank": 1,
      "similarity_with_correct": 0.36139882989674493,
      "similarity_with_top": 0.36139882989674493,
      "top_match": "feat_working_stack_examples.py",
      "correct": true
    },
    {
      "workflow": "get_transmissivities_example.py",
      "question_idx": 1,
      "question": "In the context of `flopy.utils.get_transmissivities`, why is the `heads` array an input argument rat",
      "rank": 1,
      "similarity_with_correct": 0.6079241662209358,
      "similarity_with_top": 0.6079241662209358,
      "top_match": "get_transmissivities_example.py",
      "correct": true
    },
    {
      "workflow": "get_transmissivities_example.py",
      "question_idx": 2,
      "question": "Why is a MODFLOW-NWT model object with an UPW package instantiated if the workflow's goal is not to ",
      "rank": 44,
      "similarity_with_correct": 0.4286804374993362,
      "similarity_with_top": 0.6062521403280727,
      "top_match": "feat_working_stack_examples.py",
      "correct": false
    },
    {
      "workflow": "get_transmissivities_example.py",
      "question_idx": 3,
      "question": "How do you use the `sctop` and `scbot` arguments in `flopy.utils.get_transmissivities` to correctly ",
      "rank": 1,
      "similarity_with_correct": 0.6351014825900219,
      "similarity_with_top": 0.6351014825900219,
      "top_match": "get_transmissivities_example.py",
      "correct": true
    },
    {
      "workflow": "get_transmissivities_example.py",
      "question_idx": 4,
      "question": "What does a transmissivity value of 0 for a specific layer indicate when using `get_transmissivities",
      "rank": 1,
      "similarity_with_correct": 0.5211861240788271,
      "similarity_with_top": 0.5211861240788271,
      "top_match": "get_transmissivities_example.py",
      "correct": true
    },
    {
      "workflow": "get_transmissivities_example.py",
      "question_idx": 5,
      "question": "How does `get_transmissivities` handle a situation where the provided head is below the bottom of a ",
      "rank": 1,
      "similarity_with_correct": 0.6130147320817562,
      "similarity_with_top": 0.6130147320817562,
      "top_match": "get_transmissivities_example.py",
      "correct": true
    },
    {
      "workflow": "get_transmissivities_example.py",
      "question_idx": 6,
      "question": "What is a common cause for `get_transmissivities` returning an array of zeros for a well, even if th",
      "rank": 1,
      "similarity_with_correct": 0.5731138039950235,
      "similarity_with_top": 0.5731138039950235,
      "top_match": "get_transmissivities_example.py",
      "correct": true
    },
    {
      "workflow": "get_transmissivities_example.py",
      "question_idx": 7,
      "question": "If you receive an IndexError when calling `get_transmissivities`, what is the likely mismatch betwee",
      "rank": 1,
      "similarity_with_correct": 0.4871323594281422,
      "similarity_with_top": 0.4871323594281422,
      "top_match": "get_transmissivities_example.py",
      "correct": true
    },
    {
      "workflow": "get_transmissivities_example.py",
      "question_idx": 8,
      "question": "When would it be more appropriate to use `flopy.utils.get_transmissivities` over a manual layer-by-l",
      "rank": 1,
      "similarity_with_correct": 0.6470148211859741,
      "similarity_with_top": 0.6470148211859741,
      "top_match": "get_transmissivities_example.py",
      "correct": true
    },
    {
      "workflow": "get_transmissivities_example.py",
      "question_idx": 9,
      "question": "How does the transmissivity calculated by `get_transmissivities` with screen intervals differ from t",
      "rank": 1,
      "similarity_with_correct": 0.600093716056638,
      "similarity_with_top": 0.600093716056638,
      "top_match": "get_transmissivities_example.py",
      "correct": true
    },
    {
      "workflow": "get_transmissivities_example.py",
      "question_idx": 10,
      "question": "How can the output of `flopy.utils.get_transmissivities` be used to compute a single, representative",
      "rank": 1,
      "similarity_with_correct": 0.6603027680102893,
      "similarity_with_top": 0.6603027680102893,
      "top_match": "get_transmissivities_example.py",
      "correct": true
    },
    {
      "workflow": "grid_intersection_example.py",
      "question_idx": 1,
      "question": "How do you use `GridIntersect` to find not just which cells a polygon intersects, but also the speci",
      "rank": 1,
      "similarity_with_correct": 0.611501979683972,
      "similarity_with_top": 0.611501979683972,
      "top_match": "grid_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "grid_intersection_example.py",
      "question_idx": 2,
      "question": "What is the difference in output between `GridIntersect.intersect()` and `GridIntersect.intersects()",
      "rank": 1,
      "similarity_with_correct": 0.6611678018423282,
      "similarity_with_top": 0.6611678018423282,
      "top_match": "grid_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "grid_intersection_example.py",
      "question_idx": 3,
      "question": "How do you set up a `flopy.discretization.VertexGrid` and then find which cells a `shapely.MultiLine",
      "rank": 1,
      "similarity_with_correct": 0.5783805578039138,
      "similarity_with_top": 0.5783805578039138,
      "top_match": "grid_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "grid_intersection_example.py",
      "question_idx": 4,
      "question": "What does the `contains_centroid=True` argument do in the `GridIntersect.intersect()` method when us",
      "rank": 1,
      "similarity_with_correct": 0.5108550278547407,
      "similarity_with_top": 0.5108550278547407,
      "top_match": "grid_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "grid_intersection_example.py",
      "question_idx": 5,
      "question": "How can you use the `min_area_fraction` argument to filter out cells that have only a very small int",
      "rank": 1,
      "similarity_with_correct": 0.4307364565282241,
      "similarity_with_top": 0.4307364565282241,
      "top_match": "grid_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "grid_intersection_example.py",
      "question_idx": 6,
      "question": "What kind of numpy array does `GridIntersect.intersect()` return, and why does it return a different",
      "rank": 1,
      "similarity_with_correct": 0.5726041524622014,
      "similarity_with_top": 0.5726041524622014,
      "top_match": "grid_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "grid_intersection_example.py",
      "question_idx": 7,
      "question": "Why might `GridIntersect.intersect()` with a Point return multiple cells when `return_all_intersecti",
      "rank": 1,
      "similarity_with_correct": 0.5220853938657681,
      "similarity_with_top": 0.5220853938657681,
      "top_match": "grid_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "grid_intersection_example.py",
      "question_idx": 8,
      "question": "When would you choose to set `rtree=False` when instantiating the `GridIntersect` class?",
      "rank": 1,
      "similarity_with_correct": 0.4827262524318626,
      "similarity_with_top": 0.4827262524318626,
      "top_match": "grid_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "grid_intersection_example.py",
      "question_idx": 9,
      "question": "How do you use `GridIntersect` to get the length of a river (represented as a LineString) within eac",
      "rank": 1,
      "similarity_with_correct": 0.5589582042401896,
      "similarity_with_top": 0.5589582042401896,
      "top_match": "grid_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "grid_intersection_example.py",
      "question_idx": 10,
      "question": "How do you plot only the intersected portions of a polygon on top of the model grid using the result",
      "rank": 1,
      "similarity_with_correct": 0.5793914298051552,
      "similarity_with_top": 0.5793914298051552,
      "top_match": "grid_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "gridgen_example.py",
      "question_idx": 1,
      "question": "What is the key difference in the `add_refinement_features` call when creating a grid for MODFLOW 6 ",
      "rank": 1,
      "similarity_with_correct": 0.6723743443531128,
      "similarity_with_top": 0.6723743443531128,
      "top_match": "gridgen_example.py",
      "correct": true
    },
    {
      "workflow": "gridgen_example.py",
      "question_idx": 2,
      "question": "What does the `nodenumber` field represent in the structured array returned by the `g.intersect()` m",
      "rank": 4,
      "similarity_with_correct": 0.3555399992191256,
      "similarity_with_top": 0.3760901569088424,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "gridgen_example.py",
      "question_idx": 3,
      "question": "How do you configure the `Gridgen` object in FloPy if the `gridgen` executable is not in your system",
      "rank": 1,
      "similarity_with_correct": 0.5359607592572525,
      "similarity_with_top": 0.5359607592572525,
      "top_match": "gridgen_example.py",
      "correct": true
    },
    {
      "workflow": "gridgen_example.py",
      "question_idx": 4,
      "question": "Explain the purpose of the `get_gridprops_disv()` method and list two key-value pairs you would expe",
      "rank": 1,
      "similarity_with_correct": 0.4544729159083956,
      "similarity_with_top": 0.4544729159083956,
      "top_match": "gridgen_example.py",
      "correct": true
    },
    {
      "workflow": "gridgen_example.py",
      "question_idx": 5,
      "question": "How would you modify the script to apply a level-4 refinement around the well points instead of the ",
      "rank": 3,
      "similarity_with_correct": 0.40807552376323947,
      "similarity_with_top": 0.430888371651552,
      "top_match": "swi2package_example5.py",
      "correct": false
    },
    {
      "workflow": "gridgen_example.py",
      "question_idx": 6,
      "question": "What does the error 'Warning, gridgen is not in your path' imply, and what is the first step to reso",
      "rank": 1,
      "similarity_with_correct": 0.3997014296066912,
      "similarity_with_top": 0.3997014296066912,
      "top_match": "gridgen_example.py",
      "correct": true
    },
    {
      "workflow": "gridgen_example.py",
      "question_idx": 7,
      "question": "If your MODFLOW 6 simulation fails to converge after creating a DISV grid with Gridgen, what grid-re",
      "rank": 1,
      "similarity_with_correct": 0.5995531415042515,
      "similarity_with_top": 0.5995531415042515,
      "top_match": "gridgen_example.py",
      "correct": true
    },
    {
      "workflow": "gridgen_example.py",
      "question_idx": 8,
      "question": "For a problem with distinct hydrogeologic units that do not span the full model thickness, why would",
      "rank": 1,
      "similarity_with_correct": 0.6661102111147498,
      "similarity_with_top": 0.6661102111147498,
      "top_match": "gridgen_example.py",
      "correct": true
    },
    {
      "workflow": "gridgen_example.py",
      "question_idx": 9,
      "question": "What is the difference between the grid property dictionaries generated by `g.get_gridprops_disu5()`",
      "rank": 1,
      "similarity_with_correct": 0.6217515192153594,
      "similarity_with_top": 0.6217515192153594,
      "top_match": "gridgen_example.py",
      "correct": true
    },
    {
      "workflow": "gridgen_example.py",
      "question_idx": 10,
      "question": "How does this workflow demonstrate creating a model where layer 1 has a refined grid but layers 2 an",
      "rank": 1,
      "similarity_with_correct": 0.6319181798202594,
      "similarity_with_top": 0.6319181798202594,
      "top_match": "gridgen_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater2023_watershed_example.py",
      "question_idx": 1,
      "question": "How do I use flopy.utils.Gridgen to create a MODFLOW 6 quadtree grid (DISV) that is refined along ri",
      "rank": 1,
      "similarity_with_correct": 0.7058188868001152,
      "similarity_with_top": 0.7058188868001152,
      "top_match": "groundwater2023_watershed_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater2023_watershed_example.py",
      "question_idx": 2,
      "question": "What are the key arguments for flopy.utils.Triangle to control the maximum cell area and minimum ang",
      "rank": 2,
      "similarity_with_correct": 0.5150252282493042,
      "similarity_with_top": 0.5995648829074776,
      "top_match": "dis_triangle_example.py",
      "correct": false
    },
    {
      "workflow": "groundwater2023_watershed_example.py",
      "question_idx": 3,
      "question": "How do I use flopy.utils.GridIntersect to get a list of cell IDs in a VertexGrid that are intersecte",
      "rank": 2,
      "similarity_with_correct": 0.5421518126908544,
      "similarity_with_top": 0.6371952782981839,
      "top_match": "grid_intersection_example.py",
      "correct": false
    },
    {
      "workflow": "groundwater2023_watershed_example.py",
      "question_idx": 4,
      "question": "What is the correct procedure for adding both polygon and line refinement features to a flopy.utils.",
      "rank": 1,
      "similarity_with_correct": 0.5784159487853013,
      "similarity_with_top": 0.5784159487853013,
      "top_match": "groundwater2023_watershed_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater2023_watershed_example.py",
      "question_idx": 5,
      "question": "How can I define the active model domain (idomain) for an unstructured Voronoi grid using a watershe",
      "rank": 1,
      "similarity_with_correct": 0.5502477412010545,
      "similarity_with_top": 0.5502477412010545,
      "top_match": "groundwater2023_watershed_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater2023_watershed_example.py",
      "question_idx": 6,
      "question": "Why is my flopy.utils.Gridgen object not creating refined cells around my input features even after ",
      "rank": 2,
      "similarity_with_correct": 0.47556588684179557,
      "similarity_with_top": 0.4934655855985519,
      "top_match": "gridgen_example.py",
      "correct": false
    },
    {
      "workflow": "groundwater2023_watershed_example.py",
      "question_idx": 7,
      "question": "I'm using `flopy.utils.GridIntersect` on a VertexGrid, but it's not finding any intersections with m",
      "rank": 2,
      "similarity_with_correct": 0.49240224994153964,
      "similarity_with_top": 0.5993402509874063,
      "top_match": "grid_intersection_example.py",
      "correct": false
    },
    {
      "workflow": "groundwater2023_watershed_example.py",
      "question_idx": 8,
      "question": "For modeling rivers in a watershed, what are the advantages of using a grid generated by flopy.utils",
      "rank": 1,
      "similarity_with_correct": 0.6899438125343693,
      "similarity_with_top": 0.6899438125343693,
      "top_match": "groundwater2023_watershed_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater2023_watershed_example.py",
      "question_idx": 9,
      "question": "When is it more appropriate to use `flopy.utils.lgrutil.Lgr` for local refinement versus creating a ",
      "rank": 1,
      "similarity_with_correct": 0.5961009150939409,
      "similarity_with_top": 0.5961009150939409,
      "top_match": "groundwater2023_watershed_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater2023_watershed_example.py",
      "question_idx": 10,
      "question": "How can I generate and plot six different MODFLOW grid types (uniform, variable-spacing, LGR, quadtr",
      "rank": 1,
      "similarity_with_correct": 0.6713745766055027,
      "similarity_with_top": 0.6713745766055027,
      "top_match": "groundwater2023_watershed_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_example_1.py",
      "question_idx": 1,
      "question": "What is the role of `laytyp=1` in the MODFLOW-2005 LPF package, and how does it affect the calculati",
      "rank": 3,
      "similarity_with_correct": 0.5313970530350385,
      "similarity_with_top": 0.5389416016272977,
      "top_match": "get_transmissivities_example.py",
      "correct": false
    },
    {
      "workflow": "groundwater_paper_example_1.py",
      "question_idx": 2,
      "question": "How does FloPy's `fpm.Modflow` class for MODFLOW-2005 differ from the `flopy.mf6.MFSimulation` class",
      "rank": 3,
      "similarity_with_correct": 0.6180217185110632,
      "similarity_with_top": 0.6692033811990024,
      "top_match": "mf6_data_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "groundwater_paper_example_1.py",
      "question_idx": 3,
      "question": "In the `ModflowWel` package, why is the well data (`lrcQ`) passed as a dictionary keyed by stress pe",
      "rank": 3,
      "similarity_with_correct": 0.5713939175325831,
      "similarity_with_top": 0.6075020755216002,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": false
    },
    {
      "workflow": "groundwater_paper_example_1.py",
      "question_idx": 4,
      "question": "How would you modify the `fpm.ModflowBas` call in this script to change the side boundaries from con",
      "rank": 1,
      "similarity_with_correct": 0.5854554256950638,
      "similarity_with_top": 0.5854554256950638,
      "top_match": "groundwater_paper_example_1.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_example_1.py",
      "question_idx": 5,
      "question": "How does the input data structure for `fpm.ModflowRch` (a single value for `rech`) differ from the l",
      "rank": 3,
      "similarity_with_correct": 0.5466142685695705,
      "similarity_with_top": 0.5772862758970319,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": false
    },
    {
      "workflow": "groundwater_paper_example_1.py",
      "question_idx": 6,
      "question": "My MODFLOW-2005 model reports 'Normal termination of simulation', but the `gwexample.hds` file is no",
      "rank": 1,
      "similarity_with_correct": 0.5288988686206074,
      "similarity_with_top": 0.5288988686206074,
      "top_match": "groundwater_paper_example_1.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_example_1.py",
      "question_idx": 7,
      "question": "My similar cross-sectional model with recharge and wells is not converging using `fpm.ModflowPcg`. W",
      "rank": 1,
      "similarity_with_correct": 0.5718301232808873,
      "similarity_with_top": 0.5718301232808873,
      "top_match": "groundwater_paper_example_1.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_example_1.py",
      "question_idx": 8,
      "question": "For defining hydraulic properties in MODFLOW-2005, when would you choose the Block-Centered Flow (BC",
      "rank": 1,
      "similarity_with_correct": 0.587150299152206,
      "similarity_with_top": 0.587150299152206,
      "top_match": "groundwater_paper_example_1.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_example_1.py",
      "question_idx": 9,
      "question": "For setting fixed heads, when is it more appropriate to use the Constant Head Boundary (CHD) package",
      "rank": 2,
      "similarity_with_correct": 0.4599980565134432,
      "similarity_with_top": 0.5849664790874626,
      "top_match": "lake_example.py",
      "correct": false
    },
    {
      "workflow": "groundwater_paper_example_1.py",
      "question_idx": 10,
      "question": "This workflow uses `ibound = -1` to set constant heads at the model edges. Which specific input para",
      "rank": 1,
      "similarity_with_correct": 0.5877619257406735,
      "similarity_with_top": 0.5877619257406735,
      "top_match": "groundwater_paper_example_1.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_uspb_example.py",
      "question_idx": 1,
      "question": "In a MODFLOW-2005 context, what does the 'capture fraction' that this workflow visualizes represent ",
      "rank": 1,
      "similarity_with_correct": 0.5635434696239879,
      "similarity_with_top": 0.5635434696239879,
      "top_match": "groundwater_paper_uspb_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_uspb_example.py",
      "question_idx": 2,
      "question": "What are the typical precursor modeling steps (e.g., particle tracking) needed to generate the captu",
      "rank": 1,
      "similarity_with_correct": 0.5468926915588164,
      "similarity_with_top": 0.5468926915588164,
      "top_match": "groundwater_paper_uspb_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_uspb_example.py",
      "question_idx": 3,
      "question": "How do you use FloPy's `plot_bc` function to specifically display only the Stream (STR) package reac",
      "rank": 1,
      "similarity_with_correct": 0.5776311268920191,
      "similarity_with_top": 0.5776311268920191,
      "top_match": "groundwater_paper_uspb_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_uspb_example.py",
      "question_idx": 4,
      "question": "What are the 'FLOW RIGHT FACE' and 'FLOW FRONT FACE' budget terms, and how does `flopy.utils.postpro",
      "rank": 1,
      "similarity_with_correct": 0.5576403789724045,
      "similarity_with_top": 0.5576403789724045,
      "top_match": "groundwater_paper_uspb_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_uspb_example.py",
      "question_idx": 5,
      "question": "How can you load an existing MODFLOW-2005 model using its name file, change its workspace to a tempo",
      "rank": 3,
      "similarity_with_correct": 0.48497472388900936,
      "similarity_with_top": 0.5246232340532198,
      "top_match": "mf_load_tutorial.py",
      "correct": false
    },
    {
      "workflow": "groundwater_paper_uspb_example.py",
      "question_idx": 6,
      "question": "My `plt.imshow` overlay of capture fraction data is misaligned with my model grid from `PlotMapView`",
      "rank": 1,
      "similarity_with_correct": 0.45808644392760656,
      "similarity_with_top": 0.45808644392760656,
      "top_match": "groundwater_paper_uspb_example.py",
      "correct": true
    },
    {
      "workflow": "groundwater_paper_uspb_example.py",
      "question_idx": 7,
      "question": "Why might a call to `ml.run_model()` fail with an input file error after using `ml.change_model_ws()",
      "rank": 5,
      "similarity_with_correct": 0.31656794649295295,
      "similarity_with_top": 0.3424272965413528,
      "top_match": "mf_error_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "groundwater_paper_uspb_example.py",
      "question_idx": 8,
      "question": "When plotting external data on a model grid, why would you choose `scipy.ndimage.zoom` with `order=0",
      "rank": 7,
      "similarity_with_correct": 0.3283527314837838,
      "similarity_with_top": 0.37349463861117227,
      "top_match": "raster_intersection_example.py",
      "correct": false
    },
    {
      "workflow": "groundwater_paper_uspb_example.py",
      "question_idx": 9,
      "question": "What is the difference between using `mm.plot_array(h)` to plot simulated heads versus using `plt.im",
      "rank": 6,
      "similarity_with_correct": 0.3732336281747982,
      "similarity_with_top": 0.4759818559357467,
      "top_match": "plot_array_example.py",
      "correct": false
    },
    {
      "workflow": "groundwater_paper_uspb_example.py",
      "question_idx": 10,
      "question": "How can I load a text file containing a 2D array of data and overlay it as a colormap on top of a `P",
      "rank": 3,
      "similarity_with_correct": 0.3855313532471553,
      "similarity_with_top": 0.4442426713957077,
      "top_match": "plot_map_view_example.py",
      "correct": false
    },
    {
      "workflow": "lake_example.py",
      "question_idx": 1,
      "question": "In a MODFLOW-2005 model, what is the functional difference between setting `ibound=-1` to represent ",
      "rank": 1,
      "similarity_with_correct": 0.619847068905982,
      "similarity_with_top": 0.619847068905982,
      "top_match": "lake_example.py",
      "correct": true
    },
    {
      "workflow": "lake_example.py",
      "question_idx": 2,
      "question": "How does MODFLOW-2005 interpret the head values provided in the `strt` array when a steady-state sim",
      "rank": 1,
      "similarity_with_correct": 0.5431149976676528,
      "similarity_with_top": 0.5431149976676528,
      "top_match": "lake_example.py",
      "correct": true
    },
    {
      "workflow": "lake_example.py",
      "question_idx": 3,
      "question": "How do you modify the `ModflowBas` package in FloPy to set the head for constant-head cells defined ",
      "rank": 2,
      "similarity_with_correct": 0.6216607580779971,
      "similarity_with_top": 0.6270367296581607,
      "top_match": "mf_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "lake_example.py",
      "question_idx": 4,
      "question": "To make the hydraulic conductivity ten times higher in the top layer than the bottom nine layers in ",
      "rank": 1,
      "similarity_with_correct": 0.5525287045064823,
      "similarity_with_top": 0.5525287045064823,
      "top_match": "lake_example.py",
      "correct": true
    },
    {
      "workflow": "lake_example.py",
      "question_idx": 5,
      "question": "What is the role of the `laycbd` argument in the `ModflowDis` package, and what does setting `laycbd",
      "rank": 1,
      "similarity_with_correct": 0.5099820726136775,
      "similarity_with_top": 0.5099820726136775,
      "top_match": "lake_example.py",
      "correct": true
    },
    {
      "workflow": "lake_example.py",
      "question_idx": 6,
      "question": "My model runs, but the heads are uniform at 100 everywhere except the central cell. What is the most",
      "rank": 1,
      "similarity_with_correct": 0.5176319986211269,
      "similarity_with_top": 0.5176319986211269,
      "top_match": "lake_example.py",
      "correct": true
    },
    {
      "workflow": "lake_example.py",
      "question_idx": 7,
      "question": "After running the model, I get a `LIST FILE` error indicating high head changes and non-convergence.",
      "rank": 1,
      "similarity_with_correct": 0.5731876728144293,
      "similarity_with_top": 0.5731876728144293,
      "top_match": "lake_example.py",
      "correct": true
    },
    {
      "workflow": "lake_example.py",
      "question_idx": 8,
      "question": "When is it more appropriate to use the River (RIV) package instead of setting a line of constant-hea",
      "rank": 1,
      "similarity_with_correct": 0.5089579679629632,
      "similarity_with_top": 0.5089579679629632,
      "top_match": "lake_example.py",
      "correct": true
    },
    {
      "workflow": "lake_example.py",
      "question_idx": 9,
      "question": "What are the main advantages of using the specialized Lake (LAK) package over this workflow's simpli",
      "rank": 1,
      "similarity_with_correct": 0.6012552062542007,
      "similarity_with_top": 0.6012552062542007,
      "top_match": "lake_example.py",
      "correct": true
    },
    {
      "workflow": "lake_example.py",
      "question_idx": 10,
      "question": "How would the final head distribution in layer 5 differ if the central constant-head cell was moved ",
      "rank": 1,
      "similarity_with_correct": 0.4654617972591337,
      "similarity_with_top": 0.4654617972591337,
      "top_match": "lake_example.py",
      "correct": true
    },
    {
      "workflow": "load_swr_binary_data_example.py",
      "question_idx": 1,
      "question": "What is the difference between the data in a `.stg` file and a `.flow` file from the MODFLOW SWR Pro",
      "rank": 1,
      "similarity_with_correct": 0.5916946045739641,
      "similarity_with_top": 0.5916946045739641,
      "top_match": "load_swr_binary_data_example.py",
      "correct": true
    },
    {
      "workflow": "load_swr_binary_data_example.py",
      "question_idx": 2,
      "question": "How does the SWR Process represent flow through a culvert, and which FloPy utility class is used to ",
      "rank": 1,
      "similarity_with_correct": 0.6583317533707391,
      "similarity_with_top": 0.6583317533707391,
      "top_match": "load_swr_binary_data_example.py",
      "correct": true
    },
    {
      "workflow": "load_swr_binary_data_example.py",
      "question_idx": 3,
      "question": "How do you use `flopy.utils.SwrFlow.get_ts()` to extract the flow time series for a specific connect",
      "rank": 1,
      "similarity_with_correct": 0.48863995279233075,
      "similarity_with_top": 0.48863995279233075,
      "top_match": "load_swr_binary_data_example.py",
      "correct": true
    },
    {
      "workflow": "load_swr_binary_data_example.py",
      "question_idx": 4,
      "question": "What arguments (like `irec` or `istr`) are needed for the `.get_ts()` method of the `flopy.utils.Swr",
      "rank": 1,
      "similarity_with_correct": 0.4649420749280211,
      "similarity_with_top": 0.4649420749280211,
      "top_match": "load_swr_binary_data_example.py",
      "correct": true
    },
    {
      "workflow": "load_swr_binary_data_example.py",
      "question_idx": 5,
      "question": "To plot a time series of stage for reach 13, which method and class would you use: `flopy.utils.SwrS",
      "rank": 1,
      "similarity_with_correct": 0.5216995780334175,
      "similarity_with_top": 0.5216995780334175,
      "top_match": "load_swr_binary_data_example.py",
      "correct": true
    },
    {
      "workflow": "load_swr_binary_data_example.py",
      "question_idx": 6,
      "question": "Why might I get a `KeyError: 'OBS9'` when trying to access data from the `SwrObs` object if I know o",
      "rank": 1,
      "similarity_with_correct": 0.3598243859563969,
      "similarity_with_top": 0.3598243859563969,
      "top_match": "load_swr_binary_data_example.py",
      "correct": true
    },
    {
      "workflow": "load_swr_binary_data_example.py",
      "question_idx": 7,
      "question": "My SWR water surface profile plotted with `PlotCrossSection` shows vertical steps instead of a conti",
      "rank": 1,
      "similarity_with_correct": 0.5315592039397273,
      "similarity_with_top": 0.5315592039397273,
      "top_match": "load_swr_binary_data_example.py",
      "correct": true
    },
    {
      "workflow": "load_swr_binary_data_example.py",
      "question_idx": 8,
      "question": "When post-processing SWR results, what is the advantage of using the consolidated `.obs` file versus",
      "rank": 1,
      "similarity_with_correct": 0.6042684314426126,
      "similarity_with_top": 0.6042684314426126,
      "top_match": "load_swr_binary_data_example.py",
      "correct": true
    },
    {
      "workflow": "load_swr_binary_data_example.py",
      "question_idx": 9,
      "question": "For analyzing reach-aquifer interaction, should I use the `flopy.utils.SwrBudget` or `flopy.utils.Sw",
      "rank": 1,
      "similarity_with_correct": 0.5421938649893687,
      "similarity_with_top": 0.5421938649893687,
      "top_match": "load_swr_binary_data_example.py",
      "correct": true
    },
    {
      "workflow": "load_swr_binary_data_example.py",
      "question_idx": 10,
      "question": "How does this workflow create a spatially correct cross-section plot using `PlotCrossSection` when t",
      "rank": 2,
      "similarity_with_correct": 0.5475434968960907,
      "similarity_with_top": 0.5807404710380664,
      "top_match": "plot_cross_section_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_complex_model_example.py",
      "question_idx": 1,
      "question": "How do you configure a MODFLOW 6 GWF model in FloPy to have an initial steady-state stress period fo",
      "rank": 2,
      "similarity_with_correct": 0.6212330634655192,
      "similarity_with_top": 0.7046093628926658,
      "top_match": "mf_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_complex_model_example.py",
      "question_idx": 2,
      "question": "What is the purpose of the `icelltype` array in the MODFLOW 6 NPF package, and how does `icelltype=[",
      "rank": 3,
      "similarity_with_correct": 0.4601411313486278,
      "similarity_with_top": 0.46164504915583315,
      "top_match": "mf6_simple_model_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_complex_model_example.py",
      "question_idx": 3,
      "question": "How would you set up three different, spatially-distinct recharge zones in a single MODFLOW 6 model ",
      "rank": 1,
      "similarity_with_correct": 0.613569524271639,
      "similarity_with_top": 0.613569524271639,
      "top_match": "mf6_complex_model_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_complex_model_example.py",
      "question_idx": 4,
      "question": "In the FloPy `ModflowGwfwel` package, what is the purpose of setting `timeseries=True` when defining",
      "rank": 8,
      "similarity_with_correct": 0.5016398198811249,
      "similarity_with_top": 0.5876544072524621,
      "top_match": "mf_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_complex_model_example.py",
      "question_idx": 5,
      "question": "How can you define an observation in FloPy to monitor the total flow through a GHB boundary that has",
      "rank": 2,
      "similarity_with_correct": 0.497231189164428,
      "similarity_with_top": 0.6335454861547481,
      "top_match": "mf6_data_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_complex_model_example.py",
      "question_idx": 6,
      "question": "My MODFLOW 6 simulation with a time-varying RCH package fails. What is a common mistake when using `",
      "rank": 1,
      "similarity_with_correct": 0.5528610504557359,
      "similarity_with_top": 0.5528610504557359,
      "top_match": "mf6_complex_model_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_complex_model_example.py",
      "question_idx": 7,
      "question": "I'm trying to analyze the `FLOW-JA-FACE` output from my MODFLOW 6 budget file, but the array is one-",
      "rank": 7,
      "similarity_with_correct": 0.5549191421678049,
      "similarity_with_top": 0.5924200048999393,
      "top_match": "mf6_simple_model_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_complex_model_example.py",
      "question_idx": 8,
      "question": "When is it better to define observations using a separate `flopy.mf6.ModflowUtlobs` package versus u",
      "rank": 3,
      "similarity_with_correct": 0.5862052570902282,
      "similarity_with_top": 0.690221136984235,
      "top_match": "mf6_data_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_complex_model_example.py",
      "question_idx": 9,
      "question": "For a tidal boundary in MODFLOW 6, why would you use a GHB package with a time series and a conducta",
      "rank": 3,
      "similarity_with_correct": 0.5878973800853198,
      "similarity_with_top": 0.6146194675469758,
      "top_match": "mf6_data_tutorial03.py",
      "correct": false
    },
    {
      "workflow": "mf6_complex_model_example.py",
      "question_idx": 10,
      "question": "How does this workflow implement three independent recharge time series (`rch_1`, `rch_2`, `rch_3`) ",
      "rank": 1,
      "similarity_with_correct": 0.5979495541432284,
      "similarity_with_top": 0.5979495541432284,
      "top_match": "mf6_complex_model_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial01.py",
      "question_idx": 1,
      "question": "In FloPy's MODFLOW 6 interface, what is the difference between a simulation-level package like TDIS ",
      "rank": 1,
      "similarity_with_correct": 0.7017051012732618,
      "similarity_with_top": 0.7017051012732618,
      "top_match": "mf6_data_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial01.py",
      "question_idx": 2,
      "question": "How does the `SIMULATION -> MODEL -> PACKAGE` structure in MODFLOW 6 differ from the single, monolit",
      "rank": 1,
      "similarity_with_correct": 0.6789684822369586,
      "similarity_with_top": 0.6789684822369586,
      "top_match": "mf6_data_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial01.py",
      "question_idx": 3,
      "question": "How would you programmatically access the Iterative Model Solution (IMS) package in a FloPy MF6 simu",
      "rank": 1,
      "similarity_with_correct": 0.5423927691442612,
      "similarity_with_top": 0.5423927691442612,
      "top_match": "mf6_data_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial01.py",
      "question_idx": 4,
      "question": "What is the purpose of the `nam` package returned by `sim.get_package('nam')` and why is it generall",
      "rank": 1,
      "similarity_with_correct": 0.4372968666953106,
      "similarity_with_top": 0.4372968666953106,
      "top_match": "mf6_data_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial01.py",
      "question_idx": 5,
      "question": "In the `ModflowGwfoc` package, what is the functional difference between setting the `head_filerecor",
      "rank": 3,
      "similarity_with_correct": 0.4284092111142817,
      "similarity_with_top": 0.4509860469511319,
      "top_match": "mf6_data_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial01.py",
      "question_idx": 6,
      "question": "If I get an `AttributeError` when trying to access `sim.dis`, but `sim.tdis` works perfectly, what i",
      "rank": 1,
      "similarity_with_correct": 0.5830964909220366,
      "similarity_with_top": 0.5830964909220366,
      "top_match": "mf6_data_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial01.py",
      "question_idx": 7,
      "question": "After setting `sim.verify_data = False`, my simulation fails to run with a cryptic MODFLOW error. Wh",
      "rank": 1,
      "similarity_with_correct": 0.49982008072807843,
      "similarity_with_top": 0.49982008072807843,
      "top_match": "mf6_data_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial01.py",
      "question_idx": 8,
      "question": "When is it more appropriate to use `sim.get_model('my_gwf_model')` versus accessing the `gwf` object",
      "rank": 2,
      "similarity_with_correct": 0.44100538250647114,
      "similarity_with_top": 0.45355351809401845,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial01.py",
      "question_idx": 9,
      "question": "What is the difference in purpose between setting `sim.simulation_data.verbosity_level = 3` and conf",
      "rank": 1,
      "similarity_with_correct": 0.5925542521445787,
      "similarity_with_top": 0.5925542521445787,
      "top_match": "mf6_data_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial01.py",
      "question_idx": 10,
      "question": "How can you programmatically change the indentation style for all generated MODFLOW 6 package files ",
      "rank": 1,
      "similarity_with_correct": 0.5525018454185651,
      "similarity_with_top": 0.5525018454185651,
      "top_match": "mf6_data_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial02.py",
      "question_idx": 1,
      "question": "What is the purpose of the `boundnames` keyword in a MODFLOW 6 boundary package when defining observ",
      "rank": 1,
      "similarity_with_correct": 0.608412950399833,
      "similarity_with_top": 0.608412950399833,
      "top_match": "mf6_data_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial02.py",
      "question_idx": 2,
      "question": "How do package-level observations in MODFLOW 6, like those for GHB or WEL, differ conceptually from ",
      "rank": 1,
      "similarity_with_correct": 0.6758435529820368,
      "similarity_with_top": 0.6758435529820368,
      "top_match": "mf6_data_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial02.py",
      "question_idx": 3,
      "question": "How do you define an observation in FloPy to track the total flow from all GHB cells that share the ",
      "rank": 1,
      "similarity_with_correct": 0.5896832724039045,
      "similarity_with_top": 0.5896832724039045,
      "top_match": "mf6_data_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial02.py",
      "question_idx": 4,
      "question": "What is the functional difference between passing an `observations` dictionary to the `ModflowGwfghb",
      "rank": 1,
      "similarity_with_correct": 0.667036285383386,
      "similarity_with_top": 0.667036285383386,
      "top_match": "mf6_data_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial02.py",
      "question_idx": 5,
      "question": "What is the precise syntax for the dictionary key to instruct FloPy to write GHB observation data to",
      "rank": 1,
      "similarity_with_correct": 0.5223777075530245,
      "similarity_with_top": 0.5223777075530245,
      "top_match": "mf6_data_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial02.py",
      "question_idx": 6,
      "question": "Why would MODFLOW 6 produce an error that an observation `boundname` is not found, even if it's corr",
      "rank": 1,
      "similarity_with_correct": 0.5955338657052985,
      "similarity_with_top": 0.5955338657052985,
      "top_match": "mf6_data_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial02.py",
      "question_idx": 7,
      "question": "If I call `ghb.obs.initialize()` but the observation file isn't created, what crucial keyword argume",
      "rank": 1,
      "similarity_with_correct": 0.5369061304678087,
      "similarity_with_top": 0.5369061304678087,
      "top_match": "mf6_data_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial02.py",
      "question_idx": 8,
      "question": "For monitoring a river boundary, when would it be preferable to observe a `GHB` package using a `bou",
      "rank": 1,
      "similarity_with_correct": 0.5331068469905034,
      "similarity_with_top": 0.5331068469905034,
      "top_match": "mf6_data_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial02.py",
      "question_idx": 9,
      "question": "In FloPy, what is the practical difference between creating observations for a `GHB` package via its",
      "rank": 1,
      "similarity_with_correct": 0.7259041551112667,
      "similarity_with_top": 0.7259041551112667,
      "top_match": "mf6_data_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial02.py",
      "question_idx": 10,
      "question": "What is the specific Python data structure (dictionary, lists, tuples) used to define two separate o",
      "rank": 1,
      "similarity_with_correct": 0.5653324365867947,
      "similarity_with_top": 0.5653324365867947,
      "top_match": "mf6_data_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial03.py",
      "question_idx": 1,
      "question": "In MODFLOW 6, what is the purpose of the `tsname` key when defining `stress_period_data` for a GHB p",
      "rank": 1,
      "similarity_with_correct": 0.6174940439219078,
      "similarity_with_top": 0.6174940439219078,
      "top_match": "mf6_data_tutorial03.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial03.py",
      "question_idx": 2,
      "question": "How does the MODFLOW 6 Time Series (TS) package improve upon the method of specifying transient boun",
      "rank": 1,
      "similarity_with_correct": 0.661397014080861,
      "similarity_with_top": 0.661397014080861,
      "top_match": "mf6_data_tutorial03.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial03.py",
      "question_idx": 3,
      "question": "How do you configure a FloPy `ModflowGwfghb` package to use 'linearend' interpolation for its associ",
      "rank": 1,
      "similarity_with_correct": 0.5754992899614184,
      "similarity_with_top": 0.5754992899614184,
      "top_match": "mf6_data_tutorial03.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial03.py",
      "question_idx": 4,
      "question": "What is the difference in workflow between passing a `timeseries` dictionary to the `ModflowGwfghb` ",
      "rank": 1,
      "similarity_with_correct": 0.6271697467352173,
      "similarity_with_top": 0.6271697467352173,
      "top_match": "mf6_data_tutorial03.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial03.py",
      "question_idx": 5,
      "question": "Explain how to use the `ghb.ts.append_package()` method to add a second, independent time series to ",
      "rank": 1,
      "similarity_with_correct": 0.602910421155856,
      "similarity_with_top": 0.602910421155856,
      "top_match": "mf6_data_tutorial03.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial03.py",
      "question_idx": 6,
      "question": "If MODFLOW 6 aborts with an error 'TIME SERIES NAME ... NOT FOUND IN ANY TS PACKAGE', what is the mo",
      "rank": 1,
      "similarity_with_correct": 0.7093428135922516,
      "similarity_with_top": 0.7093428135922516,
      "top_match": "mf6_data_tutorial03.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial03.py",
      "question_idx": 7,
      "question": "My model runs, but the boundary head changes abruptly at the start of each time series entry instead",
      "rank": 4,
      "similarity_with_correct": 0.3791444857727817,
      "similarity_with_top": 0.3852592527156116,
      "top_match": "lake_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial03.py",
      "question_idx": 8,
      "question": "When would you choose to use the `ghb.ts.initialize()` and `append_package()` method over simply pas",
      "rank": 1,
      "similarity_with_correct": 0.5707517193784316,
      "similarity_with_top": 0.5707517193784316,
      "top_match": "mf6_data_tutorial03.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial03.py",
      "question_idx": 9,
      "question": "For modeling seasonal pumping changes, is it better to use the MODFLOW 6 TS package with a 'stepwise",
      "rank": 3,
      "similarity_with_correct": 0.5465554404990534,
      "similarity_with_top": 0.5621648672451584,
      "top_match": "mf_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial03.py",
      "question_idx": 10,
      "question": "How does this workflow demonstrate adding multiple, uniquely named time series ('tides', 'wl', 'wl2'",
      "rank": 1,
      "similarity_with_correct": 0.5659171484847431,
      "similarity_with_top": 0.5659171484847431,
      "top_match": "mf6_data_tutorial03.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial04.py",
      "question_idx": 1,
      "question": "What is the role of the `time_series_namerecord` when defining a Time Array Series in a MODFLOW 6 GW",
      "rank": 1,
      "similarity_with_correct": 0.5268280158255758,
      "similarity_with_top": 0.5268280158255758,
      "top_match": "mf6_data_tutorial04.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial04.py",
      "question_idx": 2,
      "question": "How does the `interpolation_methodrecord` ('LINEAR' vs. 'STEPWISE') affect the applied recharge valu",
      "rank": 1,
      "similarity_with_correct": 0.490360700413357,
      "similarity_with_top": 0.490360700413357,
      "top_match": "mf6_data_tutorial04.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial04.py",
      "question_idx": 3,
      "question": "In FloPy, how do you configure the `mfgwfrcha` package with a time-varying recharge by passing a dic",
      "rank": 1,
      "similarity_with_correct": 0.5844846687922017,
      "similarity_with_top": 0.5844846687922017,
      "top_match": "mf6_data_tutorial04.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial04.py",
      "question_idx": 4,
      "question": "Explain the steps to add a Time Array Series to an existing `RCHA` package object in FloPy using the",
      "rank": 1,
      "similarity_with_correct": 0.6664997495670644,
      "similarity_with_top": 0.6664997495670644,
      "top_match": "mf6_data_tutorial04.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial04.py",
      "question_idx": 5,
      "question": "What is the purpose of the `recharge='TIMEARRAYSERIES rcharray_1'` argument when creating a `Modflow",
      "rank": 1,
      "similarity_with_correct": 0.6964504158311077,
      "similarity_with_top": 0.6964504158311077,
      "top_match": "mf6_data_tutorial04.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial04.py",
      "question_idx": 6,
      "question": "If I receive a FloPy warning 'there is not yet a time series name record for rcharray_1' after creat",
      "rank": 1,
      "similarity_with_correct": 0.4985368161699396,
      "similarity_with_top": 0.4985368161699396,
      "top_match": "mf6_data_tutorial04.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial04.py",
      "question_idx": 7,
      "question": "My MODFLOW 6 simulation fails with an error in the TAS file. What are common mistakes in defining th",
      "rank": 1,
      "similarity_with_correct": 0.6243828620722178,
      "similarity_with_top": 0.6243828620722178,
      "top_match": "mf6_data_tutorial04.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial04.py",
      "question_idx": 8,
      "question": "When would you choose to define a Time Array Series during package instantiation versus using the po",
      "rank": 1,
      "similarity_with_correct": 0.5706331288606756,
      "similarity_with_top": 0.5706331288606756,
      "top_match": "mf6_data_tutorial04.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial04.py",
      "question_idx": 9,
      "question": "How does implementing time-varying recharge with a MODFLOW 6 Time Array Series differ from the tradi",
      "rank": 1,
      "similarity_with_correct": 0.6079861773267363,
      "similarity_with_top": 0.6079861773267363,
      "top_match": "mf6_data_tutorial04.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial04.py",
      "question_idx": 10,
      "question": "This workflow demonstrates two distinct programmatic approaches in FloPy for associating TAS data wi",
      "rank": 2,
      "similarity_with_correct": 0.5709899603575036,
      "similarity_with_top": 0.5805268232472707,
      "top_match": "mf6_data_tutorial10.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial05.py",
      "question_idx": 1,
      "question": "What is the role of the `MFScalar` data object in the FloPy MODFLOW 6 interface, and how does it dif",
      "rank": 1,
      "similarity_with_correct": 0.6586759661002787,
      "similarity_with_top": 0.6586759661002787,
      "top_match": "mf6_data_tutorial05.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial05.py",
      "question_idx": 2,
      "question": "In a MODFLOW 6 GWF model, how can you use FloPy to retrieve the exact text string that will be writt",
      "rank": 1,
      "similarity_with_correct": 0.6031253521393201,
      "similarity_with_top": 0.6031253521393201,
      "top_match": "mf6_data_tutorial05.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial05.py",
      "question_idx": 3,
      "question": "How do you change the `time_units` in the TDIS package from 'DAYS' to 'MONTHS' *after* the `ModflowT",
      "rank": 2,
      "similarity_with_correct": 0.46191450749413276,
      "similarity_with_top": 0.4652389678118293,
      "top_match": "mf6_data_tutorial03.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial05.py",
      "question_idx": 4,
      "question": "What are the different ways to specify the `xt3doptions` in the NPF package to enable both 'xt3d' an",
      "rank": 1,
      "similarity_with_correct": 0.4066603660757847,
      "similarity_with_top": 0.4066603660757847,
      "top_match": "mf6_data_tutorial05.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial05.py",
      "question_idx": 5,
      "question": "After creating a `ModflowGwfdis` object with `nogrb=True`, what line of code is needed to turn this ",
      "rank": 2,
      "similarity_with_correct": 0.45026747790654875,
      "similarity_with_top": 0.46245043182251655,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial05.py",
      "question_idx": 6,
      "question": "If you get an `AttributeError: can't set attribute` when trying to change a package setting, what is",
      "rank": 1,
      "similarity_with_correct": 0.5299778106437028,
      "similarity_with_top": 0.5299778106437028,
      "top_match": "mf6_data_tutorial05.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial05.py",
      "question_idx": 7,
      "question": "If your MODFLOW 6 simulation fails on startup, how could you use the `.get_file_entry()` method on y",
      "rank": 1,
      "similarity_with_correct": 0.49346380041604365,
      "similarity_with_top": 0.49346380041604365,
      "top_match": "mf6_data_tutorial05.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial05.py",
      "question_idx": 8,
      "question": "When retrieving a scalar value in FloPy for MF6, what is the practical difference between using `.ge",
      "rank": 1,
      "similarity_with_correct": 0.5504996854926388,
      "similarity_with_top": 0.5504996854926388,
      "top_match": "mf6_data_tutorial05.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial05.py",
      "question_idx": 9,
      "question": "For setting a multi-word option like `xt3doptions` in the NPF package, when would you use a single s",
      "rank": 2,
      "similarity_with_correct": 0.41455252520412234,
      "similarity_with_top": 0.4270316955654079,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial05.py",
      "question_idx": 10,
      "question": "This workflow modifies package data after object creation (e.g., `tdis.time_units = 'MONTHS'`). Why ",
      "rank": 1,
      "similarity_with_correct": 0.6206408375864569,
      "similarity_with_top": 0.6206408375864569,
      "top_match": "mf6_data_tutorial05.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial06.py",
      "question_idx": 1,
      "question": "In FloPy for MF6, what is the programmatic difference between an `MFTransientList` object and an `MF",
      "rank": 1,
      "similarity_with_correct": 0.6492769951186999,
      "similarity_with_top": 0.6492769951186999,
      "top_match": "mf6_data_tutorial06.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial06.py",
      "question_idx": 2,
      "question": "What is the purpose of the `MFList` data object in FloPy's MODFLOW 6 interface, and how does it fund",
      "rank": 1,
      "similarity_with_correct": 0.6535942198519714,
      "similarity_with_top": 0.6535942198519714,
      "top_match": "mf6_data_tutorial06.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial06.py",
      "question_idx": 3,
      "question": "How do you specify that a well in a `ModflowGwfwel` package should be turned off for the second stre",
      "rank": 6,
      "similarity_with_correct": 0.5031126869726298,
      "similarity_with_top": 0.6127479898772794,
      "top_match": "mf_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial06.py",
      "question_idx": 4,
      "question": "What are the two distinct input formats (string vs. tuple-in-a-list) you can use to set the `rewet_r",
      "rank": 1,
      "similarity_with_correct": 0.4829137420215662,
      "similarity_with_top": 0.4829137420215662,
      "top_match": "mf6_data_tutorial06.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial06.py",
      "question_idx": 5,
      "question": "When defining `stress_period_data` for a `ModflowGwfchd` package as a list of tuples, e.g., `[((1, 8",
      "rank": 3,
      "similarity_with_correct": 0.4896949336176518,
      "similarity_with_top": 0.5069248757284021,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial06.py",
      "question_idx": 6,
      "question": "When I try to access transient well data using `wel.stress_period_data[0]`, I get a `TypeError`. Why",
      "rank": 1,
      "similarity_with_correct": 0.5455646203606315,
      "similarity_with_top": 0.5455646203606315,
      "top_match": "mf6_data_tutorial06.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial06.py",
      "question_idx": 7,
      "question": "My MODFLOW 6 model runs, but the rewetting behavior is wrong. How can I use FloPy to inspect the exa",
      "rank": 3,
      "similarity_with_correct": 0.5549824425536476,
      "similarity_with_top": 0.5645477164594804,
      "top_match": "mf6_support_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial06.py",
      "question_idx": 8,
      "question": "When retrieving transient boundary data from a FloPy MF6 object, what is the key difference in the r",
      "rank": 1,
      "similarity_with_correct": 0.5881340246587728,
      "similarity_with_top": 0.5881340246587728,
      "top_match": "mf6_data_tutorial06.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial06.py",
      "question_idx": 9,
      "question": "When should you use the `.get_file_entry()` method on a data object like `chd.stress_period_data` ve",
      "rank": 3,
      "similarity_with_correct": 0.3769736442333296,
      "similarity_with_top": 0.3957933216897377,
      "top_match": "mf6_data_tutorial07.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial06.py",
      "question_idx": 10,
      "question": "What is the specific function of the `.get_file_entry(key)` method on an `MFTransientList` object, a",
      "rank": 1,
      "similarity_with_correct": 0.433013657863183,
      "similarity_with_top": 0.433013657863183,
      "top_match": "mf6_data_tutorial06.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial07.py",
      "question_idx": 1,
      "question": "What is the difference between an `MFArray` and an `MFTransientArray` object in the FloPy MODFLOW 6 ",
      "rank": 1,
      "similarity_with_correct": 0.6057130670679056,
      "similarity_with_top": 0.6057130670679056,
      "top_match": "mf6_data_tutorial07.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial07.py",
      "question_idx": 2,
      "question": "How does FloPy's data structure for a multi-period recharge package in MODFLOW 6 differ from the one",
      "rank": 1,
      "similarity_with_correct": 0.6038892601017299,
      "similarity_with_top": 0.6038892601017299,
      "top_match": "mf6_data_tutorial07.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial07.py",
      "question_idx": 3,
      "question": "How do you use the `.make_layered()` method on an NPF property and what is the effect on the generat",
      "rank": 1,
      "similarity_with_correct": 0.5128106798103353,
      "similarity_with_top": 0.5128106798103353,
      "top_match": "mf6_data_tutorial07.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial07.py",
      "question_idx": 4,
      "question": "What Python data structure is required for the `recharge` parameter in the `ModflowGwfrcha` package ",
      "rank": 3,
      "similarity_with_correct": 0.5717117802359089,
      "similarity_with_top": 0.5919498520220627,
      "top_match": "mf6_complex_model_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial07.py",
      "question_idx": 5,
      "question": "Explain how to set `k33` for a single layer using a dictionary that specifies a `factor` and `iprn` ",
      "rank": 1,
      "similarity_with_correct": 0.36789399740428863,
      "similarity_with_top": 0.36789399740428863,
      "top_match": "mf6_data_tutorial07.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial07.py",
      "question_idx": 6,
      "question": "What could cause my model to use the same recharge value for all stress periods even though I provid",
      "rank": 7,
      "similarity_with_correct": 0.49903089578905935,
      "similarity_with_top": 0.571932796529327,
      "top_match": "mf6_complex_model_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial07.py",
      "question_idx": 7,
      "question": "Why might `npf.k.array` return different values than `npf.k.get_data()` after setting a layer's data",
      "rank": 1,
      "similarity_with_correct": 0.4786164998533292,
      "similarity_with_top": 0.4786164998533292,
      "top_match": "mf6_data_tutorial07.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial07.py",
      "question_idx": 8,
      "question": "When specifying hydraulic conductivity in the NPF package, what is the practical difference between ",
      "rank": 1,
      "similarity_with_correct": 0.5717193610266521,
      "similarity_with_top": 0.5717193610266521,
      "top_match": "mf6_data_tutorial07.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial07.py",
      "question_idx": 9,
      "question": "For a layered property like `k22`, why would you use `npf.k22.get_data()` instead of `npf.k22.array`",
      "rank": 1,
      "similarity_with_correct": 0.5095490189633278,
      "similarity_with_top": 0.5095490189633278,
      "top_match": "mf6_data_tutorial07.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial07.py",
      "question_idx": 10,
      "question": "How can you programmatically generate and inspect the exact text block that FloPy will write to a pa",
      "rank": 6,
      "similarity_with_correct": 0.45217458374797165,
      "similarity_with_top": 0.4998889052088279,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial08.py",
      "question_idx": 1,
      "question": "In MODFLOW 6, how does the `OPEN/CLOSE` keyword in a package file relate to FloPy's use of a diction",
      "rank": 1,
      "similarity_with_correct": 0.57574497611794,
      "similarity_with_top": 0.57574497611794,
      "top_match": "mf6_data_tutorial08.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial08.py",
      "question_idx": 2,
      "question": "What is the purpose of the `xt3doptions` argument in the MF6 NPF package, and why might it be specif",
      "rank": 2,
      "similarity_with_correct": 0.4619744428362777,
      "similarity_with_top": 0.4951889464408146,
      "top_match": "mf6_data_tutorial05.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial08.py",
      "question_idx": 3,
      "question": "How would you configure the NPF package to store the `k33` array for all layers in a single external",
      "rank": 1,
      "similarity_with_correct": 0.4233825081768072,
      "similarity_with_top": 0.4233825081768072,
      "top_match": "mf6_data_tutorial08.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial08.py",
      "question_idx": 4,
      "question": "Explain the exact steps using `get_record()` and `set_record()` to change the `botm` data for layer ",
      "rank": 1,
      "similarity_with_correct": 0.4438766007262749,
      "similarity_with_top": 0.4438766007262749,
      "top_match": "mf6_data_tutorial08.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial08.py",
      "question_idx": 5,
      "question": "How do you configure a WEL package so that stress period 1 data is read from 'wel1.dat' and stress p",
      "rank": 3,
      "similarity_with_correct": 0.4413795701502146,
      "similarity_with_top": 0.4835754893046962,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial08.py",
      "question_idx": 6,
      "question": "What is a likely cause of a MODFLOW 6 'FILE NOT FOUND' error during a run, specifically related to h",
      "rank": 1,
      "similarity_with_correct": 0.5971719771451902,
      "similarity_with_top": 0.5971719771451902,
      "top_match": "mf6_data_tutorial08.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial08.py",
      "question_idx": 7,
      "question": "What are the consequences of setting `lazy_io=True` if the NumPy array you provide for a parameter h",
      "rank": 2,
      "similarity_with_correct": 0.32786254336391896,
      "similarity_with_top": 0.34227484878551484,
      "top_match": "raster_intersection_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial08.py",
      "question_idx": 8,
      "question": "When is it more advantageous to use `sim.set_all_data_external(binary=True)` versus defining a `file",
      "rank": 1,
      "similarity_with_correct": 0.4417447394333492,
      "similarity_with_top": 0.4417447394333492,
      "top_match": "mf6_data_tutorial08.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial08.py",
      "question_idx": 9,
      "question": "Compare the performance implications of storing a 1000x1000x50 `k` array internally versus in an ext",
      "rank": 1,
      "similarity_with_correct": 0.5315265655912309,
      "similarity_with_top": 0.5315265655912309,
      "top_match": "mf6_data_tutorial08.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial08.py",
      "question_idx": 10,
      "question": "Describe the unique process of retrieving a `stress_period_data` record, programmatically changing i",
      "rank": 1,
      "similarity_with_correct": 0.5704884081148961,
      "similarity_with_top": 0.5704884081148961,
      "top_match": "mf6_data_tutorial08.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial09.py",
      "question_idx": 1,
      "question": "What is the role of the `exgmnamea` and `exgmnameb` arguments in the MODFLOW 6 `GWFGWF` package when",
      "rank": 1,
      "similarity_with_correct": 0.6402686894974701,
      "similarity_with_top": 0.6402686894974701,
      "top_match": "mf6_data_tutorial09.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial09.py",
      "question_idx": 2,
      "question": "In a MODFLOW 6 multi-model simulation, how does a single `IMS` package manage the solution for two c",
      "rank": 1,
      "similarity_with_correct": 0.6380420595781232,
      "similarity_with_top": 0.6380420595781232,
      "top_match": "mf6_data_tutorial09.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial09.py",
      "question_idx": 3,
      "question": "How do you configure the `MVR` (Mover) package's `perioddata` to transfer 100% of the water from a `",
      "rank": 1,
      "similarity_with_correct": 0.544089472225916,
      "similarity_with_top": 0.544089472225916,
      "top_match": "mf6_data_tutorial09.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial09.py",
      "question_idx": 4,
      "question": "What is the purpose of the `gncdata` list in the `GNC` package, and how do the weight factors (`weig",
      "rank": 1,
      "similarity_with_correct": 0.4667217152085465,
      "similarity_with_top": 0.4667217152085465,
      "top_match": "mf6_data_tutorial09.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial09.py",
      "question_idx": 5,
      "question": "Why must the `mover=True` flag be set in both the `ModflowGwfwel` and `ModflowGwflak` package constr",
      "rank": 1,
      "similarity_with_correct": 0.5734391735181428,
      "similarity_with_top": 0.5734391735181428,
      "top_match": "mf6_data_tutorial09.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial09.py",
      "question_idx": 6,
      "question": "If you get an error message like 'GNC CELL IS NOT ADJACENT TO A GWF-GWF CONNECTION', what is the lik",
      "rank": 1,
      "similarity_with_correct": 0.44342492295726543,
      "similarity_with_top": 0.44342492295726543,
      "top_match": "mf6_data_tutorial09.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial09.py",
      "question_idx": 7,
      "question": "What does a 'FAILED TO CONVERGE' error message suggest when running a multi-model simulation with GN",
      "rank": 1,
      "similarity_with_correct": 0.5301368946685413,
      "similarity_with_top": 0.5301368946685413,
      "top_match": "mf6_data_tutorial09.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial09.py",
      "question_idx": 8,
      "question": "When would you choose to use the `GNC` package over simply refining the `GWFGWF` exchange connection",
      "rank": 2,
      "similarity_with_correct": 0.588139120080317,
      "similarity_with_top": 0.6136345577525972,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial09.py",
      "question_idx": 9,
      "question": "What is the functional difference between using the `MVR` package to link a well and a lake versus r",
      "rank": 1,
      "similarity_with_correct": 0.5381957793262393,
      "similarity_with_top": 0.5381957793262393,
      "top_match": "mf6_data_tutorial09.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial09.py",
      "question_idx": 10,
      "question": "How does this workflow use a loop to programmatically generate the `gwfgwf_data` list to handle the ",
      "rank": 2,
      "similarity_with_correct": 0.5441405064314282,
      "similarity_with_top": 0.5543570483918125,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial10.py",
      "question_idx": 1,
      "question": "What is the role of the `time_series_namerecord` in a MODFLOW 6 GWF model, and how does it link `str",
      "rank": 2,
      "similarity_with_correct": 0.5695546637949621,
      "similarity_with_top": 0.5828626432333051,
      "top_match": "mf6_data_tutorial03.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial10.py",
      "question_idx": 2,
      "question": "How does MODFLOW 6's Time Array Series (TAS) differ from the older MODFLOW-2005 array multipliers, a",
      "rank": 2,
      "similarity_with_correct": 0.5951654116449179,
      "similarity_with_top": 0.6534009135281824,
      "top_match": "mf6_data_tutorial04.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial10.py",
      "question_idx": 3,
      "question": "How do you attach multiple, separate time series files (e.g., `tides.ts`, `wl.ts`) to a single GHB p",
      "rank": 2,
      "similarity_with_correct": 0.579842292882597,
      "similarity_with_top": 0.6137003021392067,
      "top_match": "mf6_data_tutorial03.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial10.py",
      "question_idx": 4,
      "question": "In the FloPy `mfgwfrcha` package, what is the correct syntax for the `recharge` argument when you in",
      "rank": 5,
      "similarity_with_correct": 0.44598915356280244,
      "similarity_with_top": 0.5572973034404407,
      "top_match": "mf6_data_tutorial04.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial10.py",
      "question_idx": 5,
      "question": "How can you use `boundnames` in the GHB package to set up an observation that sums the flow across m",
      "rank": 6,
      "similarity_with_correct": 0.4587091488200324,
      "similarity_with_top": 0.6003537480006048,
      "top_match": "mf6_data_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial10.py",
      "question_idx": 6,
      "question": "If I receive a MODFLOW 6 error 'TIME SERIES NAME NOT FOUND' after setting up a time-varying boundary",
      "rank": 1,
      "similarity_with_correct": 0.569367273445824,
      "similarity_with_top": 0.569367273445824,
      "top_match": "mf6_data_tutorial10.py",
      "correct": true
    },
    {
      "workflow": "mf6_data_tutorial10.py",
      "question_idx": 7,
      "question": "My FloPy script creates a GHB package with a time series list, but the simulation runs with a consta",
      "rank": 2,
      "similarity_with_correct": 0.5761432306148204,
      "similarity_with_top": 0.6227107161844299,
      "top_match": "mf6_data_tutorial03.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial10.py",
      "question_idx": 8,
      "question": "When modeling time-varying inputs in MODFLOW 6, when should you use a Time Series (TS) package versu",
      "rank": 2,
      "similarity_with_correct": 0.5817667204109893,
      "similarity_with_top": 0.6709235420746867,
      "top_match": "mf6_data_tutorial04.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial10.py",
      "question_idx": 9,
      "question": "What is the difference between defining observations on a GHB package by cellid (e.g., `(1, 5, 9)`) ",
      "rank": 2,
      "similarity_with_correct": 0.40718461863621763,
      "similarity_with_top": 0.5860155647898766,
      "top_match": "mf6_data_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_data_tutorial10.py",
      "question_idx": 10,
      "question": "What are the three distinct programmatic patterns demonstrated in this workflow for initializing a `",
      "rank": 1,
      "similarity_with_correct": 0.5871312393456215,
      "similarity_with_top": 0.5871312393456215,
      "top_match": "mf6_data_tutorial10.py",
      "correct": true
    },
    {
      "workflow": "mf6_lgr_tutorial01.py",
      "question_idx": 1,
      "question": "What is the role of the `xt3d=True` argument in the `ModflowGwfgwf` package when setting up a MODFLO",
      "rank": 1,
      "similarity_with_correct": 0.6420848531833245,
      "similarity_with_top": 0.6420848531833245,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_lgr_tutorial01.py",
      "question_idx": 2,
      "question": "How does the `flopy.utils.lgrutil.Lgr` object simplify the creation of a MODFLOW 6 multi-model simul",
      "rank": 1,
      "similarity_with_correct": 0.6734683236533989,
      "similarity_with_top": 0.6734683236533989,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_lgr_tutorial01.py",
      "question_idx": 3,
      "question": "How do you use the `idomainp`, `ncpp`, and `ncppl` arguments in the `flopy.utils.lgrutil.Lgr` constr",
      "rank": 1,
      "similarity_with_correct": 0.5659721532523156,
      "similarity_with_top": 0.5659721532523156,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_lgr_tutorial01.py",
      "question_idx": 4,
      "question": "When creating a coupled GWT-GWT exchange for an LGR model, what information must be provided via the",
      "rank": 1,
      "similarity_with_correct": 0.5850144530400596,
      "similarity_with_top": 0.5850144530400596,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_lgr_tutorial01.py",
      "question_idx": 5,
      "question": "Why is a `CNC` package added to the child transport model (`gwtc`) but not the parent (`gwtp`) in th",
      "rank": 1,
      "similarity_with_correct": 0.5132056653918027,
      "similarity_with_top": 0.5132056653918027,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_lgr_tutorial01.py",
      "question_idx": 6,
      "question": "What could cause a 'Model did not run to completion' error in an LGR simulation involving both GWF-G",
      "rank": 1,
      "similarity_with_correct": 0.5392538881671252,
      "similarity_with_top": 0.5392538881671252,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_lgr_tutorial01.py",
      "question_idx": 7,
      "question": "If a contaminant plume appears 'stuck' in the child grid and does not migrate into the parent grid, ",
      "rank": 1,
      "similarity_with_correct": 0.5449073361554286,
      "similarity_with_top": 0.5449073361554286,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_lgr_tutorial01.py",
      "question_idx": 8,
      "question": "When would you use this LGR utility approach with multiple structured grid models versus using a sin",
      "rank": 1,
      "similarity_with_correct": 0.6458128738101299,
      "similarity_with_top": 0.6458128738101299,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_lgr_tutorial01.py",
      "question_idx": 9,
      "question": "What is the difference in setup between the `ModflowGwfgwf` package and the `ModflowGwfgwt` package ",
      "rank": 1,
      "similarity_with_correct": 0.670420476016807,
      "similarity_with_top": 0.670420476016807,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_lgr_tutorial01.py",
      "question_idx": 10,
      "question": "How does the `lgr.get_exchange_data()` method automate the creation of the connection data required ",
      "rank": 1,
      "similarity_with_correct": 0.5177537468324007,
      "similarity_with_top": 0.5177537468324007,
      "top_match": "mf6_lgr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_mnw2_tutorial01.py",
      "question_idx": 1,
      "question": "How does the MNW2 package in MODFLOW-2005 differ from the MAW (Multi-Aquifer Well) capability in the",
      "rank": 1,
      "similarity_with_correct": 0.6842539267538557,
      "similarity_with_top": 0.6842539267538557,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_mnw2_tutorial01.py",
      "question_idx": 2,
      "question": "In a MODFLOW-2005 model, what physical processes does the 'losstype' parameter in the MNW2 package's",
      "rank": 1,
      "similarity_with_correct": 0.5077253785412076,
      "similarity_with_top": 0.5077253785412076,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_mnw2_tutorial01.py",
      "question_idx": 3,
      "question": "How do you structure a pandas DataFrame for the `node_data` argument in `flopy.modflow.ModflowMnw2` ",
      "rank": 1,
      "similarity_with_correct": 0.5865132745990425,
      "similarity_with_top": 0.5865132745990425,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_mnw2_tutorial01.py",
      "question_idx": 4,
      "question": "What is the purpose of the `itmp` list in the `ModflowMnw2` constructor, and how would you set it to",
      "rank": 1,
      "similarity_with_correct": 0.5851375316781863,
      "similarity_with_top": 0.5851375316781863,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_mnw2_tutorial01.py",
      "question_idx": 5,
      "question": "Explain the difference between creating a `ModflowMnw2` package using `node_data` and `stress_period",
      "rank": 1,
      "similarity_with_correct": 0.6833419903278612,
      "similarity_with_top": 0.6833419903278612,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_mnw2_tutorial01.py",
      "question_idx": 6,
      "question": "If FloPy raises an error stating 'itmp must equal the number of active wells' for a given stress per",
      "rank": 5,
      "similarity_with_correct": 0.45838412918732874,
      "similarity_with_top": 0.5148011869444571,
      "top_match": "mf_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_mnw2_tutorial01.py",
      "question_idx": 7,
      "question": "After loading an existing `.mnw2` file, why might `mnw2.mnw['well1'].stress_period_data` show pumpin",
      "rank": 1,
      "similarity_with_correct": 0.5779930085046052,
      "similarity_with_top": 0.5779930085046052,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_mnw2_tutorial01.py",
      "question_idx": 8,
      "question": "For a MODFLOW-2005 model, when is it more appropriate to use the complex MNW2 package instead of the",
      "rank": 1,
      "similarity_with_correct": 0.6044869453940428,
      "similarity_with_top": 0.6044869453940428,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_mnw2_tutorial01.py",
      "question_idx": 9,
      "question": "In the context of the FloPy `ModflowMnw2` object, what is the structural difference between the `mnw",
      "rank": 1,
      "similarity_with_correct": 0.6740344349209376,
      "similarity_with_top": 0.6740344349209376,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_mnw2_tutorial01.py",
      "question_idx": 10,
      "question": "How does setting `use_tables=False` in the `mnw2.write_file()` method alter the source of data used ",
      "rank": 1,
      "similarity_with_correct": 0.4235356665956892,
      "similarity_with_top": 0.4235356665956892,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_output_tutorial01.py",
      "question_idx": 1,
      "question": "In a FloPy MF6 workflow, how does the `.output` attribute differentiate between model-level head fil",
      "rank": 1,
      "similarity_with_correct": 0.6200218943560742,
      "similarity_with_top": 0.6200218943560742,
      "top_match": "mf6_output_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_output_tutorial01.py",
      "question_idx": 2,
      "question": "What is the role of the UZF package in a MODFLOW 6 flow model, and how would you access its specific",
      "rank": 2,
      "similarity_with_correct": 0.6952812881422031,
      "similarity_with_top": 0.7388455334549222,
      "top_match": "uzf_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_output_tutorial01.py",
      "question_idx": 3,
      "question": "How do you use `uzf.output.package_convergence()` in FloPy to read the CSV log and debug a MODFLOW 6",
      "rank": 1,
      "similarity_with_correct": 0.6122405845267287,
      "similarity_with_top": 0.6122405845267287,
      "top_match": "mf6_output_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_output_tutorial01.py",
      "question_idx": 4,
      "question": "If my CHD package has an associated observation file, how would I access its data using the `.output",
      "rank": 1,
      "similarity_with_correct": 0.4556233730214332,
      "similarity_with_top": 0.4556233730214332,
      "top_match": "mf6_output_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_output_tutorial01.py",
      "question_idx": 5,
      "question": "How can I programmatically generate and run a ZoneBudget6 analysis for a user-defined zone array usi",
      "rank": 2,
      "similarity_with_correct": 0.4764313197849134,
      "similarity_with_top": 0.584891734923846,
      "top_match": "zonebudget_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_output_tutorial01.py",
      "question_idx": 6,
      "question": "I'm getting an `AttributeError: 'Output' object has no attribute 'budget'` when calling `ml.dis.outp",
      "rank": 1,
      "similarity_with_correct": 0.525173367051849,
      "similarity_with_top": 0.525173367051849,
      "top_match": "mf6_output_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_output_tutorial01.py",
      "question_idx": 7,
      "question": "My script call to `uzf.output.package_convergence()` returns `None`. What does this typically indica",
      "rank": 2,
      "similarity_with_correct": 0.5510093110459148,
      "similarity_with_top": 0.5528286561708123,
      "top_match": "uzf_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_output_tutorial01.py",
      "question_idx": 8,
      "question": "When should I use `ml.output.budget()` versus `ml.output.budgetcsv()` to analyze my model's flow bud",
      "rank": 1,
      "similarity_with_correct": 0.5894418897950793,
      "similarity_with_top": 0.5894418897950793,
      "top_match": "mf6_output_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_output_tutorial01.py",
      "question_idx": 9,
      "question": "For retrieving observation data from a package with multiple `OBS` files, what is the difference bet",
      "rank": 2,
      "similarity_with_correct": 0.4453595541123291,
      "similarity_with_top": 0.5040544625101863,
      "top_match": "mf6_data_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_output_tutorial01.py",
      "question_idx": 10,
      "question": "How does the `.output.methods()` function in FloPy provide a dynamic way to explore available MODFLO",
      "rank": 1,
      "similarity_with_correct": 0.6315830193299978,
      "similarity_with_top": 0.6315830193299978,
      "top_match": "mf6_output_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_parallel_model_splitting_example.py",
      "question_idx": 1,
      "question": "What is the function of the GWF-GWF Exchange package that `Mf6Splitter` implicitly creates when spli",
      "rank": 1,
      "similarity_with_correct": 0.6624762167082108,
      "similarity_with_top": 0.6624762167082108,
      "top_match": "mf6_parallel_model_splitting_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_parallel_model_splitting_example.py",
      "question_idx": 2,
      "question": "How does the `Mf6Splitter` in FloPy determine the connectivity and create exchange data between two ",
      "rank": 1,
      "similarity_with_correct": 0.6152386382897956,
      "similarity_with_top": 0.6152386382897956,
      "top_match": "mf6_parallel_model_splitting_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_parallel_model_splitting_example.py",
      "question_idx": 3,
      "question": "How would you use `Mf6Splitter.reconstruct_recarray` to re-assemble and plot the locations of all we",
      "rank": 1,
      "similarity_with_correct": 0.590002335303135,
      "similarity_with_top": 0.590002335303135,
      "top_match": "mf6_parallel_model_splitting_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_parallel_model_splitting_example.py",
      "question_idx": 4,
      "question": "When splitting a model with multiple DRN packages distinguished by `pname`, how does the splitter ha",
      "rank": 1,
      "similarity_with_correct": 0.510104363435527,
      "similarity_with_top": 0.510104363435527,
      "top_match": "mf6_parallel_model_splitting_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_parallel_model_splitting_example.py",
      "question_idx": 5,
      "question": "How do you define a splitting array for `Mf6Splitter` to partition a 3-layer model where you want th",
      "rank": 1,
      "similarity_with_correct": 0.5289315983948011,
      "similarity_with_top": 0.5289315983948011,
      "top_match": "mf6_parallel_model_splitting_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_parallel_model_splitting_example.py",
      "question_idx": 6,
      "question": "After running a split model, the simulation fails with a large water balance error in the GWFGWF bud",
      "rank": 1,
      "similarity_with_correct": 0.5770546982547415,
      "similarity_with_top": 0.5770546982547415,
      "top_match": "mf6_parallel_model_splitting_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_parallel_model_splitting_example.py",
      "question_idx": 7,
      "question": "You are trying to use `mfsplit.optimize_splitting_mask(nparts=4)` but receive a `ModuleNotFoundError",
      "rank": 1,
      "similarity_with_correct": 0.44532170462585274,
      "similarity_with_top": 0.44532170462585274,
      "top_match": "mf6_parallel_model_splitting_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_parallel_model_splitting_example.py",
      "question_idx": 8,
      "question": "When would it be more advantageous to manually create a splitting mask for `Mf6Splitter` versus usin",
      "rank": 1,
      "similarity_with_correct": 0.5021080419574036,
      "similarity_with_top": 0.5021080419574036,
      "top_match": "mf6_parallel_model_splitting_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_parallel_model_splitting_example.py",
      "question_idx": 9,
      "question": "What is the difference in post-processing a split model's head output with `reconstruct_array` versu",
      "rank": 1,
      "similarity_with_correct": 0.5112164931025618,
      "similarity_with_top": 0.5112164931025618,
      "top_match": "mf6_parallel_model_splitting_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_parallel_model_splitting_example.py",
      "question_idx": 10,
      "question": "How can you use the `save_node_mapping` and `load_node_mapping` methods to reconstruct simulation re",
      "rank": 1,
      "similarity_with_correct": 0.4768239644694128,
      "similarity_with_top": 0.4768239644694128,
      "top_match": "mf6_parallel_model_splitting_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_sfr_tutorial01.py",
      "question_idx": 1,
      "question": "In MODFLOW-2005's SFR2 package, what is the functional difference between `ICALC=1` (Manning's equat",
      "rank": 1,
      "similarity_with_correct": 0.5407956076643967,
      "similarity_with_top": 0.5407956076643967,
      "top_match": "mf6_sfr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_sfr_tutorial01.py",
      "question_idx": 2,
      "question": "How does FloPy's `ModflowSfr2.load` method handle transient data if the `nper` argument is not speci",
      "rank": 1,
      "similarity_with_correct": 0.5447813316106634,
      "similarity_with_top": 0.5447813316106634,
      "top_match": "mf6_sfr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_sfr_tutorial01.py",
      "question_idx": 3,
      "question": "How do you correctly set up the `TABFILES` keyword in a MODFLOW-2005 SFR2 input file so that FloPy c",
      "rank": 1,
      "similarity_with_correct": 0.6048326249925708,
      "similarity_with_top": 0.6048326249925708,
      "top_match": "mf6_sfr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_sfr_tutorial01.py",
      "question_idx": 4,
      "question": "After loading an SFR2 package file with `ICALC=2` and `TABFILES`, how do you access the 8-point cros",
      "rank": 1,
      "similarity_with_correct": 0.6183688689705363,
      "similarity_with_top": 0.6183688689705363,
      "top_match": "mf6_sfr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_sfr_tutorial01.py",
      "question_idx": 5,
      "question": "What is the structure of the `reach_data` record array in a FloPy SFR2 object, and how does it relat",
      "rank": 2,
      "similarity_with_correct": 0.5474273395437571,
      "similarity_with_top": 0.5504325914848324,
      "top_match": "sfrpackage_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_sfr_tutorial01.py",
      "question_idx": 6,
      "question": "Why would I get an `AttributeError: 'ModflowSfr2' object has no attribute 'tabfiles_dict'` after loa",
      "rank": 1,
      "similarity_with_correct": 0.6307315573173533,
      "similarity_with_top": 0.6307315573173533,
      "top_match": "mf6_sfr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_sfr_tutorial01.py",
      "question_idx": 7,
      "question": "If a MODFLOW-2005 simulation with SFR2 fails to converge, how can I use FloPy to load the input file",
      "rank": 1,
      "similarity_with_correct": 0.6103574965442351,
      "similarity_with_top": 0.6103574965442351,
      "top_match": "mf6_sfr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_sfr_tutorial01.py",
      "question_idx": 8,
      "question": "For defining complex channel geometry in MODFLOW-2005, when is it better to use the SFR2 `TABFILES` ",
      "rank": 1,
      "similarity_with_correct": 0.5510816197371919,
      "similarity_with_top": 0.5510816197371919,
      "top_match": "mf6_sfr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_sfr_tutorial01.py",
      "question_idx": 9,
      "question": "What is the main advantage of using the `STR` package over the `SFR2` package in MODFLOW-2005 for a ",
      "rank": 2,
      "similarity_with_correct": 0.5490715016041589,
      "similarity_with_top": 0.5519799026387837,
      "top_match": "sfrpackage_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_sfr_tutorial01.py",
      "question_idx": 10,
      "question": "How does this workflow specifically demonstrate using FloPy for model-file-auditing by parsing a pre",
      "rank": 1,
      "similarity_with_correct": 0.6361261958556609,
      "similarity_with_top": 0.6361261958556609,
      "top_match": "mf6_sfr_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_simple_model_example.py",
      "question_idx": 1,
      "question": "What is the role of the `MFSimulation` object in a MODFLOW 6 workflow, and how does it differ from a",
      "rank": 4,
      "similarity_with_correct": 0.5679318945680133,
      "similarity_with_top": 0.6092545479413609,
      "top_match": "mf6_data_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "mf6_simple_model_example.py",
      "question_idx": 2,
      "question": "How does MODFLOW 6's groundwater flow (GWF) model interact with the temporal discretization (TDIS) p",
      "rank": 8,
      "similarity_with_correct": 0.5987732640467459,
      "similarity_with_top": 0.6350811261072278,
      "top_match": "mf6_data_tutorial09.py",
      "correct": false
    },
    {
      "workflow": "mf6_simple_model_example.py",
      "question_idx": 3,
      "question": "How do you programmatically create the `stress_period_data` recarray for the `mfgwfchd` package to s",
      "rank": 2,
      "similarity_with_correct": 0.4894873879817825,
      "similarity_with_top": 0.5258902354149307,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": false
    },
    {
      "workflow": "mf6_simple_model_example.py",
      "question_idx": 4,
      "question": "What is the purpose of the `ia` and `ja` arrays in the binary grid file (`.dis.grb`) and how are the",
      "rank": 4,
      "similarity_with_correct": 0.3780481141356602,
      "similarity_with_top": 0.3999035954267352,
      "top_match": "gridgen_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_simple_model_example.py",
      "question_idx": 5,
      "question": "Why is `save_flows=True` a necessary argument in the CHD and NPF packages to analyze the `FLOW-JA-FA",
      "rank": 1,
      "similarity_with_correct": 0.559618376978642,
      "similarity_with_top": 0.559618376978642,
      "top_match": "mf6_simple_model_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_simple_model_example.py",
      "question_idx": 6,
      "question": "I'm getting a `KeyError` when trying to access 'FLOW-JA-FACE' from my `.cbb` file; what are the like",
      "rank": 2,
      "similarity_with_correct": 0.4391946104641098,
      "similarity_with_top": 0.4426609555844839,
      "top_match": "mf_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "mf6_simple_model_example.py",
      "question_idx": 7,
      "question": "My MODFLOW 6 simulation runs, but the heads are all uniform at the initial condition value; which pa",
      "rank": 2,
      "similarity_with_correct": 0.575374432046223,
      "similarity_with_top": 0.6183390071079075,
      "top_match": "lake_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_simple_model_example.py",
      "question_idx": 8,
      "question": "When would I analyze the `FLOW-JA-FACE` budget term versus looking at the 'CHD' flow term in the bud",
      "rank": 1,
      "similarity_with_correct": 0.5523404222990566,
      "similarity_with_top": 0.5523404222990566,
      "top_match": "mf6_simple_model_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_simple_model_example.py",
      "question_idx": 9,
      "question": "For visualizing results, what are the advantages of using `flopy.plot.PlotMapView` over basic `matpl",
      "rank": 17,
      "similarity_with_correct": 0.46355227725075177,
      "similarity_with_top": 0.6275977804814072,
      "top_match": "plot_map_view_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_simple_model_example.py",
      "question_idx": 10,
      "question": "How can you combine data from `flopy.mf6.utils.MfGrdFile` and `flopy.utils.CellBudgetFile` to calcul",
      "rank": 1,
      "similarity_with_correct": 0.5398174870024047,
      "similarity_with_top": 0.5398174870024047,
      "top_match": "mf6_simple_model_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_support_example.py",
      "question_idx": 1,
      "question": "What is the purpose of `sim.register_ims_package()` in a MODFLOW 6 simulation, and how do you associ",
      "rank": 2,
      "similarity_with_correct": 0.583207863805322,
      "similarity_with_top": 0.5995157212168816,
      "top_match": "mf6_data_tutorial09.py",
      "correct": false
    },
    {
      "workflow": "mf6_support_example.py",
      "question_idx": 2,
      "question": "How do you programmatically turn on the Newton-Raphson solver with under-relaxation in a MODFLOW 6 m",
      "rank": 1,
      "similarity_with_correct": 0.5289471330775831,
      "similarity_with_top": 0.5289471330775831,
      "top_match": "mf6_support_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_support_example.py",
      "question_idx": 3,
      "question": "How do you set up a transient `WEL` package in FloPy for MF6 where the pumping rate changes between ",
      "rank": 2,
      "similarity_with_correct": 0.6045179459048053,
      "similarity_with_top": 0.6282368016011157,
      "top_match": "mf_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_support_example.py",
      "question_idx": 4,
      "question": "How can you define `stress_period_data` for a `CHD` package where the first stress period's data is ",
      "rank": 6,
      "similarity_with_correct": 0.4155507470256872,
      "similarity_with_top": 0.45220536091569963,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": false
    },
    {
      "workflow": "mf6_support_example.py",
      "question_idx": 5,
      "question": "What is the complete process in FloPy for creating a list-based Recharge (`RCH`) package that refere",
      "rank": 4,
      "similarity_with_correct": 0.511224220854962,
      "similarity_with_top": 0.5859113446111159,
      "top_match": "mf6_data_tutorial04.py",
      "correct": false
    },
    {
      "workflow": "mf6_support_example.py",
      "question_idx": 6,
      "question": "My MODFLOW 6 model fails with an error about a missing external file (e.g., 'strt.txt') after I used",
      "rank": 2,
      "similarity_with_correct": 0.44496595615488665,
      "similarity_with_top": 0.47183592550817277,
      "top_match": "external_file_handling_tutorial.py",
      "correct": false
    },
    {
      "workflow": "mf6_support_example.py",
      "question_idx": 7,
      "question": "My transient MODFLOW 6 simulation runs, but the boundary conditions don't change after the first str",
      "rank": 1,
      "similarity_with_correct": 0.5606866556798689,
      "similarity_with_top": 0.5606866556798689,
      "top_match": "mf6_support_example.py",
      "correct": true
    },
    {
      "workflow": "mf6_support_example.py",
      "question_idx": 8,
      "question": "When modeling recharge in MODFLOW 6 with FloPy, what is the key difference between using `ModflowGwf",
      "rank": 4,
      "similarity_with_correct": 0.604847725964431,
      "similarity_with_top": 0.6629321742323432,
      "top_match": "mf6_complex_model_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_support_example.py",
      "question_idx": 9,
      "question": "What is the difference between retrieving hydraulic conductivity using `npf.k.get_data()` versus `np",
      "rank": 7,
      "similarity_with_correct": 0.44754630448075516,
      "similarity_with_top": 0.5840075965276865,
      "top_match": "mf6_data_tutorial07.py",
      "correct": false
    },
    {
      "workflow": "mf6_support_example.py",
      "question_idx": 10,
      "question": "How can you use FloPy's `MFArray` template system to define hydraulic conductivity (`k`) for a two-l",
      "rank": 3,
      "similarity_with_correct": 0.5108612357657796,
      "similarity_with_top": 0.6077528869551934,
      "top_match": "mf6_data_tutorial07.py",
      "correct": false
    },
    {
      "workflow": "mf6_tutorial01.py",
      "question_idx": 1,
      "question": "In a MODFLOW 6 GWF model, what is the role of the `NEWTON UNDER_RELAXATION` option and why is it use",
      "rank": 1,
      "similarity_with_correct": 0.5489932680196674,
      "similarity_with_top": 0.5489932680196674,
      "top_match": "mf6_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_tutorial01.py",
      "question_idx": 2,
      "question": "What is the significance of the `MFSimulation` object in a FloPy MODFLOW 6 script, and how does it d",
      "rank": 4,
      "similarity_with_correct": 0.5781748143569205,
      "similarity_with_top": 0.6331190808132867,
      "top_match": "mf6_data_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "mf6_tutorial01.py",
      "question_idx": 3,
      "question": "How do you correctly format the `stress_period_data` list of tuples for the `ModflowGwfchd` package ",
      "rank": 5,
      "similarity_with_correct": 0.5541194932853752,
      "similarity_with_top": 0.6259481808304634,
      "top_match": "mf_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf6_tutorial01.py",
      "question_idx": 4,
      "question": "When using the `ModflowGwfnpf` package, what is the practical difference between setting `icelltype=",
      "rank": 1,
      "similarity_with_correct": 0.531095707623707,
      "similarity_with_top": 0.531095707623707,
      "top_match": "mf6_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_tutorial01.py",
      "question_idx": 5,
      "question": "How does the `saverecord` argument in the `ModflowGwfoc` package, like `[('HEAD', 'ALL')]`, control ",
      "rank": 1,
      "similarity_with_correct": 0.49944126556589297,
      "similarity_with_top": 0.49944126556589297,
      "top_match": "mf6_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_tutorial01.py",
      "question_idx": 6,
      "question": "My unconfined MODFLOW 6 model is not converging. What solver parameters in the `ModflowIms` package,",
      "rank": 2,
      "similarity_with_correct": 0.5652204576786255,
      "similarity_with_top": 0.5792766480747422,
      "top_match": "mfusg_zaidel_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_tutorial01.py",
      "question_idx": 7,
      "question": "I'm trying to calculate flow residuals but get an error. What are the two essential inputs for the `",
      "rank": 1,
      "similarity_with_correct": 0.6593472072392279,
      "similarity_with_top": 0.6593472072392279,
      "top_match": "mf6_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf6_tutorial01.py",
      "question_idx": 8,
      "question": "For defining a fixed head boundary in this model, why was the `CHD` package used instead of the `GHB",
      "rank": 11,
      "similarity_with_correct": 0.4605718637595309,
      "similarity_with_top": 0.5928133077578511,
      "top_match": "lake_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_tutorial01.py",
      "question_idx": 9,
      "question": "When would you choose to use `flopy.plot.PlotMapView().plot_array()` over a simple `matplotlib.pyplo",
      "rank": 17,
      "similarity_with_correct": 0.4460619355682821,
      "similarity_with_top": 0.6176854996476291,
      "top_match": "plot_array_example.py",
      "correct": false
    },
    {
      "workflow": "mf6_tutorial01.py",
      "question_idx": 10,
      "question": "How can you use the `FLOW-JA-FACE` budget output and the binary grid file (`.grb`) to visually map t",
      "rank": 2,
      "similarity_with_correct": 0.5885860599879019,
      "similarity_with_top": 0.5956559777156685,
      "top_match": "mf6_simple_model_example.py",
      "correct": false
    },
    {
      "workflow": "mf_boundaries_tutorial.py",
      "question_idx": 1,
      "question": "In FloPy for MODFLOW-2005, what is the significance of the `stress_period_data` object being an `MfL",
      "rank": 1,
      "similarity_with_correct": 0.6633377778552824,
      "similarity_with_top": 0.6633377778552824,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_boundaries_tutorial.py",
      "question_idx": 2,
      "question": "Explain the process by which FloPy converts the user-provided zero-based `(k, i, j)` indices into th",
      "rank": 1,
      "similarity_with_correct": 0.47906638288837594,
      "similarity_with_top": 0.47906638288837594,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_boundaries_tutorial.py",
      "question_idx": 3,
      "question": "How would you define a custom `dtype` for a `ModflowRiv` package to include an auxiliary variable na",
      "rank": 1,
      "similarity_with_correct": 0.5059295776998385,
      "similarity_with_top": 0.5059295776998385,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_boundaries_tutorial.py",
      "question_idx": 4,
      "question": "Using the dictionary method for `stress_period_data` in `ModflowWel`, how would you specify wells th",
      "rank": 1,
      "similarity_with_correct": 0.5787607705550638,
      "similarity_with_top": 0.5787607705550638,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_boundaries_tutorial.py",
      "question_idx": 5,
      "question": "For a MODFLOW-USG model, how do you modify the `recarray` `dtype` for the `ModflowRiv` package to sp",
      "rank": 1,
      "similarity_with_correct": 0.5022867997857838,
      "similarity_with_top": 0.5022867997857838,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_boundaries_tutorial.py",
      "question_idx": 6,
      "question": "If I define a 'boundname' in my `recarray` `dtype` but forget to set its type to `object`, what kind",
      "rank": 1,
      "similarity_with_correct": 0.29871916635103124,
      "similarity_with_top": 0.29871916635103124,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_boundaries_tutorial.py",
      "question_idx": 7,
      "question": "After defining time-varying river boundaries using a dictionary for `stress_period_data`, I find the",
      "rank": 1,
      "similarity_with_correct": 0.6207590434155008,
      "similarity_with_top": 0.6207590434155008,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_boundaries_tutorial.py",
      "question_idx": 8,
      "question": "When is it more advantageous to use a dictionary for `stress_period_data` versus providing a list of",
      "rank": 1,
      "similarity_with_correct": 0.5001939921057014,
      "similarity_with_top": 0.5001939921057014,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_boundaries_tutorial.py",
      "question_idx": 9,
      "question": "Compare defining auxiliary variables in this MODFLOW-2005 workflow (using custom `dtype` and `option",
      "rank": 1,
      "similarity_with_correct": 0.5858634302820949,
      "similarity_with_top": 0.5858634302820949,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_boundaries_tutorial.py",
      "question_idx": 10,
      "question": "The script combines two `ModflowWel` instances by appending their `stress_period_data`. How does thi",
      "rank": 1,
      "similarity_with_correct": 0.589847089385249,
      "similarity_with_top": 0.589847089385249,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_error_tutorial01.py",
      "question_idx": 1,
      "question": "What common 'Errors' versus 'Warnings' does the FloPy checker find for a MODFLOW-2005 flow-only mode",
      "rank": 1,
      "similarity_with_correct": 0.6556746770750813,
      "similarity_with_top": 0.6556746770750813,
      "top_match": "mf_error_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_error_tutorial01.py",
      "question_idx": 2,
      "question": "How can the `check()` method in FloPy identify inactive cells specified in the WEL package for a MOD",
      "rank": 1,
      "similarity_with_correct": 0.6144178038445085,
      "similarity_with_top": 0.6144178038445085,
      "top_match": "mf_error_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_error_tutorial01.py",
      "question_idx": 3,
      "question": "How do I use `m.riv.check()` to find all river cells where the riverbed elevation (`rbot`) is higher",
      "rank": 1,
      "similarity_with_correct": 0.4390554566894622,
      "similarity_with_top": 0.4390554566894622,
      "top_match": "mf_error_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_error_tutorial01.py",
      "question_idx": 4,
      "question": "What validation does `flopy.modflow.ModflowWel.check()` perform on the layer, row, column indices ag",
      "rank": 1,
      "similarity_with_correct": 0.6130612608630006,
      "similarity_with_top": 0.6130612608630006,
      "top_match": "mf_error_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_error_tutorial01.py",
      "question_idx": 5,
      "question": "When using the RCH package, how does the checker verify that the `rech` array dimensions are consist",
      "rank": 1,
      "similarity_with_correct": 0.443776941730002,
      "similarity_with_top": 0.443776941730002,
      "top_match": "mf_error_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_error_tutorial01.py",
      "question_idx": 6,
      "question": "What does the error 'negative vertical hydraulic conductivity' in the `summary_array` from a BCF pac",
      "rank": 1,
      "similarity_with_correct": 0.4719749597783872,
      "similarity_with_top": 0.4719749597783872,
      "top_match": "mf_error_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_error_tutorial01.py",
      "question_idx": 7,
      "question": "After loading a MODFLOW-2005 model with `check=False`, `m.write_input()` fails. How can I run the ch",
      "rank": 1,
      "similarity_with_correct": 0.6210490992257359,
      "similarity_with_top": 0.6210490992257359,
      "top_match": "mf_error_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_error_tutorial01.py",
      "question_idx": 8,
      "question": "What is the difference in output between running `m.check(level=1)` and `m.check(level=2)`?",
      "rank": 1,
      "similarity_with_correct": 0.40943274862485635,
      "similarity_with_top": 0.40943274862485635,
      "top_match": "mf_error_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_error_tutorial01.py",
      "question_idx": 9,
      "question": "When validating a model, when is it more appropriate to inspect the `chk.summary_array` object versu",
      "rank": 1,
      "similarity_with_correct": 0.540483081985036,
      "similarity_with_top": 0.540483081985036,
      "top_match": "mf_error_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_error_tutorial01.py",
      "question_idx": 10,
      "question": "How can I programmatically access the `summary_array` returned by `m.check()` to filter for and coun",
      "rank": 1,
      "similarity_with_correct": 0.44682040834619746,
      "similarity_with_top": 0.44682040834619746,
      "top_match": "mf_error_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_load_tutorial.py",
      "question_idx": 1,
      "question": "How do you specify that you are loading a MODFLOW-2005 model, not a MODFLOW 6 model, using `flopy.mo",
      "rank": 1,
      "similarity_with_correct": 0.6149741857416571,
      "similarity_with_top": 0.6149741857416571,
      "top_match": "mf_load_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_load_tutorial.py",
      "question_idx": 2,
      "question": "What is an 'auxiliary variable' in MODFLOW-2005, and how does the `iface` variable in the RIV packag",
      "rank": 1,
      "similarity_with_correct": 0.5688060635367278,
      "similarity_with_top": 0.5688060635367278,
      "top_match": "mf_load_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_load_tutorial.py",
      "question_idx": 3,
      "question": "How can I load a MODFLOW-2005 model that uses the Block-Centered Flow (BCF6) package into FloPy?",
      "rank": 2,
      "similarity_with_correct": 0.5915576086675918,
      "similarity_with_top": 0.6182706954994904,
      "top_match": "mf_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "mf_load_tutorial.py",
      "question_idx": 4,
      "question": "After loading a model with `flopy.modflow.Modflow.load()`, how do you access the `stress_period_data",
      "rank": 1,
      "similarity_with_correct": 0.608678663785638,
      "similarity_with_top": 0.608678663785638,
      "top_match": "mf_load_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_load_tutorial.py",
      "question_idx": 5,
      "question": "How would you programmatically verify that the `iface` auxiliary variable was correctly read from a ",
      "rank": 1,
      "similarity_with_correct": 0.4669829767226097,
      "similarity_with_top": 0.4669829767226097,
      "top_match": "mf_load_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_load_tutorial.py",
      "question_idx": 6,
      "question": "What is the likely cause of a `KeyError` when trying to access `ml.riv` after loading a model with `",
      "rank": 1,
      "similarity_with_correct": 0.4036840146334538,
      "similarity_with_top": 0.4036840146334538,
      "top_match": "mf_load_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_load_tutorial.py",
      "question_idx": 7,
      "question": "If my script fails to load a MODFLOW-2005 model, what is the purpose of the `verbose=True` argument ",
      "rank": 1,
      "similarity_with_correct": 0.5745585082703146,
      "similarity_with_top": 0.5745585082703146,
      "top_match": "mf_load_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_load_tutorial.py",
      "question_idx": 8,
      "question": "When would you use `iface` in the RIV package instead of just placing the river in the target leakag",
      "rank": 1,
      "similarity_with_correct": 0.4234332796039524,
      "similarity_with_top": 0.4234332796039524,
      "top_match": "mf_load_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_load_tutorial.py",
      "question_idx": 9,
      "question": "What is the difference between creating a new model with `flopy.modflow.Modflow()` and loading an ex",
      "rank": 1,
      "similarity_with_correct": 0.6204904123073842,
      "similarity_with_top": 0.6204904123073842,
      "top_match": "mf_load_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_load_tutorial.py",
      "question_idx": 10,
      "question": "How can you confirm that FloPy has correctly read the `IFACE` auxiliary variable from a MODFLOW-2005",
      "rank": 1,
      "similarity_with_correct": 0.6189117074587781,
      "similarity_with_top": 0.6189117074587781,
      "top_match": "mf_load_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial01.py",
      "question_idx": 1,
      "question": "How do you specify that FloPy should use the MODFLOW-2005 executable instead of a MODFLOW 6 executab",
      "rank": 1,
      "similarity_with_correct": 0.5956820057944072,
      "similarity_with_top": 0.5956820057944072,
      "top_match": "mf_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial01.py",
      "question_idx": 2,
      "question": "In a MODFLOW-2005 model, what does the default `laytyp=0` in the LPF package signify about the aquif",
      "rank": 3,
      "similarity_with_correct": 0.5187690814577114,
      "similarity_with_top": 0.5379261901320457,
      "top_match": "groundwater_paper_example_1.py",
      "correct": false
    },
    {
      "workflow": "mf_tutorial01.py",
      "question_idx": 3,
      "question": "How do you implement a constant-head boundary condition across an entire model column in MODFLOW-200",
      "rank": 2,
      "similarity_with_correct": 0.5686542076323828,
      "similarity_with_top": 0.6151226161795376,
      "top_match": "lake_example.py",
      "correct": false
    },
    {
      "workflow": "mf_tutorial01.py",
      "question_idx": 4,
      "question": "What is the function of the `ipakcb` argument in the `ModflowLpf` package, and what binary output fi",
      "rank": 1,
      "similarity_with_correct": 0.5090105129805876,
      "similarity_with_top": 0.5090105129805876,
      "top_match": "mf_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial01.py",
      "question_idx": 5,
      "question": "To set up a basic steady-state simulation in `ModflowOc`, how should the `stress_period_data` dictio",
      "rank": 3,
      "similarity_with_correct": 0.48704329460482365,
      "similarity_with_top": 0.5519534095137848,
      "top_match": "mf_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf_tutorial01.py",
      "question_idx": 6,
      "question": "My MODFLOW-2005 simulation runs without errors, but no `.cbc` (cell-by-cell budget) file is generate",
      "rank": 1,
      "similarity_with_correct": 0.540650091121015,
      "similarity_with_top": 0.540650091121015,
      "top_match": "mf_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial01.py",
      "question_idx": 7,
      "question": "When using `flopy.utils.postprocessing.get_specific_discharge`, the function fails or returns incorr",
      "rank": 1,
      "similarity_with_correct": 0.541819508097417,
      "similarity_with_top": 0.541819508097417,
      "top_match": "mf_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial01.py",
      "question_idx": 8,
      "question": "For a simple box model with fixed heads on the boundaries, what is the practical difference between ",
      "rank": 2,
      "similarity_with_correct": 0.4739813152706681,
      "similarity_with_top": 0.6007769788114586,
      "top_match": "lake_example.py",
      "correct": false
    },
    {
      "workflow": "mf_tutorial01.py",
      "question_idx": 9,
      "question": "When would you choose to use the `flopy.plot.PlotMapView` class over a manual plotting approach with",
      "rank": 12,
      "similarity_with_correct": 0.44658848754944763,
      "similarity_with_top": 0.6104822809184622,
      "top_match": "plot_map_view_example.py",
      "correct": false
    },
    {
      "workflow": "mf_tutorial01.py",
      "question_idx": 10,
      "question": "How does this workflow specifically use the 'FLOW RIGHT FACE' and 'FLOW FRONT FACE' budget terms fro",
      "rank": 2,
      "similarity_with_correct": 0.5701320747706511,
      "similarity_with_top": 0.5803663493638802,
      "top_match": "groundwater_paper_uspb_example.py",
      "correct": false
    },
    {
      "workflow": "mf_tutorial02.py",
      "question_idx": 1,
      "question": "In a MODFLOW-2005 unconfined model (`laytyp=1`), how does the solver handle the non-linearity introd",
      "rank": 2,
      "similarity_with_correct": 0.514398151502667,
      "similarity_with_top": 0.5336361645608599,
      "top_match": "lake_example.py",
      "correct": false
    },
    {
      "workflow": "mf_tutorial02.py",
      "question_idx": 2,
      "question": "How do you set up a MODFLOW-2005 simulation in FloPy that starts with a steady-state stress period t",
      "rank": 1,
      "similarity_with_correct": 0.6297858350924834,
      "similarity_with_top": 0.6297858350924834,
      "top_match": "mf_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial02.py",
      "question_idx": 3,
      "question": "How do you structure the `stress_period_data` dictionary for the `flopy.modflow.ModflowGhb` package ",
      "rank": 1,
      "similarity_with_correct": 0.6568278839964364,
      "similarity_with_top": 0.6568278839964364,
      "top_match": "mf_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial02.py",
      "question_idx": 4,
      "question": "In the `flopy.modflow.ModflowWel` package, how would you configure a well to be inactive for the fir",
      "rank": 1,
      "similarity_with_correct": 0.6134510590873994,
      "similarity_with_top": 0.6134510590873994,
      "top_match": "mf_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial02.py",
      "question_idx": 5,
      "question": "What is the purpose of setting `ipakcb=53` in the `ModflowLpf` package and how does it relate to rea",
      "rank": 5,
      "similarity_with_correct": 0.47147016093154626,
      "similarity_with_top": 0.5712196341028755,
      "top_match": "mf_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "mf_tutorial02.py",
      "question_idx": 6,
      "question": "If my unconfined transient model reports that cells are going dry in the list file, what parameter i",
      "rank": 1,
      "similarity_with_correct": 0.5116060771806852,
      "similarity_with_top": 0.5116060771806852,
      "top_match": "mf_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial02.py",
      "question_idx": 7,
      "question": "Why might a MODFLOW-2005 model fail to converge in a transient stress period right after a large pum",
      "rank": 1,
      "similarity_with_correct": 0.6023666714542759,
      "similarity_with_top": 0.6023666714542759,
      "top_match": "mf_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial02.py",
      "question_idx": 8,
      "question": "When would you use the General-Head Boundary (GHB) package, as shown in this workflow, versus the Co",
      "rank": 6,
      "similarity_with_correct": 0.49087927151686345,
      "similarity_with_top": 0.581003452607548,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "mf_tutorial02.py",
      "question_idx": 9,
      "question": "For setting initial heads in this transient simulation, what is the specific advantage of running a ",
      "rank": 1,
      "similarity_with_correct": 0.49747847835424114,
      "similarity_with_top": 0.49747847835424114,
      "top_match": "mf_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf_tutorial02.py",
      "question_idx": 10,
      "question": "How does FloPy's handling of the `stress_period_data` dictionary simplify the input for the GHB pack",
      "rank": 1,
      "similarity_with_correct": 0.660504712778345,
      "similarity_with_top": 0.660504712778345,
      "top_match": "mf_tutorial02.py",
      "correct": true
    },
    {
      "workflow": "mf_watertable_recharge_example.py",
      "question_idx": 1,
      "question": "What is the purpose of the 'COMPLEX' option in the MODFLOW-NWT solver and how does it relate to the ",
      "rank": 1,
      "similarity_with_correct": 0.591807397959268,
      "similarity_with_top": 0.591807397959268,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": true
    },
    {
      "workflow": "mf_watertable_recharge_example.py",
      "question_idx": 2,
      "question": "Why is the Newton-Raphson solver (MODFLOW-NWT) preferred over the SIP solver for this unconfined rec",
      "rank": 1,
      "similarity_with_correct": 0.5795844875676759,
      "similarity_with_top": 0.5795844875676759,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": true
    },
    {
      "workflow": "mf_watertable_recharge_example.py",
      "question_idx": 3,
      "question": "How do you calculate the conductance for a GHB cell to accurately represent a boundary adjacent to a",
      "rank": 1,
      "similarity_with_correct": 0.5861653908348741,
      "similarity_with_top": 0.5861653908348741,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": true
    },
    {
      "workflow": "mf_watertable_recharge_example.py",
      "question_idx": 4,
      "question": "How would you modify the RCH package in this script to apply recharge only to the central portion of",
      "rank": 1,
      "similarity_with_correct": 0.48217364690649966,
      "similarity_with_top": 0.48217364690649966,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": true
    },
    {
      "workflow": "mf_watertable_recharge_example.py",
      "question_idx": 5,
      "question": "How can I set up the GHB `stress_period_data` to represent a boundary head that decreases over time ",
      "rank": 4,
      "similarity_with_correct": 0.4642791690218422,
      "similarity_with_top": 0.5710401014256211,
      "top_match": "mf_tutorial02.py",
      "correct": false
    },
    {
      "workflow": "mf_watertable_recharge_example.py",
      "question_idx": 6,
      "question": "My MODFLOW-NWT model is not converging for an unconfined system. What parameters in the NWT package,",
      "rank": 1,
      "similarity_with_correct": 0.584987006325773,
      "similarity_with_top": 0.584987006325773,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": true
    },
    {
      "workflow": "mf_watertable_recharge_example.py",
      "question_idx": 7,
      "question": "Why might a steady-state model using GHB and RCH packages show a large percent water balance discrep",
      "rank": 1,
      "similarity_with_correct": 0.6026009758044297,
      "similarity_with_top": 0.6026009758044297,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": true
    },
    {
      "workflow": "mf_watertable_recharge_example.py",
      "question_idx": 8,
      "question": "When modeling a river boundary, what are the advantages of using the GHB package as shown here versu",
      "rank": 1,
      "similarity_with_correct": 0.5831945283668872,
      "similarity_with_top": 0.5831945283668872,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": true
    },
    {
      "workflow": "mf_watertable_recharge_example.py",
      "question_idx": 9,
      "question": "For an unconfined system, why might using the GHB package for boundaries be a better choice than CHD",
      "rank": 1,
      "similarity_with_correct": 0.5979579789833813,
      "similarity_with_top": 0.5979579789833813,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": true
    },
    {
      "workflow": "mf_watertable_recharge_example.py",
      "question_idx": 10,
      "question": "How does this workflow's method of using the analytical solution to pre-calculate the average satura",
      "rank": 1,
      "similarity_with_correct": 0.5650841331520768,
      "similarity_with_top": 0.5650841331520768,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_conduit_examples.py",
      "question_idx": 1,
      "question": "In MODFLOW-USG, what is the conceptual difference between the CLN process and a standard boundary pa",
      "rank": 1,
      "similarity_with_correct": 0.6745692948775244,
      "similarity_with_top": 0.6745692948775244,
      "top_match": "mfusg_conduit_examples.py",
      "correct": true
    },
    {
      "workflow": "mfusg_conduit_examples.py",
      "question_idx": 2,
      "question": "How does the CLN process in MODFLOW-USG allow for hydraulic connection between two aquifer layers th",
      "rank": 1,
      "similarity_with_correct": 0.5993655849004428,
      "similarity_with_top": 0.5993655849004428,
      "top_match": "mfusg_conduit_examples.py",
      "correct": true
    },
    {
      "workflow": "mfusg_conduit_examples.py",
      "question_idx": 3,
      "question": "How do you use the `cln_stress_period_data` argument in `flopy.mfusg.MfUsgWel` to apply a pumping st",
      "rank": 1,
      "similarity_with_correct": 0.5638043737305904,
      "similarity_with_top": 0.5638043737305904,
      "top_match": "mfusg_conduit_examples.py",
      "correct": true
    },
    {
      "workflow": "mfusg_conduit_examples.py",
      "question_idx": 4,
      "question": "In the `flopy.mfusg.MfUsgCln` package, what is the role of the `cln_gwc` data structure, and what do",
      "rank": 1,
      "similarity_with_correct": 0.505462730724741,
      "similarity_with_top": 0.505462730724741,
      "top_match": "mfusg_conduit_examples.py",
      "correct": true
    },
    {
      "workflow": "mfusg_conduit_examples.py",
      "question_idx": 5,
      "question": "How would you set up a single CLN node in `node_prop` to represent a well that is fully screened acr",
      "rank": 1,
      "similarity_with_correct": 0.5221840498415846,
      "similarity_with_top": 0.5221840498415846,
      "top_match": "mfusg_conduit_examples.py",
      "correct": true
    },
    {
      "workflow": "mfusg_conduit_examples.py",
      "question_idx": 6,
      "question": "My MODFLOW-USG simulation with a CLN well is unstable when the water level in the unconfined layer d",
      "rank": 1,
      "similarity_with_correct": 0.6577520806033503,
      "similarity_with_top": 0.6577520806033503,
      "top_match": "mfusg_conduit_examples.py",
      "correct": true
    },
    {
      "workflow": "mfusg_conduit_examples.py",
      "question_idx": 7,
      "question": "After running a CLN model, the total flow from the CLN-GWF exchange in the `.clncb` file doesn't mat",
      "rank": 1,
      "similarity_with_correct": 0.6180463983826114,
      "similarity_with_top": 0.6180463983826114,
      "top_match": "mfusg_conduit_examples.py",
      "correct": true
    },
    {
      "workflow": "mfusg_conduit_examples.py",
      "question_idx": 8,
      "question": "When modeling a multi-layer well in MODFLOW-USG, what are the primary trade-offs between using a sin",
      "rank": 1,
      "similarity_with_correct": 0.6434024215174519,
      "similarity_with_top": 0.6434024215174519,
      "top_match": "mfusg_conduit_examples.py",
      "correct": true
    },
    {
      "workflow": "mfusg_conduit_examples.py",
      "question_idx": 9,
      "question": "How does the `flow-to-dry-cell` option (iclnaq=1) in the CLN package differ from the standard `WETFC",
      "rank": 1,
      "similarity_with_correct": 0.5413245452209656,
      "similarity_with_top": 0.5413245452209656,
      "top_match": "mfusg_conduit_examples.py",
      "correct": true
    },
    {
      "workflow": "mfusg_conduit_examples.py",
      "question_idx": 10,
      "question": "This workflow compares four CLN setups. What specific parameters in the `MfUsgCln` package are modif",
      "rank": 1,
      "similarity_with_correct": 0.6269170709409492,
      "similarity_with_top": 0.6269170709409492,
      "top_match": "mfusg_conduit_examples.py",
      "correct": true
    },
    {
      "workflow": "mfusg_freyberg_example.py",
      "question_idx": 1,
      "question": "What is the function of the Ghost-Node Correction (GNC) package in a MODFLOW-USG simulation, and whe",
      "rank": 3,
      "similarity_with_correct": 0.4942617320679621,
      "similarity_with_top": 0.552832633823339,
      "top_match": "mf6_data_tutorial09.py",
      "correct": false
    },
    {
      "workflow": "mfusg_freyberg_example.py",
      "question_idx": 2,
      "question": "How does the DISU (unstructured discretization) package in MODFLOW-USG define cell connectivity comp",
      "rank": 3,
      "similarity_with_correct": 0.5188913684381969,
      "similarity_with_top": 0.5416551046618336,
      "top_match": "gridgen_example.py",
      "correct": false
    },
    {
      "workflow": "mfusg_freyberg_example.py",
      "question_idx": 3,
      "question": "How do I create a `freyberg.usg.gsf` Grid Specification File from scratch to be used with `Unstructu",
      "rank": 1,
      "similarity_with_correct": 0.5314799632183266,
      "similarity_with_top": 0.5314799632183266,
      "top_match": "mfusg_freyberg_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_freyberg_example.py",
      "question_idx": 4,
      "question": "In the SFR package for this USG model, how would I define a segment that loses water to the aquifer ",
      "rank": 6,
      "similarity_with_correct": 0.49975605390372146,
      "similarity_with_top": 0.519067317520447,
      "top_match": "sfrpackage_example.py",
      "correct": false
    },
    {
      "workflow": "mfusg_freyberg_example.py",
      "question_idx": 5,
      "question": "How can I manually define cell-to-cell connections (the `iac`, `ja`, and `cl12` arrays) for the `flo",
      "rank": 7,
      "similarity_with_correct": 0.4722041433957408,
      "similarity_with_top": 0.5154609713715359,
      "top_match": "mf6_simple_model_example.py",
      "correct": false
    },
    {
      "workflow": "mfusg_freyberg_example.py",
      "question_idx": 6,
      "question": "My MODFLOW-USG model with large and small cells adjacent to each other is producing unstable head va",
      "rank": 2,
      "similarity_with_correct": 0.5440974943593506,
      "similarity_with_top": 0.5629819443456446,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "mfusg_freyberg_example.py",
      "question_idx": 7,
      "question": "Why might a Flopy script successfully run a MODFLOW-USG model but then fail with a `PermissionError`",
      "rank": 1,
      "similarity_with_correct": 0.5404065013811252,
      "similarity_with_top": 0.5404065013811252,
      "top_match": "mfusg_freyberg_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_freyberg_example.py",
      "question_idx": 8,
      "question": "For a model with a complex river network, what are the advantages of using the MODFLOW-USG SFR packa",
      "rank": 1,
      "similarity_with_correct": 0.6534914411403967,
      "similarity_with_top": 0.6534914411403967,
      "top_match": "mfusg_freyberg_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_freyberg_example.py",
      "question_idx": 9,
      "question": "When would I choose to build a MODFLOW-USG model over a MODFLOW 6 model using a DISV (vertex-based) ",
      "rank": 3,
      "similarity_with_correct": 0.5668082285703235,
      "similarity_with_top": 0.5816626076470701,
      "top_match": "gridgen_example.py",
      "correct": false
    },
    {
      "workflow": "mfusg_freyberg_example.py",
      "question_idx": 10,
      "question": "How does passing the `head` array to `PlotCrossSection.plot_array()` enable the correct visualizatio",
      "rank": 2,
      "similarity_with_correct": 0.474972372226544,
      "similarity_with_top": 0.5380504416073445,
      "top_match": "plot_cross_section_example.py",
      "correct": false
    },
    {
      "workflow": "mfusg_zaidel_example.py",
      "question_idx": 1,
      "question": "What is the function of `LAYTYP=4` in the MODFLOW-USG LPF package for simulating an unconfined aquif",
      "rank": 1,
      "similarity_with_correct": 0.5491469027271074,
      "similarity_with_top": 0.5491469027271074,
      "top_match": "mfusg_zaidel_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_zaidel_example.py",
      "question_idx": 2,
      "question": "Why is the Newton-Raphson method (`NONLINMETH=1`) in the SMS package essential for achieving converg",
      "rank": 1,
      "similarity_with_correct": 0.5192084253714137,
      "similarity_with_top": 0.5192084253714137,
      "top_match": "mfusg_zaidel_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_zaidel_example.py",
      "question_idx": 3,
      "question": "How do you configure the `MfUsgSms` package in FloPy to use the \u03c7MD linear solver with 7 orthogonali",
      "rank": 1,
      "similarity_with_correct": 0.5204460347954862,
      "similarity_with_top": 0.5204460347954862,
      "top_match": "mfusg_zaidel_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_zaidel_example.py",
      "question_idx": 4,
      "question": "How do the `btol` and `breduc` parameters in the `MfUsgSms` package control the solver's backtrackin",
      "rank": 1,
      "similarity_with_correct": 0.47566202406020225,
      "similarity_with_top": 0.47566202406020225,
      "top_match": "mfusg_zaidel_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_zaidel_example.py",
      "question_idx": 5,
      "question": "In a MODFLOW-USG model, how would you define a 'stairway' impervious base using the `botm` array for",
      "rank": 1,
      "similarity_with_correct": 0.5745977522337826,
      "similarity_with_top": 0.5745977522337826,
      "top_match": "mfusg_zaidel_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_zaidel_example.py",
      "question_idx": 6,
      "question": "My MODFLOW-USG model for an unconfined aquifer fails to converge; which `MfUsgSms` parameters like `",
      "rank": 1,
      "similarity_with_correct": 0.6112291017079976,
      "similarity_with_top": 0.6112291017079976,
      "top_match": "mfusg_zaidel_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_zaidel_example.py",
      "question_idx": 7,
      "question": "What causes a 'FAILED TO MEET HEAD CHANGE CRITERION' error in a MODFLOW-USG simulation of flow over ",
      "rank": 1,
      "similarity_with_correct": 0.6118728684038262,
      "similarity_with_top": 0.6118728684038262,
      "top_match": "mfusg_zaidel_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_zaidel_example.py",
      "question_idx": 8,
      "question": "For a steady-state unconfined flow problem with significant drying, when would you choose the MODFLO",
      "rank": 1,
      "similarity_with_correct": 0.64602754395244,
      "similarity_with_top": 0.64602754395244,
      "top_match": "mfusg_zaidel_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_zaidel_example.py",
      "question_idx": 9,
      "question": "What is the key difference between enabling rewetting via `LAYTYP=4` in `MfUsgLpf` versus using the ",
      "rank": 1,
      "similarity_with_correct": 0.5157017462820841,
      "similarity_with_top": 0.5157017462820841,
      "top_match": "mfusg_zaidel_example.py",
      "correct": true
    },
    {
      "workflow": "mfusg_zaidel_example.py",
      "question_idx": 10,
      "question": "How does this workflow's detailed configuration of the `MfUsgSms` package directly address the numer",
      "rank": 1,
      "similarity_with_correct": 0.5996534711316193,
      "similarity_with_top": 0.5996534711316193,
      "top_match": "mfusg_zaidel_example.py",
      "correct": true
    },
    {
      "workflow": "modelgrid_examples.py",
      "question_idx": 1,
      "question": "In FloPy's `modelgrid` objects, what is the difference between the `is_valid` and `is_complete` prop",
      "rank": 1,
      "similarity_with_correct": 0.5123264146160043,
      "similarity_with_top": 0.5123264146160043,
      "top_match": "modelgrid_examples.py",
      "correct": true
    },
    {
      "workflow": "modelgrid_examples.py",
      "question_idx": 2,
      "question": "How does the `modelgrid` object's handling of discretization data differ between a loaded MODFLOW 6 ",
      "rank": 2,
      "similarity_with_correct": 0.5742360969333595,
      "similarity_with_top": 0.5746421526681939,
      "top_match": "gridgen_example.py",
      "correct": false
    },
    {
      "workflow": "modelgrid_examples.py",
      "question_idx": 3,
      "question": "How do you use the `flopy.utils.gridgen.Gridgen` class to generate the `vertices` and `cell2d` lists",
      "rank": 1,
      "similarity_with_correct": 0.588942668035561,
      "similarity_with_top": 0.588942668035561,
      "top_match": "modelgrid_examples.py",
      "correct": true
    },
    {
      "workflow": "modelgrid_examples.py",
      "question_idx": 4,
      "question": "Explain how to use the `modelgrid.intersect()` method to create the `stress_period_data` for a WEL p",
      "rank": 1,
      "similarity_with_correct": 0.5360149656459677,
      "similarity_with_top": 0.5360149656459677,
      "top_match": "modelgrid_examples.py",
      "correct": true
    },
    {
      "workflow": "modelgrid_examples.py",
      "question_idx": 5,
      "question": "How would you create an `UnstructuredGrid` object if you only have three files: one with vertex IDs ",
      "rank": 1,
      "similarity_with_correct": 0.5299513179570385,
      "similarity_with_top": 0.5299513179570385,
      "top_match": "modelgrid_examples.py",
      "correct": true
    },
    {
      "workflow": "modelgrid_examples.py",
      "question_idx": 6,
      "question": "If `modelgrid.intersect(x, y, local=False)` returns `(nan, nan)`, what is the most likely reason, an",
      "rank": 1,
      "similarity_with_correct": 0.4355404879287119,
      "similarity_with_top": 0.4355404879287119,
      "top_match": "modelgrid_examples.py",
      "correct": true
    },
    {
      "workflow": "modelgrid_examples.py",
      "question_idx": 7,
      "question": "You've loaded a model and `modelgrid.plot()` shows the grid located at origin (0,0), but the .nam fi",
      "rank": 1,
      "similarity_with_correct": 0.49493262453501174,
      "similarity_with_top": 0.49493262453501174,
      "top_match": "modelgrid_examples.py",
      "correct": true
    },
    {
      "workflow": "modelgrid_examples.py",
      "question_idx": 8,
      "question": "For a model with local refinement around a river, when would you choose to build a `VertexGrid` usin",
      "rank": 2,
      "similarity_with_correct": 0.5676896587854735,
      "similarity_with_top": 0.5836617834997185,
      "top_match": "groundwater2023_watershed_example.py",
      "correct": false
    },
    {
      "workflow": "modelgrid_examples.py",
      "question_idx": 9,
      "question": "What is the key difference in the required input arguments when instantiating a `VertexGrid` versus ",
      "rank": 1,
      "similarity_with_correct": 0.60652851221744,
      "similarity_with_top": 0.60652851221744,
      "top_match": "modelgrid_examples.py",
      "correct": true
    },
    {
      "workflow": "modelgrid_examples.py",
      "question_idx": 10,
      "question": "What is the specific purpose of the `merge_coord_info` boolean parameter within the `modelgrid.set_c",
      "rank": 1,
      "similarity_with_correct": 0.39771270922850566,
      "similarity_with_top": 0.39771270922850566,
      "top_match": "modelgrid_examples.py",
      "correct": true
    },
    {
      "workflow": "modflow_postprocessing_example.py",
      "question_idx": 1,
      "question": "How does FloPy's `get_water_table` function handle inactive (HDRY) cells when generating a 2D water ",
      "rank": 1,
      "similarity_with_correct": 0.5849117558585541,
      "similarity_with_top": 0.5849117558585541,
      "top_match": "modflow_postprocessing_example.py",
      "correct": true
    },
    {
      "workflow": "modflow_postprocessing_example.py",
      "question_idx": 2,
      "question": "In a MODFLOW-2005 model, how does `flopy.modflow.Modflow.load()` use the `.nam` file to instantiate ",
      "rank": 19,
      "similarity_with_correct": 0.45651611657107566,
      "similarity_with_top": 0.5881882518871282,
      "top_match": "mf_load_tutorial.py",
      "correct": false
    },
    {
      "workflow": "modflow_postprocessing_example.py",
      "question_idx": 3,
      "question": "How do you use `flopy.utils.postprocessing.get_transmissivities` with the `sctop` and `scbot` argume",
      "rank": 2,
      "similarity_with_correct": 0.5045524031073161,
      "similarity_with_top": 0.6261461870081899,
      "top_match": "get_transmissivities_example.py",
      "correct": false
    },
    {
      "workflow": "modflow_postprocessing_example.py",
      "question_idx": 4,
      "question": "How do you configure the `modelgrid` object with `set_coord_info` and `angrot` to export a rotated G",
      "rank": 2,
      "similarity_with_correct": 0.514520746397408,
      "similarity_with_top": 0.5195904265075064,
      "top_match": "shapefile_export_example.py",
      "correct": false
    },
    {
      "workflow": "modflow_postprocessing_example.py",
      "question_idx": 5,
      "question": "What arguments does the `HeadFile.get_data()` method take to extract head results for a specific str",
      "rank": 1,
      "similarity_with_correct": 0.45378537170403216,
      "similarity_with_top": 0.45378537170403216,
      "top_match": "modflow_postprocessing_example.py",
      "correct": true
    },
    {
      "workflow": "modflow_postprocessing_example.py",
      "question_idx": 6,
      "question": "Why would a call to `flopy.export.utils.export_array` with a `.tif` extension fail with an `ImportEr",
      "rank": 2,
      "similarity_with_correct": 0.4074885171946863,
      "similarity_with_top": 0.43047865038430644,
      "top_match": "shapefile_export_example.py",
      "correct": false
    },
    {
      "workflow": "modflow_postprocessing_example.py",
      "question_idx": 7,
      "question": "Why might the `get_gradients()` output array have different dimensions or contain `nodata` values co",
      "rank": 1,
      "similarity_with_correct": 0.34445256061463064,
      "similarity_with_top": 0.34445256061463064,
      "top_match": "modflow_postprocessing_example.py",
      "correct": true
    },
    {
      "workflow": "modflow_postprocessing_example.py",
      "question_idx": 8,
      "question": "For preparing data for a GIS, when is it better to use `export_array` to create a GeoTiff versus usi",
      "rank": 2,
      "similarity_with_correct": 0.4090948485248895,
      "similarity_with_top": 0.48459621272370623,
      "top_match": "shapefile_export_example.py",
      "correct": false
    },
    {
      "workflow": "modflow_postprocessing_example.py",
      "question_idx": 9,
      "question": "To analyze vertical flow potential, what is the main advantage of using the `get_gradients` function",
      "rank": 2,
      "similarity_with_correct": 0.4288063378811209,
      "similarity_with_top": 0.43353558937244807,
      "top_match": "get_transmissivities_example.py",
      "correct": false
    },
    {
      "workflow": "modflow_postprocessing_example.py",
      "question_idx": 10,
      "question": "How does this workflow's method of calculating transmissivity at specific (r, c) locations differ fr",
      "rank": 8,
      "similarity_with_correct": 0.4142005676462084,
      "similarity_with_top": 0.5244724650944694,
      "top_match": "get_transmissivities_example.py",
      "correct": false
    },
    {
      "workflow": "modpath6_example.py",
      "question_idx": 1,
      "question": "What is the conceptual difference between a `trackdir='forward'` and `trackdir='backward'` simulatio",
      "rank": 1,
      "similarity_with_correct": 0.5418046971900455,
      "similarity_with_top": 0.5418046971900455,
      "top_match": "modpath6_example.py",
      "correct": true
    },
    {
      "workflow": "modpath6_example.py",
      "question_idx": 2,
      "question": "How does MODPATH interpret the `packages='RCH'` argument in `mp.create_mpsim` to determine particle ",
      "rank": 1,
      "similarity_with_correct": 0.5397580863888349,
      "similarity_with_top": 0.5397580863888349,
      "top_match": "modpath6_example.py",
      "correct": true
    },
    {
      "workflow": "modpath6_example.py",
      "question_idx": 3,
      "question": "How would you set up a backward particle tracking simulation in FloPy to determine the capture zone ",
      "rank": 1,
      "similarity_with_correct": 0.6661669094268465,
      "similarity_with_top": 0.6661669094268465,
      "top_match": "modpath6_example.py",
      "correct": true
    },
    {
      "workflow": "modpath6_example.py",
      "question_idx": 4,
      "question": "What data structures (e.g., numpy recarray, dictionary) are required to define `node_data` and `stre",
      "rank": 17,
      "similarity_with_correct": 0.4838900095375508,
      "similarity_with_top": 0.6192396176744928,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "modpath6_example.py",
      "question_idx": 5,
      "question": "Explain how to use the `get_destination_endpoint_data` method on a FloPy `EndpointFile` object to fi",
      "rank": 3,
      "similarity_with_correct": 0.3844819609507467,
      "similarity_with_top": 0.40274762278668885,
      "top_match": "modelgrid_examples.py",
      "correct": false
    },
    {
      "workflow": "modpath6_example.py",
      "question_idx": 6,
      "question": "My MODPATH simulation with forward tracking from the RCH package ran successfully but produced no pa",
      "rank": 1,
      "similarity_with_correct": 0.5366949699578212,
      "similarity_with_top": 0.5366949699578212,
      "top_match": "modpath6_example.py",
      "correct": true
    },
    {
      "workflow": "modpath6_example.py",
      "question_idx": 7,
      "question": "After replacing my WEL package with MNW2, my `m2.run_model()` call fails. What are the first two thi",
      "rank": 2,
      "similarity_with_correct": 0.44547251985725367,
      "similarity_with_top": 0.5340320575080306,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "modpath6_example.py",
      "question_idx": 8,
      "question": "For delineating a capture zone, what is the advantage of using `packages='MNW2'` for particle releas",
      "rank": 1,
      "similarity_with_correct": 0.5502324657736406,
      "similarity_with_top": 0.5502324657736406,
      "top_match": "modpath6_example.py",
      "correct": true
    },
    {
      "workflow": "modpath6_example.py",
      "question_idx": 9,
      "question": "When exporting pathlines to a shapefile, what is the difference between `one_per_particle=True` and ",
      "rank": 5,
      "similarity_with_correct": 0.36482231938785814,
      "similarity_with_top": 0.3813399211208033,
      "top_match": "vtk_pathlines_example.py",
      "correct": false
    },
    {
      "workflow": "modpath6_example.py",
      "question_idx": 10,
      "question": "How does this workflow filter pathlines to plot only those that terminate at the well, and which spe",
      "rank": 3,
      "similarity_with_correct": 0.5150611292427844,
      "similarity_with_top": 0.5266420259239555,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": false
    },
    {
      "workflow": "modpath7_create_simulation_example.py",
      "question_idx": 1,
      "question": "What is the purpose of the cell-by-cell budget (.cbb) file from MODFLOW 6 in a MODPATH 7 simulation?",
      "rank": 1,
      "similarity_with_correct": 0.5383700036121233,
      "similarity_with_top": 0.5383700036121233,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": true
    },
    {
      "workflow": "modpath7_create_simulation_example.py",
      "question_idx": 2,
      "question": "How does MODPATH 7 use the head (.hds) and budget (.cbb) files to calculate particle paths?",
      "rank": 1,
      "similarity_with_correct": 0.5640782916583766,
      "similarity_with_top": 0.5640782916583766,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": true
    },
    {
      "workflow": "modpath7_create_simulation_example.py",
      "question_idx": 3,
      "question": "How do you use the `create_mp7` function to start a backward tracking simulation from specific river",
      "rank": 1,
      "similarity_with_correct": 0.6437895603212425,
      "similarity_with_top": 0.6437895603212425,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": true
    },
    {
      "workflow": "modpath7_create_simulation_example.py",
      "question_idx": 4,
      "question": "What is the practical difference in particle placement when setting `layercelldivisions=1` versus `l",
      "rank": 1,
      "similarity_with_correct": 0.4534273657592711,
      "similarity_with_top": 0.4534273657592711,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": true
    },
    {
      "workflow": "modpath7_create_simulation_example.py",
      "question_idx": 5,
      "question": "How would you modify this script's backward tracking model to release particles *only* from the well",
      "rank": 1,
      "similarity_with_correct": 0.5570704238734503,
      "similarity_with_top": 0.5570704238734503,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": true
    },
    {
      "workflow": "modpath7_create_simulation_example.py",
      "question_idx": 6,
      "question": "My MODPATH 7 run fails with a \"cannot open budget file\" error, but my MODFLOW 6 model ran successful",
      "rank": 1,
      "similarity_with_correct": 0.5068112433324661,
      "similarity_with_top": 0.5068112433324661,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": true
    },
    {
      "workflow": "modpath7_create_simulation_example.py",
      "question_idx": 7,
      "question": "Why might my backward-tracked pathlines from a well terminate immediately at the well screen instead",
      "rank": 1,
      "similarity_with_correct": 0.5150156798545666,
      "similarity_with_top": 0.5150156798545666,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": true
    },
    {
      "workflow": "modpath7_create_simulation_example.py",
      "question_idx": 8,
      "question": "For delineating a well's capture zone, what is the advantage of using backward tracking from the wel",
      "rank": 1,
      "similarity_with_correct": 0.5088857619598554,
      "similarity_with_top": 0.5088857619598554,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": true
    },
    {
      "workflow": "modpath7_create_simulation_example.py",
      "question_idx": 9,
      "question": "When would it be better to manually create the `mp7bas` and `mp7sim` packages instead of using the `",
      "rank": 1,
      "similarity_with_correct": 0.47196240217276253,
      "similarity_with_top": 0.47196240217276253,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": true
    },
    {
      "workflow": "modpath7_create_simulation_example.py",
      "question_idx": 10,
      "question": "How does the `get_destination_endpoint_data(dest_cells=...)` function work to filter particle data f",
      "rank": 1,
      "similarity_with_correct": 0.38808860743316903,
      "similarity_with_top": 0.38808860743316903,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": true
    },
    {
      "workflow": "mt3d-usgs_example.py",
      "question_idx": 1,
      "question": "What is the role of the `CrnkNic.ftl` file in a coupled MODFLOW-NWT and MT3D-USGS simulation, and ho",
      "rank": 1,
      "similarity_with_correct": 0.6348204407660518,
      "similarity_with_top": 0.6348204407660518,
      "top_match": "mt3d-usgs_example.py",
      "correct": true
    },
    {
      "workflow": "mt3d-usgs_example.py",
      "question_idx": 2,
      "question": "In MT3D-USGS, what is the key difference between simulating transport in the aquifer (using ADV/DSP)",
      "rank": 1,
      "similarity_with_correct": 0.6560987654656943,
      "similarity_with_top": 0.6560987654656943,
      "top_match": "mt3d-usgs_example.py",
      "correct": true
    },
    {
      "workflow": "mt3d-usgs_example.py",
      "question_idx": 3,
      "question": "How do you configure the `SFR2` package in FloPy to represent a stream with six distinct segments, e",
      "rank": 5,
      "similarity_with_correct": 0.5263242587458631,
      "similarity_with_top": 0.656689245617609,
      "top_match": "sfrpackage_example.py",
      "correct": false
    },
    {
      "workflow": "mt3d-usgs_example.py",
      "question_idx": 4,
      "question": "In the MT3D-USGS `SFT` package, what do the `nobssf` and `obs_sf` parameters represent, and how are ",
      "rank": 1,
      "similarity_with_correct": 0.49523117024128505,
      "similarity_with_top": 0.49523117024128505,
      "top_match": "mt3d-usgs_example.py",
      "correct": true
    },
    {
      "workflow": "mt3d-usgs_example.py",
      "question_idx": 5,
      "question": "When setting up the `SSM` package, how do you use `itype['CHD']` to specify that all constant-head c",
      "rank": 14,
      "similarity_with_correct": 0.3037594827348886,
      "similarity_with_top": 0.4150401629109559,
      "top_match": "mt3dms_ssm_package_tutorial.py",
      "correct": false
    },
    {
      "workflow": "mt3d-usgs_example.py",
      "question_idx": 6,
      "question": "What could cause a 'FTL FILE MISSING OR MISMATCHED' error when running an MT3D-USGS model, and how d",
      "rank": 1,
      "similarity_with_correct": 0.5357313686612757,
      "similarity_with_top": 0.5357313686612757,
      "top_match": "mt3d-usgs_example.py",
      "correct": true
    },
    {
      "workflow": "mt3d-usgs_example.py",
      "question_idx": 7,
      "question": "If my SFT simulation is unstable, which parameters in the SFT package, such as `cclosesf`, `mxitersf",
      "rank": 1,
      "similarity_with_correct": 0.5050807991208424,
      "similarity_with_top": 0.5050807991208424,
      "top_match": "mt3d-usgs_example.py",
      "correct": true
    },
    {
      "workflow": "mt3d-usgs_example.py",
      "question_idx": 8,
      "question": "When modeling flow in an unconfined aquifer with potential for cell drying, why is MODFLOW-NWT with ",
      "rank": 11,
      "similarity_with_correct": 0.5354723925130268,
      "similarity_with_top": 0.6191785328157764,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "mt3d-usgs_example.py",
      "question_idx": 9,
      "question": "For modeling contaminant transport in a river, when would you use the comprehensive SFR/SFT package ",
      "rank": 1,
      "similarity_with_correct": 0.6058713324753879,
      "similarity_with_top": 0.6058713324753879,
      "top_match": "mt3d-usgs_example.py",
      "correct": true
    },
    {
      "workflow": "mt3d-usgs_example.py",
      "question_idx": 10,
      "question": "How does this workflow specifically validate the MT3D-USGS SFT package by loading and plotting its c",
      "rank": 1,
      "similarity_with_correct": 0.6786565216653138,
      "similarity_with_top": 0.6786565216653138,
      "top_match": "mt3d-usgs_example.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_examples.py",
      "question_idx": 1,
      "question": "In an MT3DMS workflow, what does the `mixelm` parameter in the Advection (ADV) package control, and ",
      "rank": 1,
      "similarity_with_correct": 0.5661774835880923,
      "similarity_with_top": 0.5661774835880923,
      "top_match": "mt3dms_examples.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_examples.py",
      "question_idx": 2,
      "question": "What is the role of the `modflowmodel` argument in the `flopy.mt3d.Mt3dms` constructor and how does ",
      "rank": 1,
      "similarity_with_correct": 0.59073720368131,
      "similarity_with_top": 0.59073720368131,
      "top_match": "mt3dms_examples.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_examples.py",
      "question_idx": 3,
      "question": "How do you configure the `Mt3dRct` package to model Freundlich sorption, and which parameters corres",
      "rank": 1,
      "similarity_with_correct": 0.5061468745918777,
      "similarity_with_top": 0.5061468745918777,
      "top_match": "mt3dms_examples.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_examples.py",
      "question_idx": 4,
      "question": "To simulate a well that injects a tracer for one year and then pumps clean water for a second year, ",
      "rank": 4,
      "similarity_with_correct": 0.5295006984319437,
      "similarity_with_top": 0.5422113186032171,
      "top_match": "swi2package_example3.py",
      "correct": false
    },
    {
      "workflow": "mt3dms_examples.py",
      "question_idx": 5,
      "question": "How would you set the concentration of areally-distributed recharge water using the `crch` argument ",
      "rank": 9,
      "similarity_with_correct": 0.4348991384151442,
      "similarity_with_top": 0.4859429708486601,
      "top_match": "seawat_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "mt3dms_examples.py",
      "question_idx": 6,
      "question": "My MT3DMS model with a sharp front shows excessive numerical dispersion when using the standard fini",
      "rank": 1,
      "similarity_with_correct": 0.47920541480859147,
      "similarity_with_top": 0.47920541480859147,
      "top_match": "mt3dms_examples.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_examples.py",
      "question_idx": 7,
      "question": "I'm getting a large mass balance error in the `MT3D001.MAS` file for a model with multiple pumping w",
      "rank": 1,
      "similarity_with_correct": 0.5739747651220731,
      "similarity_with_top": 0.5739747651220731,
      "top_match": "mt3dms_examples.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_examples.py",
      "question_idx": 8,
      "question": "When is it more appropriate to use a non-equilibrium sorption model (`isothm=4`) in `Mt3dRct` versus",
      "rank": 1,
      "similarity_with_correct": 0.49202004145961087,
      "similarity_with_top": 0.49202004145961087,
      "top_match": "mt3dms_examples.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_examples.py",
      "question_idx": 9,
      "question": "For a 2D problem with significant grid distortion, what is the advantage of using a particle-based m",
      "rank": 1,
      "similarity_with_correct": 0.43329530172951397,
      "similarity_with_top": 0.43329530172951397,
      "top_match": "mt3dms_examples.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_examples.py",
      "question_idx": 10,
      "question": "This workflow recreates ten official benchmark problems. How does the setup of Problem 8 (vertical c",
      "rank": 1,
      "similarity_with_correct": 0.6157070752297561,
      "similarity_with_top": 0.6157070752297561,
      "top_match": "mt3dms_examples.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_sft_lkt_uzt_tutorial.py",
      "question_idx": 1,
      "question": "What is the purpose of the Flow-Transport Link (.ftl) file in an MT3D-USGS simulation, and why is `f",
      "rank": 1,
      "similarity_with_correct": 0.6309758747715923,
      "similarity_with_top": 0.6309758747715923,
      "top_match": "mt3dms_sft_lkt_uzt_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_sft_lkt_uzt_tutorial.py",
      "question_idx": 2,
      "question": "How does MT3D-USGS's `DRYCell` option in the BTN package relate to the behavior of MODFLOW-NWT's UPW",
      "rank": 1,
      "similarity_with_correct": 0.578051775869187,
      "similarity_with_top": 0.578051775869187,
      "top_match": "mt3dms_sft_lkt_uzt_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_sft_lkt_uzt_tutorial.py",
      "question_idx": 3,
      "question": "How do you configure the UZF package (`irunbnd`) to route overland runoff to a specific segment in t",
      "rank": 2,
      "similarity_with_correct": 0.5215341889434746,
      "similarity_with_top": 0.5884075931320434,
      "top_match": "uzf_example.py",
      "correct": false
    },
    {
      "workflow": "mt3dms_sft_lkt_uzt_tutorial.py",
      "question_idx": 4,
      "question": "In the MODFLOW LAK package, what is the purpose of the `bdlknc` array and why does this script progr",
      "rank": 7,
      "similarity_with_correct": 0.40959636821626183,
      "similarity_with_top": 0.4893870879923442,
      "top_match": "lake_example.py",
      "correct": false
    },
    {
      "workflow": "mt3dms_sft_lkt_uzt_tutorial.py",
      "question_idx": 5,
      "question": "When setting up the SFT package in MT3D-USGS, where does it get the stream network geometry, reach c",
      "rank": 2,
      "similarity_with_correct": 0.6028988117355205,
      "similarity_with_top": 0.6435304403686637,
      "top_match": "mt3d-usgs_example.py",
      "correct": false
    },
    {
      "workflow": "mt3dms_sft_lkt_uzt_tutorial.py",
      "question_idx": 6,
      "question": "My MT3D-USGS simulation aborts with a large mass balance error. If I suspect the problem is from sur",
      "rank": 1,
      "similarity_with_correct": 0.6470155257301908,
      "similarity_with_top": 0.6470155257301908,
      "top_match": "mt3dms_sft_lkt_uzt_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_sft_lkt_uzt_tutorial.py",
      "question_idx": 7,
      "question": "Why might my MODFLOW-NWT model with UZF, LAK, and SFR packages fail to converge when heavy rainfall ",
      "rank": 1,
      "similarity_with_correct": 0.6213941264292497,
      "similarity_with_top": 0.6213941264292497,
      "top_match": "mt3dms_sft_lkt_uzt_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_sft_lkt_uzt_tutorial.py",
      "question_idx": 8,
      "question": "When would you use the advanced SFT and LKT packages versus a simpler approach of representing strea",
      "rank": 1,
      "similarity_with_correct": 0.6439538966118147,
      "similarity_with_top": 0.6439538966118147,
      "top_match": "mt3dms_sft_lkt_uzt_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_sft_lkt_uzt_tutorial.py",
      "question_idx": 9,
      "question": "To model a contaminant infiltrating from the surface, what is the key advantage of using the UZT pac",
      "rank": 2,
      "similarity_with_correct": 0.546754792906308,
      "similarity_with_top": 0.548843067205419,
      "top_match": "uzf_example.py",
      "correct": false
    },
    {
      "workflow": "mt3dms_sft_lkt_uzt_tutorial.py",
      "question_idx": 10,
      "question": "How would you set up concentration observations to track a solute that originates as contaminated in",
      "rank": 1,
      "similarity_with_correct": 0.5425874773992754,
      "similarity_with_top": 0.5425874773992754,
      "top_match": "mt3dms_sft_lkt_uzt_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_ssm_package_tutorial.py",
      "question_idx": 1,
      "question": "In SEAWAT, what is the purpose of the `indense=-1` flag in the VDF package, and why does this workfl",
      "rank": 1,
      "similarity_with_correct": 0.6290181043784224,
      "similarity_with_top": 0.6290181043784224,
      "top_match": "mt3dms_ssm_package_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_ssm_package_tutorial.py",
      "question_idx": 2,
      "question": "When setting up a multi-component SEAWAT model (`ncomp > 1`), how does MT3DMS handle the initial con",
      "rank": 1,
      "similarity_with_correct": 0.5774110406784673,
      "similarity_with_top": 0.5774110406784673,
      "top_match": "mt3dms_ssm_package_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_ssm_package_tutorial.py",
      "question_idx": 3,
      "question": "How do you use FloPy's `Mt3dSsm.itype_dict()` function to correctly specify the source type for a Ge",
      "rank": 1,
      "similarity_with_correct": 0.5250377360397571,
      "similarity_with_top": 0.5250377360397571,
      "top_match": "mt3dms_ssm_package_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_ssm_package_tutorial.py",
      "question_idx": 4,
      "question": "Why must the injection well data be re-specified in the `ssm_data` dictionary for stress period 5, e",
      "rank": 1,
      "similarity_with_correct": 0.46067242822896126,
      "similarity_with_top": 0.46067242822896126,
      "top_match": "mt3dms_ssm_package_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_ssm_package_tutorial.py",
      "question_idx": 5,
      "question": "How would you structure the `ssm_data` in FloPy to define a concentration for a MODFLOW `RCH` packag",
      "rank": 1,
      "similarity_with_correct": 0.5358799752372709,
      "similarity_with_top": 0.5358799752372709,
      "top_match": "mt3dms_ssm_package_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_ssm_package_tutorial.py",
      "question_idx": 6,
      "question": "What is the most likely cause of a SEAWAT input error stating it cannot read density from the VDF fi",
      "rank": 1,
      "similarity_with_correct": 0.5654781367095958,
      "similarity_with_top": 0.5654781367095958,
      "top_match": "mt3dms_ssm_package_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_ssm_package_tutorial.py",
      "question_idx": 7,
      "question": "If my model runs but the solute plume is not originating from my GHB cells, what is a likely error i",
      "rank": 1,
      "similarity_with_correct": 0.45481860172257327,
      "similarity_with_top": 0.45481860172257327,
      "top_match": "mt3dms_ssm_package_tutorial.py",
      "correct": true
    },
    {
      "workflow": "mt3dms_ssm_package_tutorial.py",
      "question_idx": 8,
      "question": "For defining concentrations of injected water, when is it better to use the MT3DMS SSM package versu",
      "rank": 3,
      "similarity_with_correct": 0.5389281014464253,
      "similarity_with_top": 0.5437907289767505,
      "top_match": "swi2package_example4.py",
      "correct": false
    },
    {
      "workflow": "mt3dms_ssm_package_tutorial.py",
      "question_idx": 9,
      "question": "What is the key difference between setting up a multi-component model with `ncomp=2` in MT3DMS versu",
      "rank": 2,
      "similarity_with_correct": 0.4264609693358635,
      "similarity_with_top": 0.44122512442533335,
      "top_match": "mt3dms_examples.py",
      "correct": false
    },
    {
      "workflow": "mt3dms_ssm_package_tutorial.py",
      "question_idx": 10,
      "question": "Why does this workflow manually write a '-1' to the `.vdf` file for each stress period, and what doe",
      "rank": 1,
      "similarity_with_correct": 0.5673423560225894,
      "similarity_with_top": 0.5673423560225894,
      "top_match": "mt3dms_ssm_package_tutorial.py",
      "correct": true
    },
    {
      "workflow": "nwt_option_blocks_tutorial.py",
      "question_idx": 1,
      "question": "In MODFLOW-NWT, what is the purpose of the `BEGIN OPTIONS` / `END OPTIONS` block, and which common b",
      "rank": 1,
      "similarity_with_correct": 0.6292751728298236,
      "similarity_with_top": 0.6292751728298236,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": true
    },
    {
      "workflow": "nwt_option_blocks_tutorial.py",
      "question_idx": 2,
      "question": "How does setting `version='mfnwt'` in `flopy.modflow.Modflow.load()` specifically alter how the UZF ",
      "rank": 1,
      "similarity_with_correct": 0.6102726185745795,
      "similarity_with_top": 0.6102726185745795,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": true
    },
    {
      "workflow": "nwt_option_blocks_tutorial.py",
      "question_idx": 3,
      "question": "Using FloPy's `OptionBlock` class, how would you add two auxiliary variables, 'temp' and 'age', to a",
      "rank": 1,
      "similarity_with_correct": 0.5262276589325292,
      "similarity_with_top": 0.5262276589325292,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": true
    },
    {
      "workflow": "nwt_option_blocks_tutorial.py",
      "question_idx": 4,
      "question": "After loading a MODFLOW-NWT model, how can you programmatically check if the UZF package options are",
      "rank": 1,
      "similarity_with_correct": 0.6441015355734392,
      "similarity_with_top": 0.6441015355734392,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": true
    },
    {
      "workflow": "nwt_option_blocks_tutorial.py",
      "question_idx": 5,
      "question": "How do you create a new `ModflowWel` package instance from scratch in FloPy where the options are de",
      "rank": 1,
      "similarity_with_correct": 0.6088651117048328,
      "similarity_with_top": 0.6088651117048328,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": true
    },
    {
      "workflow": "nwt_option_blocks_tutorial.py",
      "question_idx": 6,
      "question": "I loaded my MODFLOW-NWT model without `version='mfnwt'`, and now `ml.uzf.options` is `None`. Why did",
      "rank": 1,
      "similarity_with_correct": 0.5353692872525052,
      "similarity_with_top": 0.5353692872525052,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": true
    },
    {
      "workflow": "nwt_option_blocks_tutorial.py",
      "question_idx": 7,
      "question": "My MODFLOW-NWT simulation fails with an 'unrecognized keyword' error on line 2 of my WEL file. I rec",
      "rank": 1,
      "similarity_with_correct": 0.598533991164131,
      "similarity_with_top": 0.598533991164131,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": true
    },
    {
      "workflow": "nwt_option_blocks_tutorial.py",
      "question_idx": 8,
      "question": "For a complex UZF setup in MODFLOW-NWT, what is the practical advantage of using the multi-line `Opt",
      "rank": 1,
      "similarity_with_correct": 0.6546104059423777,
      "similarity_with_top": 0.6546104059423777,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": true
    },
    {
      "workflow": "nwt_option_blocks_tutorial.py",
      "question_idx": 9,
      "question": "How does managing WEL package options with FloPy's `OptionBlock` for MODFLOW-NWT differ from specify",
      "rank": 1,
      "similarity_with_correct": 0.7473717559712549,
      "similarity_with_top": 0.7473717559712549,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": true
    },
    {
      "workflow": "nwt_option_blocks_tutorial.py",
      "question_idx": 10,
      "question": "How can you use FloPy to read a MODFLOW-NWT model that uses single-line options for its UZF package ",
      "rank": 1,
      "similarity_with_correct": 0.7123079105821291,
      "similarity_with_top": 0.7123079105821291,
      "top_match": "nwt_option_blocks_tutorial.py",
      "correct": true
    },
    {
      "workflow": "pest_tutorial01.py",
      "question_idx": 1,
      "question": "What is the role of the `span` dictionary in the `flopy.pest.Params` object when defining a paramete",
      "rank": 1,
      "similarity_with_correct": 0.602955719785617,
      "similarity_with_top": 0.602955719785617,
      "top_match": "pest_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "pest_tutorial01.py",
      "question_idx": 2,
      "question": "How does the structure of the `span` dictionary differ when parameterizing a static 3D array like LP",
      "rank": 1,
      "similarity_with_correct": 0.48984014974282397,
      "similarity_with_top": 0.48984014974282397,
      "top_match": "pest_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "pest_tutorial01.py",
      "question_idx": 3,
      "question": "How do you use `flopy.pest.zonearray2params` to generate PEST parameters for hydraulic conductivity ",
      "rank": 1,
      "similarity_with_correct": 0.6374490720775239,
      "similarity_with_top": 0.6374490720775239,
      "top_match": "pest_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "pest_tutorial01.py",
      "question_idx": 4,
      "question": "How would you configure `flopy.pest.Params` to create a single recharge parameter (`RECH_MULT`) that",
      "rank": 1,
      "similarity_with_correct": 0.5455362850266183,
      "similarity_with_top": 0.5455362850266183,
      "top_match": "pest_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "pest_tutorial01.py",
      "question_idx": 5,
      "question": "What is the purpose of setting `span={'layers': [0, 2]}`? Does this replace the values in those laye",
      "rank": 1,
      "similarity_with_correct": 0.36176117574126365,
      "similarity_with_top": 0.36176117574126365,
      "top_match": "pest_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "pest_tutorial01.py",
      "question_idx": 6,
      "question": "Why might your generated `.tpl` file have parameter placeholders (`~param~`) that are misaligned wit",
      "rank": 1,
      "similarity_with_correct": 0.5138456131522895,
      "similarity_with_top": 0.5138456131522895,
      "top_match": "pest_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "pest_tutorial01.py",
      "question_idx": 7,
      "question": "What `AttributeError` might you encounter if you try to run `TemplateWriter.write_template()` for a ",
      "rank": 1,
      "similarity_with_correct": 0.4605391514392474,
      "similarity_with_top": 0.4605391514392474,
      "top_match": "pest_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "pest_tutorial01.py",
      "question_idx": 8,
      "question": "For calibrating hydraulic conductivity, when is it more appropriate to use the `zonearray2params` ap",
      "rank": 1,
      "similarity_with_correct": 0.47022256364722576,
      "similarity_with_top": 0.47022256364722576,
      "top_match": "pest_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "pest_tutorial01.py",
      "question_idx": 9,
      "question": "What is the practical difference in the PEST workflow between creating one parameter for `rech` with",
      "rank": 1,
      "similarity_with_correct": 0.568206959377902,
      "similarity_with_top": 0.568206959377902,
      "top_match": "pest_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "pest_tutorial01.py",
      "question_idx": 10,
      "question": "How do you define a PEST parameter using `flopy.pest.Params` that applies a specific recharge value ",
      "rank": 1,
      "similarity_with_correct": 0.6252819577789356,
      "similarity_with_top": 0.6252819577789356,
      "top_match": "pest_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "plot_array_example.py",
      "question_idx": 1,
      "question": "What is the difference between loading a model with `flopy.modflow.Modflow.load()` for MODFLOW-2005 ",
      "rank": 4,
      "similarity_with_correct": 0.5789663267434262,
      "similarity_with_top": 0.6208418378619838,
      "top_match": "mf_load_tutorial.py",
      "correct": false
    },
    {
      "workflow": "plot_array_example.py",
      "question_idx": 2,
      "question": "In a MODFLOW-2005 model using the LPF package, how are inter-layer flow properties defined and visua",
      "rank": 1,
      "similarity_with_correct": 0.546337179777874,
      "similarity_with_top": 0.546337179777874,
      "top_match": "plot_array_example.py",
      "correct": true
    },
    {
      "workflow": "plot_array_example.py",
      "question_idx": 3,
      "question": "How can you use the `.plot()` method on a recharge object (`ml.rch.rech`) to display data for a sing",
      "rank": 1,
      "similarity_with_correct": 0.4866493025120118,
      "similarity_with_top": 0.4866493025120118,
      "top_match": "plot_array_example.py",
      "correct": true
    },
    {
      "workflow": "plot_array_example.py",
      "question_idx": 4,
      "question": "How do you plot the hydraulic conductivity (`hk`) for only layer 11 (`mflay=10`) of a multi-layer LP",
      "rank": 1,
      "similarity_with_correct": 0.4806639552949207,
      "similarity_with_top": 0.4806639552949207,
      "top_match": "plot_array_example.py",
      "correct": true
    },
    {
      "workflow": "plot_array_example.py",
      "question_idx": 5,
      "question": "How do you use `flopy.utils.HeadFile` to read simulated heads and plot the results for the final tim",
      "rank": 1,
      "similarity_with_correct": 0.5538814539711701,
      "similarity_with_top": 0.5538814539711701,
      "top_match": "plot_array_example.py",
      "correct": true
    },
    {
      "workflow": "plot_array_example.py",
      "question_idx": 6,
      "question": "After running a model, `os.path.isfile()` returns `False` for the `.hds` file. What does the `buff` ",
      "rank": 1,
      "similarity_with_correct": 0.35574978622043096,
      "similarity_with_top": 0.35574978622043096,
      "top_match": "plot_array_example.py",
      "correct": true
    },
    {
      "workflow": "plot_array_example.py",
      "question_idx": 7,
      "question": "Why would a plot of model top (`ml.dis.top.plot()`) appear to have incorrect values or colors in cer",
      "rank": 1,
      "similarity_with_correct": 0.40826624480751095,
      "similarity_with_top": 0.40826624480751095,
      "top_match": "plot_array_example.py",
      "correct": true
    },
    {
      "workflow": "plot_array_example.py",
      "question_idx": 8,
      "question": "For creating a publication-quality map, when is it better to use `flopy.plot.PlotMapView` instead of",
      "rank": 1,
      "similarity_with_correct": 0.5538603000607023,
      "similarity_with_top": 0.5538603000607023,
      "top_match": "plot_array_example.py",
      "correct": true
    },
    {
      "workflow": "plot_array_example.py",
      "question_idx": 9,
      "question": "What is the functional difference between plotting heads using `hdobj.plot()` and first extracting t",
      "rank": 1,
      "similarity_with_correct": 0.48522533698745596,
      "similarity_with_top": 0.48522533698745596,
      "top_match": "plot_array_example.py",
      "correct": true
    },
    {
      "workflow": "plot_array_example.py",
      "question_idx": 10,
      "question": "How can you use the `filename_base` argument in a single `.plot()` call on a 3D array (like `ml.lpf.",
      "rank": 1,
      "similarity_with_correct": 0.4513730086571327,
      "similarity_with_top": 0.4513730086571327,
      "top_match": "plot_array_example.py",
      "correct": true
    },
    {
      "workflow": "plot_cross_section_example.py",
      "question_idx": 1,
      "question": "How does `PlotCrossSection` handle the geometry of an unstructured vertex grid (DISV) when a cross-s",
      "rank": 1,
      "similarity_with_correct": 0.5475271571610298,
      "similarity_with_top": 0.5475271571610298,
      "top_match": "plot_cross_section_example.py",
      "correct": true
    },
    {
      "workflow": "plot_cross_section_example.py",
      "question_idx": 2,
      "question": "How do you plot GWT concentration results on a cross-section while using the hydraulic head from the",
      "rank": 2,
      "similarity_with_correct": 0.5258863106747795,
      "similarity_with_top": 0.5557130042872069,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "plot_cross_section_example.py",
      "question_idx": 3,
      "question": "How do you configure the `plot_bc` method to display both `WEL` and `RIV` package locations on the s",
      "rank": 1,
      "similarity_with_correct": 0.4929683272091218,
      "similarity_with_top": 0.4929683272091218,
      "top_match": "plot_cross_section_example.py",
      "correct": true
    },
    {
      "workflow": "plot_cross_section_example.py",
      "question_idx": 4,
      "question": "In the Keating GWT model example, how is the `RCH` package used to specify both a recharge rate and ",
      "rank": 34,
      "similarity_with_correct": 0.390763837883499,
      "similarity_with_top": 0.5648792844444199,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "plot_cross_section_example.py",
      "question_idx": 5,
      "question": "How do I use `flopy.utils.CellBudgetFile` to extract the `SPDIS` array from a MODFLOW-6 CBC file for",
      "rank": 1,
      "similarity_with_correct": 0.5297761962239427,
      "similarity_with_top": 0.5297761962239427,
      "top_match": "plot_cross_section_example.py",
      "correct": true
    },
    {
      "workflow": "plot_cross_section_example.py",
      "question_idx": 6,
      "question": "Why might `plot_vector` for a DISV model produce misleading results if the specified cross-section l",
      "rank": 1,
      "similarity_with_correct": 0.5193040130685016,
      "similarity_with_top": 0.5193040130685016,
      "top_match": "plot_cross_section_example.py",
      "correct": true
    },
    {
      "workflow": "plot_cross_section_example.py",
      "question_idx": 7,
      "question": "I'm getting a `KeyError: 'line'` when creating a `PlotCrossSection` object. What is the correct dict",
      "rank": 1,
      "similarity_with_correct": 0.45854557775984206,
      "similarity_with_top": 0.45854557775984206,
      "top_match": "plot_cross_section_example.py",
      "correct": true
    },
    {
      "workflow": "plot_cross_section_example.py",
      "question_idx": 8,
      "question": "When defining a cross-section, what is the practical difference between using `line={'Column': 5}` v",
      "rank": 1,
      "similarity_with_correct": 0.4421581177233471,
      "similarity_with_top": 0.4421581177233471,
      "top_match": "plot_cross_section_example.py",
      "correct": true
    },
    {
      "workflow": "plot_cross_section_example.py",
      "question_idx": 9,
      "question": "How does the visual output of `xsect.plot_array(head)` differ from `xsect.plot_array(head, head=head",
      "rank": 1,
      "similarity_with_correct": 0.4652946304970554,
      "similarity_with_top": 0.4652946304970554,
      "top_match": "plot_cross_section_example.py",
      "correct": true
    },
    {
      "workflow": "plot_cross_section_example.py",
      "question_idx": 10,
      "question": "How do you use `flopy.plot.plotutil.shapefile_get_vertices` to load a polyline from a shapefile and ",
      "rank": 1,
      "similarity_with_correct": 0.5066271992490066,
      "similarity_with_top": 0.5066271992490066,
      "top_match": "plot_cross_section_example.py",
      "correct": true
    },
    {
      "workflow": "plot_map_view_example.py",
      "question_idx": 1,
      "question": "How does the `PlotMapView` class handle plotting for a MODFLOW 6 vertex grid (DISV) differently than",
      "rank": 1,
      "similarity_with_correct": 0.6550689370400986,
      "similarity_with_top": 0.6550689370400986,
      "top_match": "plot_map_view_example.py",
      "correct": true
    },
    {
      "workflow": "plot_map_view_example.py",
      "question_idx": 2,
      "question": "What is the workflow to take MODFLOW flow results and MODPATH particle tracking results and display ",
      "rank": 2,
      "similarity_with_correct": 0.6091938880599336,
      "similarity_with_top": 0.6153929148194424,
      "top_match": "groundwater_paper_uspb_example.py",
      "correct": false
    },
    {
      "workflow": "plot_map_view_example.py",
      "question_idx": 3,
      "question": "How do I use `plot_bc` to show river cells in purple and well cells in navy blue on the same plot?",
      "rank": 1,
      "similarity_with_correct": 0.4862566675553181,
      "similarity_with_top": 0.4862566675553181,
      "top_match": "plot_map_view_example.py",
      "correct": true
    },
    {
      "workflow": "plot_map_view_example.py",
      "question_idx": 4,
      "question": "What are the arguments to `flopy.utils.postprocessing.get_specific_discharge` when calculating vecto",
      "rank": 2,
      "similarity_with_correct": 0.5655546327933176,
      "similarity_with_top": 0.5730683130439458,
      "top_match": "groundwater_paper_uspb_example.py",
      "correct": false
    },
    {
      "workflow": "plot_map_view_example.py",
      "question_idx": 5,
      "question": "How can I contour the bottom elevation of layer 0 from a MODFLOW 6 model at 0.5-meter intervals usin",
      "rank": 7,
      "similarity_with_correct": 0.3933251890833148,
      "similarity_with_top": 0.4436952120866381,
      "top_match": "array_output_tutorial.py",
      "correct": false
    },
    {
      "workflow": "plot_map_view_example.py",
      "question_idx": 6,
      "question": "My shapefile is not aligning with my model grid when I use `mapview.plot_shapefile()`. What paramete",
      "rank": 2,
      "similarity_with_correct": 0.42424690782322216,
      "similarity_with_top": 0.43442395060734534,
      "top_match": "modelgrid_examples.py",
      "correct": false
    },
    {
      "workflow": "plot_map_view_example.py",
      "question_idx": 7,
      "question": "My specific discharge vectors plotted with `plot_vector` look correct, but the underlying head conto",
      "rank": 1,
      "similarity_with_correct": 0.49453941850523386,
      "similarity_with_top": 0.49453941850523386,
      "top_match": "plot_map_view_example.py",
      "correct": true
    },
    {
      "workflow": "plot_map_view_example.py",
      "question_idx": 8,
      "question": "When visualizing heads, what is the practical difference between using `mapview.plot_array()` and `m",
      "rank": 1,
      "similarity_with_correct": 0.46624427954294356,
      "similarity_with_top": 0.46624427954294356,
      "top_match": "plot_map_view_example.py",
      "correct": true
    },
    {
      "workflow": "plot_map_view_example.py",
      "question_idx": 9,
      "question": "What is the difference in getting specific discharge data for plotting from a MODFLOW 6 model (using",
      "rank": 1,
      "similarity_with_correct": 0.5653783953350002,
      "similarity_with_top": 0.5653783953350002,
      "top_match": "plot_map_view_example.py",
      "correct": true
    },
    {
      "workflow": "plot_map_view_example.py",
      "question_idx": 10,
      "question": "How can I wrap my plotting code with `with styles.USGSMap():` to automatically format my figure axes",
      "rank": 1,
      "similarity_with_correct": 0.44904763800723524,
      "similarity_with_top": 0.44904763800723524,
      "top_match": "plot_map_view_example.py",
      "correct": true
    },
    {
      "workflow": "raster_intersection_example.py",
      "question_idx": 1,
      "question": "- How does the `extrapolate_edges=True` parameter in `resample_to_grid` affect the resulting top ele",
      "rank": 1,
      "similarity_with_correct": 0.5732851739135443,
      "similarity_with_top": 0.5732851739135443,
      "top_match": "raster_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "raster_intersection_example.py",
      "question_idx": 2,
      "question": "- When creating an `ibound` array from a shapefile using `Raster.crop`, what are the implications of",
      "rank": 1,
      "similarity_with_correct": 0.4939602169357803,
      "similarity_with_top": 0.4939602169357803,
      "top_match": "raster_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "raster_intersection_example.py",
      "question_idx": 3,
      "question": "- How would you use `flopy.utils.Raster.crop` with the `invert=True` option to create a 'no-data' zo",
      "rank": 1,
      "similarity_with_correct": 0.538080345904818,
      "similarity_with_top": 0.538080345904818,
      "top_match": "raster_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "raster_intersection_example.py",
      "question_idx": 4,
      "question": "- Explain the process of taking a DEM in an Erdas Imagine (.img) file, reprojecting it from its nati",
      "rank": 1,
      "similarity_with_correct": 0.6181051148464287,
      "similarity_with_top": 0.6181051148464287,
      "top_match": "raster_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "raster_intersection_example.py",
      "question_idx": 5,
      "question": "- What is the functional difference between `Raster.sample_polygon()` and using `Raster.crop()` foll",
      "rank": 1,
      "similarity_with_correct": 0.4859002809321592,
      "similarity_with_top": 0.4859002809321592,
      "top_match": "raster_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "raster_intersection_example.py",
      "question_idx": 6,
      "question": "- You are receiving arrays of all 'nodata' values after resampling a cropped raster to a model grid.",
      "rank": 1,
      "similarity_with_correct": 0.48263567415803266,
      "similarity_with_top": 0.48263567415803266,
      "top_match": "raster_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "raster_intersection_example.py",
      "question_idx": 7,
      "question": "- Why does the notebook explicitly warn against using bicubic resampling (`method='cubic'`) with tri",
      "rank": 1,
      "similarity_with_correct": 0.43230880790738124,
      "similarity_with_top": 0.43230880790738124,
      "top_match": "raster_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "raster_intersection_example.py",
      "question_idx": 8,
      "question": "- When would you choose the `resample_to_grid` method with `method='median'` over `method='mean'` fo",
      "rank": 1,
      "similarity_with_correct": 0.4566697741113753,
      "similarity_with_top": 0.4566697741113753,
      "top_match": "raster_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "raster_intersection_example.py",
      "question_idx": 9,
      "question": "- Contrast the performance bottlenecks of resampling methods: why are `'nearest'` and `'linear'` dep",
      "rank": 1,
      "similarity_with_correct": 0.488067117143093,
      "similarity_with_top": 0.488067117143093,
      "top_match": "raster_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "raster_intersection_example.py",
      "question_idx": 10,
      "question": "- How does this workflow uniquely use the `flopy.utils.triangle.Triangle` class to generate a `Unstr",
      "rank": 1,
      "similarity_with_correct": 0.6272222830082772,
      "similarity_with_top": 0.6272222830082772,
      "top_match": "raster_intersection_example.py",
      "correct": true
    },
    {
      "workflow": "save_binary_data_file_example.py",
      "question_idx": 1,
      "question": "Why does this workflow instantiate a `flopy.modflow.Modflow` object if it never runs a simulation?",
      "rank": 14,
      "similarity_with_correct": 0.4559989559186813,
      "similarity_with_top": 0.5199562249697867,
      "top_match": "mf_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "save_binary_data_file_example.py",
      "question_idx": 2,
      "question": "What is the purpose of defining `kstp`, `kper`, and `pertim` in the `BinaryHeader` if the model is n",
      "rank": 1,
      "similarity_with_correct": 0.48579970868814687,
      "similarity_with_top": 0.48579970868814687,
      "top_match": "save_binary_data_file_example.py",
      "correct": true
    },
    {
      "workflow": "save_binary_data_file_example.py",
      "question_idx": 3,
      "question": "How do you use `flopy.utils.Util2d.write_bin` to save a 3D NumPy array for a multi-layer model param",
      "rank": 1,
      "similarity_with_correct": 0.49485583606801076,
      "similarity_with_top": 0.49485583606801076,
      "top_match": "save_binary_data_file_example.py",
      "correct": true
    },
    {
      "workflow": "save_binary_data_file_example.py",
      "question_idx": 4,
      "question": "Explain the role of the `header_data` argument in the `flopy.utils.Util2d.write_bin` function.",
      "rank": 1,
      "similarity_with_correct": 0.521370189934723,
      "similarity_with_top": 0.521370189934723,
      "top_match": "save_binary_data_file_example.py",
      "correct": true
    },
    {
      "workflow": "save_binary_data_file_example.py",
      "question_idx": 5,
      "question": "When would you use `flopy.utils.HeadFile` to read a file that was not generated as an output from a ",
      "rank": 5,
      "similarity_with_correct": 0.5030276691428748,
      "similarity_with_top": 0.5534320295538434,
      "top_match": "modflow_postprocessing_example.py",
      "correct": false
    },
    {
      "workflow": "save_binary_data_file_example.py",
      "question_idx": 6,
      "question": "What Python `TypeError` might you encounter if the `dtype` of your NumPy array does not match the `p",
      "rank": 1,
      "similarity_with_correct": 0.3703707788031732,
      "similarity_with_top": 0.3703707788031732,
      "top_match": "save_binary_data_file_example.py",
      "correct": true
    },
    {
      "workflow": "save_binary_data_file_example.py",
      "question_idx": 7,
      "question": "What would happen if you try to read a 'double' precision binary file using `flopy.utils.HeadFile` w",
      "rank": 1,
      "similarity_with_correct": 0.46020760899967716,
      "similarity_with_top": 0.46020760899967716,
      "top_match": "save_binary_data_file_example.py",
      "correct": true
    },
    {
      "workflow": "save_binary_data_file_example.py",
      "question_idx": 8,
      "question": "When is it more appropriate to use `flopy.utils.Util2d.write_bin` versus simply assigning an array t",
      "rank": 1,
      "similarity_with_correct": 0.5068511092885178,
      "similarity_with_top": 0.5068511092885178,
      "top_match": "save_binary_data_file_example.py",
      "correct": true
    },
    {
      "workflow": "save_binary_data_file_example.py",
      "question_idx": 9,
      "question": "For what reason would you write a custom binary file instead of a text-based array file for MODFLOW ",
      "rank": 1,
      "similarity_with_correct": 0.6111089939807355,
      "similarity_with_top": 0.6111089939807355,
      "top_match": "save_binary_data_file_example.py",
      "correct": true
    },
    {
      "workflow": "save_binary_data_file_example.py",
      "question_idx": 10,
      "question": "How does the final plot of the difference between the original and read arrays (`b - br`) serve as a",
      "rank": 1,
      "similarity_with_correct": 0.38829148329014007,
      "similarity_with_top": 0.38829148329014007,
      "top_match": "save_binary_data_file_example.py",
      "correct": true
    },
    {
      "workflow": "seawat_henry_example.py",
      "question_idx": 1,
      "question": "What is the physical meaning of the 'denseslp' parameter in the SEAWAT VDF package and how do you ca",
      "rank": 1,
      "similarity_with_correct": 0.5840595862087963,
      "similarity_with_top": 0.5840595862087963,
      "top_match": "seawat_henry_example.py",
      "correct": true
    },
    {
      "workflow": "seawat_henry_example.py",
      "question_idx": 2,
      "question": "How does SEAWAT couple the flow and transport solutions to account for variable fluid density?",
      "rank": 1,
      "similarity_with_correct": 0.6320716841069345,
      "similarity_with_top": 0.6320716841069345,
      "top_match": "seawat_henry_example.py",
      "correct": true
    },
    {
      "workflow": "seawat_henry_example.py",
      "question_idx": 3,
      "question": "How do you use the FloPy SSM package to assign a zero-concentration to freshwater injected via the W",
      "rank": 1,
      "similarity_with_correct": 0.5813618095920042,
      "similarity_with_top": 0.5813618095920042,
      "top_match": "seawat_henry_example.py",
      "correct": true
    },
    {
      "workflow": "seawat_henry_example.py",
      "question_idx": 4,
      "question": "In this Henry problem setup, how is the seawater boundary's constant head and constant concentration",
      "rank": 2,
      "similarity_with_correct": 0.6290305102561672,
      "similarity_with_top": 0.6611719750613365,
      "top_match": "seawat_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "seawat_henry_example.py",
      "question_idx": 5,
      "question": "How do you configure the LPF package with `ipakcb` to save the cell-by-cell flows required for creat",
      "rank": 14,
      "similarity_with_correct": 0.3971450948852145,
      "similarity_with_top": 0.4789041670450984,
      "top_match": "mf_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "seawat_henry_example.py",
      "question_idx": 6,
      "question": "What is a likely cause of a 'FLUID DENSITY IS OUT OF RANGE' error when running a SEAWAT model?",
      "rank": 1,
      "similarity_with_correct": 0.5919931836506471,
      "similarity_with_top": 0.5919931836506471,
      "top_match": "seawat_henry_example.py",
      "correct": true
    },
    {
      "workflow": "seawat_henry_example.py",
      "question_idx": 7,
      "question": "If my SEAWAT simulation runs but produces a sharp, unstable interface instead of a smooth saltwater ",
      "rank": 4,
      "similarity_with_correct": 0.5911096074043518,
      "similarity_with_top": 0.6109416042465912,
      "top_match": "swi2package_example5.py",
      "correct": false
    },
    {
      "workflow": "seawat_henry_example.py",
      "question_idx": 8,
      "question": "For modeling a coastal boundary, when is it more appropriate to use a constant-head boundary (BAS `i",
      "rank": 12,
      "similarity_with_correct": 0.3876396981771733,
      "similarity_with_top": 0.5122262235221859,
      "top_match": "lake_example.py",
      "correct": false
    },
    {
      "workflow": "seawat_henry_example.py",
      "question_idx": 9,
      "question": "When modeling freshwater inflow, what are the advantages of using the WEL package as shown here vers",
      "rank": 7,
      "similarity_with_correct": 0.5755525966580101,
      "similarity_with_top": 0.5947541574189923,
      "top_match": "mf6_complex_model_example.py",
      "correct": false
    },
    {
      "workflow": "seawat_henry_example.py",
      "question_idx": 10,
      "question": "How can you instruct FloPy to write the hydraulic conductivity array to a separate binary file inste",
      "rank": 12,
      "similarity_with_correct": 0.4789054618478725,
      "similarity_with_top": 0.5599470444236161,
      "top_match": "save_binary_data_file_example.py",
      "correct": false
    },
    {
      "workflow": "seawat_tutorial01.py",
      "question_idx": 1,
      "question": "In SEAWAT, what is the function of the `denseslp` parameter in the VDF package for simulating the He",
      "rank": 2,
      "similarity_with_correct": 0.6696006488732362,
      "similarity_with_top": 0.6872429797004449,
      "top_match": "seawat_henry_example.py",
      "correct": false
    },
    {
      "workflow": "seawat_tutorial01.py",
      "question_idx": 2,
      "question": "How does SEAWAT couple the MODFLOW flow solution with the MT3DMS transport solution in each time ste",
      "rank": 1,
      "similarity_with_correct": 0.6358489568024771,
      "similarity_with_top": 0.6358489568024771,
      "top_match": "seawat_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "seawat_tutorial01.py",
      "question_idx": 3,
      "question": "How do you use the FloPy `Mt3dSsm` package to assign a fixed seawater concentration to a constant-he",
      "rank": 1,
      "similarity_with_correct": 0.6394922697585247,
      "similarity_with_top": 0.6394922697585247,
      "top_match": "seawat_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "seawat_tutorial01.py",
      "question_idx": 4,
      "question": "For the Henry problem, why is the `WEL` package used to represent the inland freshwater boundary ins",
      "rank": 1,
      "similarity_with_correct": 0.6359907639848931,
      "similarity_with_top": 0.6359907639848931,
      "top_match": "seawat_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "seawat_tutorial01.py",
      "question_idx": 5,
      "question": "What does setting `mixelm = 0` in the `Mt3dAdv` package imply about the numerical method used for th",
      "rank": 2,
      "similarity_with_correct": 0.37949082451435345,
      "similarity_with_top": 0.4962079121993834,
      "top_match": "mt3dms_examples.py",
      "correct": false
    },
    {
      "workflow": "seawat_tutorial01.py",
      "question_idx": 6,
      "question": "My SEAWAT model is showing numerical instability and failing to converge. Could the `firstdt` parame",
      "rank": 1,
      "similarity_with_correct": 0.5925536954687958,
      "similarity_with_top": 0.5925536954687958,
      "top_match": "seawat_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "seawat_tutorial01.py",
      "question_idx": 7,
      "question": "My SEAWAT simulation runs, but the saltwater wedge is not forming and the concentration field is uni",
      "rank": 1,
      "similarity_with_correct": 0.6553132613327393,
      "similarity_with_top": 0.6553132613327393,
      "top_match": "seawat_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "seawat_tutorial01.py",
      "question_idx": 8,
      "question": "For modeling coastal saltwater intrusion, when is it necessary to use a coupled code like SEAWAT ver",
      "rank": 1,
      "similarity_with_correct": 0.6343142044922545,
      "similarity_with_top": 0.6343142044922545,
      "top_match": "seawat_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "seawat_tutorial01.py",
      "question_idx": 9,
      "question": "In this Henry problem setup, what is the advantage of using a `WEL` package for inflow vs. using a h",
      "rank": 1,
      "similarity_with_correct": 0.6079543256378842,
      "similarity_with_top": 0.6079543256378842,
      "top_match": "seawat_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "seawat_tutorial01.py",
      "question_idx": 10,
      "question": "How does the specific combination of a freshwater `WEL` boundary on the left and a saltwater `BAS` b",
      "rank": 1,
      "similarity_with_correct": 0.5828753031528053,
      "similarity_with_top": 0.5828753031528053,
      "top_match": "seawat_tutorial01.py",
      "correct": true
    },
    {
      "workflow": "sfrpackage_example.py",
      "question_idx": 1,
      "question": "In the MODFLOW-2005 SFR2 package, what is the purpose of the `const` variable and what value should ",
      "rank": 1,
      "similarity_with_correct": 0.5162995295713989,
      "similarity_with_top": 0.5162995295713989,
      "top_match": "sfrpackage_example.py",
      "correct": true
    },
    {
      "workflow": "sfrpackage_example.py",
      "question_idx": 2,
      "question": "How does the SFR2 package handle flow routing when a stream reach becomes unsaturated (`depth` <= 0)",
      "rank": 1,
      "similarity_with_correct": 0.5543593655805212,
      "similarity_with_top": 0.5543593655805212,
      "top_match": "sfrpackage_example.py",
      "correct": true
    },
    {
      "workflow": "sfrpackage_example.py",
      "question_idx": 3,
      "question": "How do you structure the `channel_geometry_data` dictionary in FloPy for an SFR2 segment with `icalc",
      "rank": 1,
      "similarity_with_correct": 0.5454297468211756,
      "similarity_with_top": 0.5454297468211756,
      "top_match": "sfrpackage_example.py",
      "correct": true
    },
    {
      "workflow": "sfrpackage_example.py",
      "question_idx": 4,
      "question": "What information is written to the text file specified by the `istcb2` flag in the SFR2 package inpu",
      "rank": 1,
      "similarity_with_correct": 0.4519478407098565,
      "similarity_with_top": 0.4519478407098565,
      "top_match": "sfrpackage_example.py",
      "correct": true
    },
    {
      "workflow": "sfrpackage_example.py",
      "question_idx": 5,
      "question": "In the context of the Prudic (2004) example, why must `reach_data` be defined as a numpy record arra",
      "rank": 1,
      "similarity_with_correct": 0.36791905666450436,
      "similarity_with_top": 0.36791905666450436,
      "top_match": "sfrpackage_example.py",
      "correct": true
    },
    {
      "workflow": "sfrpackage_example.py",
      "question_idx": 6,
      "question": "If my MODFLOW-2005 model fails with an error related to 'STREAM SEGMENT OUTFALL', what is a likely c",
      "rank": 1,
      "similarity_with_correct": 0.5909264051526169,
      "similarity_with_top": 0.5909264051526169,
      "top_match": "sfrpackage_example.py",
      "correct": true
    },
    {
      "workflow": "sfrpackage_example.py",
      "question_idx": 7,
      "question": "After running a model, the 'STREAM LEAKAGE' values in the cell-by-cell budget file are all zero, but",
      "rank": 2,
      "similarity_with_correct": 0.5014421686708526,
      "similarity_with_top": 0.5067114255837714,
      "top_match": "mf_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "sfrpackage_example.py",
      "question_idx": 8,
      "question": "For a natural stream with a complex, irregular channel, when is it more appropriate to use `icalc=4`",
      "rank": 1,
      "similarity_with_correct": 0.49709523145286105,
      "similarity_with_top": 0.49709523145286105,
      "top_match": "sfrpackage_example.py",
      "correct": true
    },
    {
      "workflow": "sfrpackage_example.py",
      "question_idx": 9,
      "question": "How does the SFR2 package's method of calculating leakage differ fundamentally from the River (RIV) ",
      "rank": 1,
      "similarity_with_correct": 0.561320935499807,
      "similarity_with_top": 0.561320935499807,
      "top_match": "sfrpackage_example.py",
      "correct": true
    },
    {
      "workflow": "sfrpackage_example.py",
      "question_idx": 10,
      "question": "How does this workflow use the `load_only` parameter in `flopy.modflow.Modflow.load` to efficiently ",
      "rank": 1,
      "similarity_with_correct": 0.5685492841273208,
      "similarity_with_top": 0.5685492841273208,
      "top_match": "sfrpackage_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_export_example.py",
      "question_idx": 1,
      "question": "In FloPy, how can I export a MODFLOW-2005 model defined in local coordinates to a shapefile in a pro",
      "rank": 1,
      "similarity_with_correct": 0.543283295922693,
      "similarity_with_top": 0.543283295922693,
      "top_match": "shapefile_export_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_export_example.py",
      "question_idx": 2,
      "question": "What is the difference between using the `m.lpf.export()` method and creating a custom shapefile of ",
      "rank": 1,
      "similarity_with_correct": 0.5629108249890928,
      "similarity_with_top": 0.5629108249890928,
      "top_match": "shapefile_export_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_export_example.py",
      "question_idx": 3,
      "question": "How can I set up a FloPy workflow to combine data from the WEL and RIV packages into a single polygo",
      "rank": 1,
      "similarity_with_correct": 0.5986323250399932,
      "similarity_with_top": 0.5986323250399932,
      "top_match": "shapefile_export_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_export_example.py",
      "question_idx": 4,
      "question": "What is the purpose of the `sparse=True` argument when calling the `.export()` method on a `flopy.mo",
      "rank": 1,
      "similarity_with_correct": 0.53405203341681,
      "similarity_with_top": 0.53405203341681,
      "top_match": "shapefile_export_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_export_example.py",
      "question_idx": 5,
      "question": "How do I use `flopy.export.shapefile_utils.recarray2shp` to export a pandas DataFrame of well locati",
      "rank": 1,
      "similarity_with_correct": 0.6024353296565105,
      "similarity_with_top": 0.6024353296565105,
      "top_match": "shapefile_export_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_export_example.py",
      "question_idx": 6,
      "question": "What could cause a `TypeError: GEOSGeom_createPolygon_r returned a NULL pointer` when using `recarra",
      "rank": 1,
      "similarity_with_correct": 0.4972863935074806,
      "similarity_with_top": 0.4972863935074806,
      "top_match": "shapefile_export_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_export_example.py",
      "question_idx": 7,
      "question": "If my list of `flopy.utils.geometry` objects has a different number of items than the rows in my num",
      "rank": 1,
      "similarity_with_correct": 0.477349452094883,
      "similarity_with_top": 0.477349452094883,
      "top_match": "shapefile_export_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_export_example.py",
      "question_idx": 8,
      "question": "For visualizing boundary conditions, when is it better to use `m.wel.export()` versus creating a cus",
      "rank": 1,
      "similarity_with_correct": 0.5180911492190279,
      "similarity_with_top": 0.5180911492190279,
      "top_match": "shapefile_export_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_export_example.py",
      "question_idx": 9,
      "question": "When would I choose to use `shp2recarray` to read a shapefile instead of a library like GeoPandas in",
      "rank": 1,
      "similarity_with_correct": 0.5812618732037458,
      "similarity_with_top": 0.5812618732037458,
      "top_match": "shapefile_export_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_export_example.py",
      "question_idx": 10,
      "question": "How can I perform an on-the-fly unit conversion from feet to meters on my model grid's coordinates *",
      "rank": 1,
      "similarity_with_correct": 0.4760838283920098,
      "similarity_with_top": 0.4760838283920098,
      "top_match": "shapefile_export_example.py",
      "correct": true
    },
    {
      "workflow": "shapefile_feature_examples.py",
      "question_idx": 1,
      "question": "How can I use `dis.check()` in FloPy to find cells with negative layer thickness and export them to ",
      "rank": 1,
      "similarity_with_correct": 0.5841480371793671,
      "similarity_with_top": 0.5841480371793671,
      "top_match": "shapefile_feature_examples.py",
      "correct": true
    },
    {
      "workflow": "shapefile_feature_examples.py",
      "question_idx": 2,
      "question": "What is the purpose of the `flopy.utils.geometry` objects like `Polygon` and `LineString` when creat",
      "rank": 1,
      "similarity_with_correct": 0.520495823798692,
      "similarity_with_top": 0.520495823798692,
      "top_match": "shapefile_feature_examples.py",
      "correct": true
    },
    {
      "workflow": "shapefile_feature_examples.py",
      "question_idx": 3,
      "question": "How do I set up a `PathlineFile` object in FloPy to read a MODPATH `.pathline` file and convert the ",
      "rank": 1,
      "similarity_with_correct": 0.536446446618684,
      "similarity_with_top": 0.536446446618684,
      "top_match": "shapefile_feature_examples.py",
      "correct": true
    },
    {
      "workflow": "shapefile_feature_examples.py",
      "question_idx": 4,
      "question": "What are the required arguments for the `flopy.export.shapefile_utils.recarray2shp` function to writ",
      "rank": 2,
      "similarity_with_correct": 0.49463664716082156,
      "similarity_with_top": 0.5469359648278138,
      "top_match": "shapefile_export_example.py",
      "correct": false
    },
    {
      "workflow": "shapefile_feature_examples.py",
      "question_idx": 5,
      "question": "How do you use the `EndpointFile` class to extract starting point coordinates (`x0`, `y0`) and creat",
      "rank": 1,
      "similarity_with_correct": 0.33907479911037464,
      "similarity_with_top": 0.33907479911037464,
      "top_match": "shapefile_feature_examples.py",
      "correct": true
    },
    {
      "workflow": "shapefile_feature_examples.py",
      "question_idx": 6,
      "question": "How do I resolve a `DescartesError` when calling the `.plot()` method on a FloPy geometry object?",
      "rank": 1,
      "similarity_with_correct": 0.49711627767036765,
      "similarity_with_top": 0.49711627767036765,
      "top_match": "shapefile_feature_examples.py",
      "correct": true
    },
    {
      "workflow": "shapefile_feature_examples.py",
      "question_idx": 7,
      "question": "What information does the `chk.summary_array` provide after running a check on a DIS package, and ho",
      "rank": 1,
      "similarity_with_correct": 0.4695494788430581,
      "similarity_with_top": 0.4695494788430581,
      "top_match": "shapefile_feature_examples.py",
      "correct": true
    },
    {
      "workflow": "shapefile_feature_examples.py",
      "question_idx": 8,
      "question": "When would I use the low-level `recarray2shp` function versus a higher-level plotting method like `m",
      "rank": 2,
      "similarity_with_correct": 0.48524206441757256,
      "similarity_with_top": 0.4902904159679171,
      "top_match": "shapefile_export_example.py",
      "correct": false
    },
    {
      "workflow": "shapefile_feature_examples.py",
      "question_idx": 9,
      "question": "For a rotated model grid, what is the difference between using `modelmap.plot_pathline()` versus man",
      "rank": 2,
      "similarity_with_correct": 0.4210432266130677,
      "similarity_with_top": 0.4449182643864218,
      "top_match": "modelgrid_examples.py",
      "correct": false
    },
    {
      "workflow": "shapefile_feature_examples.py",
      "question_idx": 10,
      "question": "How can I create a shapefile of specific model cells based on a NumPy array of their (i, j) indices ",
      "rank": 4,
      "similarity_with_correct": 0.41114718014409707,
      "similarity_with_top": 0.4765526155014228,
      "top_match": "modelgrid_examples.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example1.py",
      "question_idx": 1,
      "question": "What is the physical meaning of `ISTRAT=1` in the SWI2 package, and how does it couple the `zeta` su",
      "rank": 1,
      "similarity_with_correct": 0.6075141072276298,
      "similarity_with_top": 0.6075141072276298,
      "top_match": "swi2package_example1.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example1.py",
      "question_idx": 2,
      "question": "How does the SWI2 sharp-interface approach fundamentally differ from a full variable-density transpo",
      "rank": 4,
      "similarity_with_correct": 0.6169330788293262,
      "similarity_with_top": 0.6455445169730243,
      "top_match": "swi2package_example5.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example1.py",
      "question_idx": 3,
      "question": "How do you configure the `zeta` parameter in `flopy.modflow.ModflowSwi2` to represent an initially t",
      "rank": 1,
      "similarity_with_correct": 0.6322465723924706,
      "similarity_with_top": 0.6322465723924706,
      "top_match": "swi2package_example1.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example1.py",
      "question_idx": 4,
      "question": "How does the `isource` array in the SWI2 package work in tandem with the `ModflowWel` package to sim",
      "rank": 3,
      "similarity_with_correct": 0.6350227592907802,
      "similarity_with_top": 0.6485420148153782,
      "top_match": "swi2package_example4.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example1.py",
      "question_idx": 5,
      "question": "Why is the `ssz` (effective porosity) parameter required in the SWI2 package for a transient simulat",
      "rank": 1,
      "similarity_with_correct": 0.5982105261520136,
      "similarity_with_top": 0.5982105261520136,
      "top_match": "swi2package_example1.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example1.py",
      "question_idx": 6,
      "question": "What does the error 'ZETA SURFACE HAS BECOME VERTICAL' indicate in a SWI2 simulation, and what model",
      "rank": 1,
      "similarity_with_correct": 0.5633393834746221,
      "similarity_with_top": 0.5633393834746221,
      "top_match": "swi2package_example1.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example1.py",
      "question_idx": 7,
      "question": "If a SWI2 model runs but the interface does not move, what is a likely cause related to the flow fie",
      "rank": 1,
      "similarity_with_correct": 0.6082328363565404,
      "similarity_with_top": 0.6082328363565404,
      "top_match": "swi2package_example1.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example1.py",
      "question_idx": 8,
      "question": "For modeling saltwater upconing, when is it more appropriate to use the SWI2 package versus the SEAW",
      "rank": 5,
      "similarity_with_correct": 0.6062857373878425,
      "similarity_with_top": 0.6749833076135602,
      "top_match": "swi2package_example5.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example1.py",
      "question_idx": 9,
      "question": "Compare the setup of a freshwater injection barrier using SWI2's `isource` parameter versus setting ",
      "rank": 3,
      "similarity_with_correct": 0.5683069417313755,
      "similarity_with_top": 0.5895639658182993,
      "top_match": "swi2package_example3.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example1.py",
      "question_idx": 10,
      "question": "How would you modify this script to calculate and plot the displacement of the interface toe and com",
      "rank": 1,
      "similarity_with_correct": 0.46044122453760233,
      "similarity_with_top": 0.46044122453760233,
      "top_match": "swi2package_example1.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example2.py",
      "question_idx": 1,
      "question": "What is the physical meaning of the `istrat=1` (stratified) option in the SWI2 package, and how does",
      "rank": 1,
      "similarity_with_correct": 0.4673992431702867,
      "similarity_with_top": 0.4673992431702867,
      "top_match": "swi2package_example2.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example2.py",
      "question_idx": 2,
      "question": "In SEAWAT, how does the VDF package use the `denseslp` parameter to couple the transport solution fr",
      "rank": 5,
      "similarity_with_correct": 0.5778631303458566,
      "similarity_with_top": 0.6730867050944591,
      "top_match": "seawat_henry_example.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example2.py",
      "question_idx": 3,
      "question": "How would you set up the `zeta` parameter in `ModflowSwi2` to represent two initial interfaces tilte",
      "rank": 3,
      "similarity_with_correct": 0.5263596380883706,
      "similarity_with_top": 0.5852686095916626,
      "top_match": "swi2package_example1.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example2.py",
      "question_idx": 4,
      "question": "What is the function of the `isource` array in the `ModflowSwi2` package, and how does it determine ",
      "rank": 4,
      "similarity_with_correct": 0.5707066609449607,
      "similarity_with_top": 0.5981259735511876,
      "top_match": "swi2package_example3.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example2.py",
      "question_idx": 5,
      "question": "Why is a Total Variation Diminishing (TVD) scheme (`mixelm=-1`) in the `Mt3dAdv` package a good choi",
      "rank": 1,
      "similarity_with_correct": 0.5654038225300368,
      "similarity_with_top": 0.5654038225300368,
      "top_match": "swi2package_example2.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example2.py",
      "question_idx": 6,
      "question": "My SWI2 model results in ZETA surfaces that are numerically unstable and oscillating wildly. What pa",
      "rank": 3,
      "similarity_with_correct": 0.519744792533794,
      "similarity_with_top": 0.5510214277474583,
      "top_match": "swi2package_example1.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example2.py",
      "question_idx": 7,
      "question": "My SEAWAT model runs extremely slowly or fails to converge between coupling timesteps. What VDF pack",
      "rank": 3,
      "similarity_with_correct": 0.5820129283261478,
      "similarity_with_top": 0.5933412924503998,
      "top_match": "seawat_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example2.py",
      "question_idx": 8,
      "question": "For a coastal aquifer with a very thin and sharp transition zone, when would the SWI2 package be a m",
      "rank": 3,
      "similarity_with_correct": 0.6805086478496354,
      "similarity_with_top": 0.6995813840715275,
      "top_match": "swi2package_example3.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example2.py",
      "question_idx": 9,
      "question": "As shown in this workflow, why does the SWI2 stratified option (`istrat=1`) produce different interf",
      "rank": 1,
      "similarity_with_correct": 0.591144645876012,
      "similarity_with_top": 0.591144645876012,
      "top_match": "swi2package_example2.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example2.py",
      "question_idx": 10,
      "question": "How does this workflow's use of an initial, non-equilibrium tilted interface specifically test a mod",
      "rank": 1,
      "similarity_with_correct": 0.5645132338054679,
      "similarity_with_top": 0.5645132338054679,
      "top_match": "swi2package_example2.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example3.py",
      "question_idx": 1,
      "question": "What does the `istrat=1` option in MODFLOW's SWI2 package signify about how fluid density is coupled",
      "rank": 3,
      "similarity_with_correct": 0.5752157800643878,
      "similarity_with_top": 0.5826831660933445,
      "top_match": "swi2package_example2.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example3.py",
      "question_idx": 2,
      "question": "How does the SWI2 package's sharp-interface approach for simulating saltwater intrusion differ compu",
      "rank": 1,
      "similarity_with_correct": 0.7280284231136209,
      "similarity_with_top": 0.7280284231136209,
      "top_match": "swi2package_example3.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example3.py",
      "question_idx": 3,
      "question": "How do you configure the `isource` array in the SWI2 package to correctly represent a GHB as an ocea",
      "rank": 1,
      "similarity_with_correct": 0.6166760056987215,
      "similarity_with_top": 0.6166760056987215,
      "top_match": "swi2package_example3.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example3.py",
      "question_idx": 4,
      "question": "In the SWI2 package, what is the purpose of the initial `zeta` array, and how is it defined in this ",
      "rank": 2,
      "similarity_with_correct": 0.6180497039745875,
      "similarity_with_top": 0.6403027187518522,
      "top_match": "swi2package_example1.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example3.py",
      "question_idx": 5,
      "question": "When using the WEL package to inject freshwater into a SWI2 model, how does the package know to trea",
      "rank": 1,
      "similarity_with_correct": 0.6321567127348742,
      "similarity_with_top": 0.6321567127348742,
      "top_match": "swi2package_example3.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example3.py",
      "question_idx": 6,
      "question": "If a SWI2 simulation produces an unstable, oscillating interface near the aquifer boundaries, which ",
      "rank": 1,
      "similarity_with_correct": 0.5983570644218144,
      "similarity_with_top": 0.5983570644218144,
      "top_match": "swi2package_example3.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example3.py",
      "question_idx": 7,
      "question": "What does a 'ZETASRF NOT MOVING' message in the SWI2 output list file typically indicate about the s",
      "rank": 1,
      "similarity_with_correct": 0.5277841132303365,
      "similarity_with_top": 0.5277841132303365,
      "top_match": "swi2package_example3.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example3.py",
      "question_idx": 8,
      "question": "For a regional coastal model simulating interface movement over thousands of years, why might you ch",
      "rank": 1,
      "similarity_with_correct": 0.7004410430133347,
      "similarity_with_top": 0.7004410430133347,
      "top_match": "swi2package_example3.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example3.py",
      "question_idx": 9,
      "question": "When is it appropriate to use the Ghyben-Herzberg equation, as calculated in this script's post-proc",
      "rank": 1,
      "similarity_with_correct": 0.5888169840747051,
      "similarity_with_top": 0.5888169840747051,
      "top_match": "swi2package_example3.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example3.py",
      "question_idx": 10,
      "question": "Explain how this workflow simulates a 2000-year transient interface response using two steady-state ",
      "rank": 1,
      "similarity_with_correct": 0.684524684987873,
      "similarity_with_top": 0.684524684987873,
      "top_match": "swi2package_example3.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example4.py",
      "question_idx": 1,
      "question": "What does the `istrat=1` flag signify in the SWI2 package, and how does it enable the simulation of ",
      "rank": 4,
      "similarity_with_correct": 0.5380688821425496,
      "similarity_with_top": 0.5936478114830475,
      "top_match": "swi2package_example3.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example4.py",
      "question_idx": 2,
      "question": "Why would you choose the SWI2 sharp-interface approach for a coastal model instead of a fully-couple",
      "rank": 5,
      "similarity_with_correct": 0.5849513159374332,
      "similarity_with_top": 0.648813988230736,
      "top_match": "swi2package_example5.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example4.py",
      "question_idx": 3,
      "question": "How do you configure the WEL and SWI2 packages together to simulate a saltwater 'scavenger' well int",
      "rank": 1,
      "similarity_with_correct": 0.6890798413450672,
      "similarity_with_top": 0.6890798413450672,
      "top_match": "swi2package_example4.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example4.py",
      "question_idx": 4,
      "question": "What is the function of setting `isource = -2` in the SWI2 package for cells that also have a Genera",
      "rank": 2,
      "similarity_with_correct": 0.44861281803194364,
      "similarity_with_top": 0.47967811821449013,
      "top_match": "swi2package_example3.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example4.py",
      "question_idx": 5,
      "question": "In this workflow's GHB setup, what does the resistance of '40 days' physically represent, and how wa",
      "rank": 21,
      "similarity_with_correct": 0.350786170042213,
      "similarity_with_top": 0.4742324803950227,
      "top_match": "mf_watertable_recharge_example.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example4.py",
      "question_idx": 6,
      "question": "If the ZETA surface appears numerically unstable or oscillates between timesteps, which SWI2 paramet",
      "rank": 5,
      "similarity_with_correct": 0.5014737267825883,
      "similarity_with_top": 0.5567661307011672,
      "top_match": "swi2package_example3.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example4.py",
      "question_idx": 7,
      "question": "What does it mean if the SWI2 solver requires the maximum number of adaptation sub-timesteps (`nadpt",
      "rank": 4,
      "similarity_with_correct": 0.4488892762388321,
      "similarity_with_top": 0.4734719509020147,
      "top_match": "swi2package_example3.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example4.py",
      "question_idx": 8,
      "question": "For a simple coastal cross-section, when is it more appropriate to use the simpler GCG package versu",
      "rank": 2,
      "similarity_with_correct": 0.5345989644086744,
      "similarity_with_top": 0.5461334270948235,
      "top_match": "swi2package_example3.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example4.py",
      "question_idx": 9,
      "question": "How does defining a saltwater well using `SWI2(isource=2)` differ fundamentally from defining a salt",
      "rank": 1,
      "similarity_with_correct": 0.655705235510274,
      "similarity_with_top": 0.655705235510274,
      "top_match": "swi2package_example4.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example4.py",
      "question_idx": 10,
      "question": "What is the unique purpose of creating two separate `flopy.modflow.Modflow` instances (`ml` and `ml2",
      "rank": 36,
      "similarity_with_correct": 0.4462429054257647,
      "similarity_with_top": 0.5053020350652461,
      "top_match": "mf6_mnw2_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example5.py",
      "question_idx": 1,
      "question": "What is the physical meaning of the 'stratified density' option (`istrat=1`) in the SWI2 package?",
      "rank": 4,
      "similarity_with_correct": 0.42793688906925587,
      "similarity_with_top": 0.5016941213715294,
      "top_match": "swi2package_example2.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example5.py",
      "question_idx": 2,
      "question": "In SEAWAT's VDF package, what does the `denseslp` parameter represent and how is it calculated?",
      "rank": 4,
      "similarity_with_correct": 0.5072258412372033,
      "similarity_with_top": 0.5663200621398654,
      "top_match": "seawat_henry_example.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example5.py",
      "question_idx": 3,
      "question": "How do you configure the SWI2 `isource` array to simulate a constant-head boundary with freshwater i",
      "rank": 5,
      "similarity_with_correct": 0.5782174455380644,
      "similarity_with_top": 0.6312917426968585,
      "top_match": "swi2package_example3.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example5.py",
      "question_idx": 4,
      "question": "How do you use the SSM package in SEAWAT to ensure a pumping well extracts water at the aquifer's am",
      "rank": 4,
      "similarity_with_correct": 0.5818660825760795,
      "similarity_with_top": 0.596742302415699,
      "top_match": "seawat_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example5.py",
      "question_idx": 5,
      "question": "How would you set up the ADV package in MT3DMS to use the Method of Characteristics (MOC) for advect",
      "rank": 2,
      "similarity_with_correct": 0.47613585850704293,
      "similarity_with_top": 0.5347099736294094,
      "top_match": "mt3dms_examples.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example5.py",
      "question_idx": 6,
      "question": "My SWI2 model fails to converge. What do the `zclose` and `rclose` parameters in the SWI2-specific s",
      "rank": 2,
      "similarity_with_correct": 0.479227965993877,
      "similarity_with_top": 0.49015469167397796,
      "top_match": "swi2package_example1.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example5.py",
      "question_idx": 7,
      "question": "My SEAWAT simulation results in 'checkerboard' concentration patterns. What is a likely cause relate",
      "rank": 3,
      "similarity_with_correct": 0.565719679406075,
      "similarity_with_top": 0.5895246893438713,
      "top_match": "seawat_henry_example.py",
      "correct": false
    },
    {
      "workflow": "swi2package_example5.py",
      "question_idx": 8,
      "question": "For modeling a thin, sharp transition zone, when is the SWI2 package a better choice than a full SEA",
      "rank": 1,
      "similarity_with_correct": 0.6307821544508823,
      "similarity_with_top": 0.6307821544508823,
      "top_match": "swi2package_example5.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example5.py",
      "question_idx": 9,
      "question": "When modeling coastal pumping, what is the key difference between using the WEL package in SWI2 vers",
      "rank": 1,
      "similarity_with_correct": 0.6788295591134045,
      "similarity_with_top": 0.6788295591134045,
      "top_match": "swi2package_example5.py",
      "correct": true
    },
    {
      "workflow": "swi2package_example5.py",
      "question_idx": 10,
      "question": "How does this workflow modify the LPF package's hydraulic conductivity array (`hk`) to approximate r",
      "rank": 7,
      "similarity_with_correct": 0.5103839236348753,
      "similarity_with_top": 0.5588377175507753,
      "top_match": "groundwater_paper_example_1.py",
      "correct": false
    },
    {
      "workflow": "uzf_example.py",
      "question_idx": 1,
      "question": "What is the physical meaning of `iuzfopt=1` in the MODFLOW-2005 UZF1 package, and how does it relate",
      "rank": 1,
      "similarity_with_correct": 0.5853300103689015,
      "similarity_with_top": 0.5853300103689015,
      "top_match": "uzf_example.py",
      "correct": true
    },
    {
      "workflow": "uzf_example.py",
      "question_idx": 2,
      "question": "How does the UZF1 package's kinematic-wave approximation for unsaturated flow differ from solving th",
      "rank": 1,
      "similarity_with_correct": 0.5736384626962209,
      "similarity_with_top": 0.5736384626962209,
      "top_match": "uzf_example.py",
      "correct": true
    },
    {
      "workflow": "uzf_example.py",
      "question_idx": 3,
      "question": "How do you configure the `uzgag` dictionary in FloPy to output a time-series of the water content pr",
      "rank": 1,
      "similarity_with_correct": 0.5372294867524341,
      "similarity_with_top": 0.5372294867524341,
      "top_match": "uzf_example.py",
      "correct": true
    },
    {
      "workflow": "uzf_example.py",
      "question_idx": 4,
      "question": "Explain the roles of the `irunbnd` array and the `irunflg` flag in routing surface runoff from the U",
      "rank": 1,
      "similarity_with_correct": 0.5917386227994689,
      "similarity_with_top": 0.5917386227994689,
      "top_match": "uzf_example.py",
      "correct": true
    },
    {
      "workflow": "uzf_example.py",
      "question_idx": 5,
      "question": "What value should `iuzfcb2` be set to in the UZF package to save binary recharge and groundwater ET ",
      "rank": 1,
      "similarity_with_correct": 0.6017395135438297,
      "similarity_with_top": 0.6017395135438297,
      "top_match": "uzf_example.py",
      "correct": true
    },
    {
      "workflow": "uzf_example.py",
      "question_idx": 6,
      "question": "My MODFLOW-2005 UZF simulation is producing excessive surface runoff and negligible recharge. What p",
      "rank": 1,
      "similarity_with_correct": 0.6026607780677116,
      "similarity_with_top": 0.6026607780677116,
      "top_match": "uzf_example.py",
      "correct": true
    },
    {
      "workflow": "uzf_example.py",
      "question_idx": 7,
      "question": "I'm getting a file-not-found error for my UZF gage output (e.g., `UZFtest2.uzf67.out`) even though t",
      "rank": 1,
      "similarity_with_correct": 0.5118842011090344,
      "similarity_with_top": 0.5118842011090344,
      "top_match": "uzf_example.py",
      "correct": true
    },
    {
      "workflow": "uzf_example.py",
      "question_idx": 8,
      "question": "When would you choose to use the comprehensive UZF package over the simpler RCH and EVT packages for",
      "rank": 1,
      "similarity_with_correct": 0.5342264755796253,
      "similarity_with_top": 0.5342264755796253,
      "top_match": "uzf_example.py",
      "correct": true
    },
    {
      "workflow": "uzf_example.py",
      "question_idx": 9,
      "question": "For simulating stream-aquifer interaction, what is the key advantage of using the SFR package over t",
      "rank": 1,
      "similarity_with_correct": 0.6345112216543849,
      "similarity_with_top": 0.6345112216543849,
      "top_match": "uzf_example.py",
      "correct": true
    },
    {
      "workflow": "uzf_example.py",
      "question_idx": 10,
      "question": "This workflow programmatically removes old external file references from a loaded model object befor",
      "rank": 1,
      "similarity_with_correct": 0.49888804851458296,
      "similarity_with_top": 0.49888804851458296,
      "top_match": "uzf_example.py",
      "correct": true
    },
    {
      "workflow": "vtk_pathlines_example.py",
      "question_idx": 1,
      "question": "In MODPATH 7, what is the purpose of the `simulationtype='combined'` option and what two files does ",
      "rank": 2,
      "similarity_with_correct": 0.45577099517926106,
      "similarity_with_top": 0.46568388764532276,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": false
    },
    {
      "workflow": "vtk_pathlines_example.py",
      "question_idx": 2,
      "question": "How do you use `zonedataoption='on'` in the `Modpath7Sim` package to track which particles terminate",
      "rank": 3,
      "similarity_with_correct": 0.4978195377233082,
      "similarity_with_top": 0.5232149802458856,
      "top_match": "modpath6_example.py",
      "correct": false
    },
    {
      "workflow": "vtk_pathlines_example.py",
      "question_idx": 3,
      "question": "How do you set up a `ParticleGroupLRCTemplate` in FloPy to release particles evenly within a 2x2 blo",
      "rank": 2,
      "similarity_with_correct": 0.37265402496938127,
      "similarity_with_top": 0.41191626200231507,
      "top_match": "pest_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "vtk_pathlines_example.py",
      "question_idx": 4,
      "question": "How do you use the `flopy.export.vtk.Vtk` class to export both a MODFLOW grid and MODPATH pathlines ",
      "rank": 2,
      "similarity_with_correct": 0.5887404051260379,
      "similarity_with_top": 0.6221258070361988,
      "top_match": "export_vtk_tutorial.py",
      "correct": false
    },
    {
      "workflow": "vtk_pathlines_example.py",
      "question_idx": 5,
      "question": "When using `vtk.to_pyvista()`, the pathlines are just a cloud of points. How can I reconstruct the i",
      "rank": 1,
      "similarity_with_correct": 0.5027742238885564,
      "similarity_with_top": 0.5027742238885564,
      "top_match": "vtk_pathlines_example.py",
      "correct": true
    },
    {
      "workflow": "vtk_pathlines_example.py",
      "question_idx": 6,
      "question": "My MODPATH 7 simulation runs, but no particles are captured by my wells. I have `zonedataoption='on'",
      "rank": 3,
      "similarity_with_correct": 0.4766037908127286,
      "similarity_with_top": 0.49080478509576575,
      "top_match": "modpath7_create_simulation_example.py",
      "correct": false
    },
    {
      "workflow": "vtk_pathlines_example.py",
      "question_idx": 7,
      "question": "After exporting to PyVista with `flopy.export.vtk`, my model appears flat and distorted. Which param",
      "rank": 2,
      "similarity_with_correct": 0.4656252646303672,
      "similarity_with_top": 0.5312037912846952,
      "top_match": "export_vtk_tutorial.py",
      "correct": false
    },
    {
      "workflow": "vtk_pathlines_example.py",
      "question_idx": 8,
      "question": "For creating pathlines, when should I use FloPy's built-in `PlotMapView.plot_pathline` versus export",
      "rank": 1,
      "similarity_with_correct": 0.5701342176666598,
      "similarity_with_top": 0.5701342176666598,
      "top_match": "vtk_pathlines_example.py",
      "correct": true
    },
    {
      "workflow": "vtk_pathlines_example.py",
      "question_idx": 9,
      "question": "What is the difference between defining particle starting locations with `ParticleGroup` (listing co",
      "rank": 3,
      "similarity_with_correct": 0.32565758576792575,
      "similarity_with_top": 0.35692099844435254,
      "top_match": "pest_tutorial01.py",
      "correct": false
    },
    {
      "workflow": "vtk_pathlines_example.py",
      "question_idx": 10,
      "question": "How can I programmatically create an animated GIF of particle movement using PyVista's off-screen pl",
      "rank": 1,
      "similarity_with_correct": 0.5881394641720926,
      "similarity_with_top": 0.5881394641720926,
      "top_match": "vtk_pathlines_example.py",
      "correct": true
    },
    {
      "workflow": "zonebudget_example.py",
      "question_idx": 1,
      "question": "What is the role of the external `zbud6` executable when performing a zonal budget analysis for a MO",
      "rank": 1,
      "similarity_with_correct": 0.7287142609582444,
      "similarity_with_top": 0.7287142609582444,
      "top_match": "zonebudget_example.py",
      "correct": true
    },
    {
      "workflow": "zonebudget_example.py",
      "question_idx": 2,
      "question": "In the context of `flopy.mf6`, how does the `ml.output.zonebudget()` method streamline the setup of ",
      "rank": 1,
      "similarity_with_correct": 0.6903582657082975,
      "similarity_with_top": 0.6903582657082975,
      "top_match": "zonebudget_example.py",
      "correct": true
    },
    {
      "workflow": "zonebudget_example.py",
      "question_idx": 3,
      "question": "How do you use the `aliases` dictionary when creating a `ZoneBudget` object to replace default names",
      "rank": 1,
      "similarity_with_correct": 0.4905563549927163,
      "similarity_with_top": 0.4905563549927163,
      "top_match": "zonebudget_example.py",
      "correct": true
    },
    {
      "workflow": "zonebudget_example.py",
      "question_idx": 4,
      "question": "How can you obtain a Pandas DataFrame of the net flux for 'STORAGE' and 'WELLS' across multiple time",
      "rank": 2,
      "similarity_with_correct": 0.39349435663051147,
      "similarity_with_top": 0.40504873344044257,
      "top_match": "mf_boundaries_tutorial.py",
      "correct": false
    },
    {
      "workflow": "zonebudget_example.py",
      "question_idx": 5,
      "question": "When using the `get_dataframes()` method, how would you specify `start_datetime` and `timeunit` to t",
      "rank": 5,
      "similarity_with_correct": 0.24091499328036511,
      "similarity_with_top": 0.27951205852767447,
      "top_match": "mf6_data_tutorial10.py",
      "correct": false
    },
    {
      "workflow": "zonebudget_example.py",
      "question_idx": 6,
      "question": "Why might you receive a large 'PERCENT_DISCREPANCY' in your ZoneBudget output, and what does this in",
      "rank": 1,
      "similarity_with_correct": 0.5444743030425006,
      "similarity_with_top": 0.5444743030425006,
      "top_match": "zonebudget_example.py",
      "correct": true
    },
    {
      "workflow": "zonebudget_example.py",
      "question_idx": 7,
      "question": "What is the cause of a `FileNotFoundError` when calling `zonbud.run_model(exe_name=zb6_exe)`, and ho",
      "rank": 1,
      "similarity_with_correct": 0.4491938896041894,
      "similarity_with_top": 0.4491938896041894,
      "top_match": "zonebudget_example.py",
      "correct": true
    },
    {
      "workflow": "zonebudget_example.py",
      "question_idx": 8,
      "question": "When analyzing a transient simulation, what is the practical difference between using `get_budget()`",
      "rank": 1,
      "similarity_with_correct": 0.44258199302652956,
      "similarity_with_top": 0.44258199302652956,
      "top_match": "zonebudget_example.py",
      "correct": true
    },
    {
      "workflow": "zonebudget_example.py",
      "question_idx": 9,
      "question": "For comparing fluxes from different sources, why is it more efficient to use `get_dataframes()` and ",
      "rank": 1,
      "similarity_with_correct": 0.4298779418942351,
      "similarity_with_top": 0.4298779418942351,
      "top_match": "zonebudget_example.py",
      "correct": true
    },
    {
      "workflow": "zonebudget_example.py",
      "question_idx": 10,
      "question": "How can you apply a unit conversion factor to an entire `ZoneBudget` object in a single line of code",
      "rank": 1,
      "similarity_with_correct": 0.5256280299150862,
      "similarity_with_top": 0.5256280299150862,
      "top_match": "zonebudget_example.py",
      "correct": true
    }
  ]
}